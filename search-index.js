var N=null,E="",T="t",U="u",searchIndex={};
var R=["cfg_if","nodrop","result","NoDrop","lazy_static","memoffset","scopeguard","always","try_from","try_into","borrow_mut","should_run","formatter","Strategy","ScopeGuard","type_id","deref_mut","either","Apply the function `f` on the value in the `Left` variant…","Apply the function `f` on the value in the `Right` variant…","Returns left value or computes it from a closure","Factor out a homogeneous type from an either of pairs.","into_iter","ordering","option","into_inner","adler32","rollingadler32","RollingAdler32","borrow","typeid","inflatewriter","from_zlib","inflatestream","string","InflateWriter","InflateStream","Creates a new LZW decoder. ","decode_bytes","Tries to obtain and decode a code word from `bytes`.","Creates a new bit reader","read_bits","write_bits","DecoderEarlyChange","LsbReader","MsbReader","LsbWriter","MsbWriter","BitReader","BitWriter","color_quant","Returns the RGBA color map calculated from the sample. ","NeuQuant","bitflags","unicode_width","Returns the character's displayed width in columns, or…","width_cjk","Returns the string's displayed width in columns.","UnicodeWidthChar","UnicodeWidthStr","ResultVoidExt","ResultVoidErrExt","partial_cmp","ucd_util","propertyvalues","utf8_ranges","to_owned","clone_into","utf8sequence","utf8range","Utf8Range","Utf8Sequence","Utf8Sequences","Fixpoint combinator for rust closures, generalized over…","Use `debug_assert!` to check indexing in debug mode. In…","Check slicing bounds in debug mode, otherwise just act as…","encodeutf8error","prefixes","suffixes","substrings","odds::slice","Element-finding methods for slices","Linear search for the first occurrence  `elt` in the slice.","Linear search for the last occurrence  `elt` in the slice.","Get element at index `i`.","from_ptr_len","from_slice","stride","Create Stride iterator from a slice and the element step…","stridemut","from_stride","Create Stride iterator from an existing Stride iterator","swap_ends","Swap the begin and end and reverse the stride, in effect…","Return the number of elements in the iterator.","Return a reference to the element of a stride at the given…","odds::char","odds::string","odds::slice::unalign","odds::slice::iter","odds::stride","next_back","charchunks","charwindows","size_hint","Return a reference to the element at a given index.","index_mut","revslice","Start index (inclusive)","End index (exclusive)","StringExt","StrChunksWindows","VecFindRemove","UnalignedIter","SliceCopyIter","SliceFind","SliceFindSplit","SliceIterExt","MendSlices","StrideMut","IndexRange","EncodeUtf8Error","Substrings","CharChunks","CharWindows","scoped_threadpool","StrSimError","An iterator over the values of a map.","Returns an iterator visiting all values in ascending order…","Returns an iterator visiting all key-value pairs in…","Retains only the elements specified by the predicate.","intoiterator","VacantEntry","OccupiedEntry","ValuesMut","ansi_term","A colour is one specific type of ANSI escape code, and can…","Colour #0 (foreground code `30`, background code `40`).","Colour #1 (foreground code `31`, background code `41`).","Colour #2 (foreground code `32`, background code `42`).","Colour #3 (foreground code `33`, background code `43`).","Colour #4 (foreground code `34`, background code `44`).","Colour #5 (foreground code `35`, background code `45`).","Colour #6 (foreground code `36`, background code `46`).","Colour #7 (foreground code `37`, background code `47`).","A colour number from 0 to 255, for use in 256-colour…","A 24-bit RGB color, as specified by ISO-8613-3.","Returns a `Style` with the hidden property set.","Returns a `Style` with the bold property set.","Returns a `Style` with the dimmed property set.","Returns a `Style` with the italic property set.","underline","Returns a `Style` with the underline property set.","Returns a `Style` with the blink property set.","Returns a `Style` with the reverse property set.","strikethrough","Returns a `Style` with the background colour property set.","Paints the given text with this colour, returning an ANSI…","ansigenericstring","ANSIStrings","ANSIByteStrings","to_string","ANSIGenericStrings","ANSIGenericString","ANSIString","ANSIByteString","A macro for declaring lazily evaluated statics.","initialize","Takes a shared reference to a lazy static and initializes…","LazyStatic","Support trait for enabling a few common operation on lazy…","thread_local","Returns the element for the current thread, or creates it…","Returns the element for the current thread, if it exists.","get_or_try","iter_mut","Returns a mutable iterator over the local values of all…","Removes all thread-specific values from the `ThreadLocal`,…","get_default","Returns the element for the current thread, or creates a…","threadlocal","cachedthreadlocal","ThreadLocal","CachedThreadLocal","IntoIter","crossbeam_utils","If the current value equals `current`, stores `new` into…","fetch_add","Increments the current value by `val` and returns the…","fetch_sub","Decrements the current value by `val` and returns the…","fetch_and","Applies bitwise \"and\" to the current value and returns the…","Applies bitwise \"or\" to the current value and returns the…","fetch_xor","Applies bitwise \"xor\" to the current value and returns the…","fetch_or","Pads and aligns a value to the length of a cache line.","lockresult","shardedlockreadguard","trylockresult","shardedlockwriteguard","scopedthreadbuilder","scopedjoinhandle","crossbeam_utils::atomic","crossbeam_utils::sync","crossbeam_utils::thread","cachepadded","unparker","waitgroup","atomiccell","shardedlock","AtomicCell","AtomicConsume","CachePadded","ShardedLock","WaitGroup","ScopedThreadBuilder","ScopedJoinHandle","ShardedLockReadGuard","ShardedLockWriteGuard","get_mut","default","itertools","interleave","multipeek","Create an iterator that merges elements of the contained…","enumerate","Iterate `i` and `j` in lock step.","An iterator adaptor that merges the two base iterators in…","An iterator adapter to filter out duplicate elements.","Format all iterator elements lazily, separated by `sep`.","An iterator adaptor that merges an abitrary number of base…","An iterator which iterates two other iterators…","put_back","itertools::structs","An iterator adaptor to insert a particular value between…","intersperse","Create an iterator which iterates over both this and the…","A “meta iterator adaptor”. Its closure recives a reference…","Return an iterator adaptor that merges the two base…","kmerge_by","Return an iterator adaptor that flattens an iterator of…","Return an iterator adaptor that filters out elements that…","Return an iterator adaptor that iterates over the…","combinations","positions","Combine all an iterator's elements into one element by…","Combine all iterator elements into one String, seperated…","Format all iterator elements, separated by `sep`.","minmaxresult","Return the minimum and maximum element of an iterator, as…","peeking_next","eitherorboth","interleaveshortest","batching","whilesome","position","ziplongest","foldwhile","MinMaxResult","EitherOrBoth","FoldWhile","MultiPeek","PeekingNext","Itertools","Interleave","InterleaveShortest","MapResults","TakeWhileRef","WhileSome","TupleCombinations","Combinations","Positions","ConsTuples","FormatWith","IntoChunks","Intersperse","PeekingTakeWhile","ProcessResults","RepeatCall","TupleBuffer","TupleWindows","WithPosition","ZipLongest","The enum `Either` with variants `Left` and `Right` is a…","A value of type `L`.","A value of type `R`.","Return true if the value is the `Left` variant.","Return true if the value is the `Right` variant.","Convert the left side of `Either<L, R>` to an `Option<L>`.","Convert the right side of `Either<L, R>` to an `Option<R>`.","Convert `&Either<L, R>` to `Either<&L, &R>`.","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.","Convert `Either<L, R>` to `Either<R, L>`.","map_right","Apply one of two functions depending on contents, unifying…","either_with","Like `either`, but provide some context to whichever of…","left_and_then","right_and_then","Convert the inner value to an iterator.","Return left value or given value","left_or_default","Return left or a default","left_or_else","Return right value or given value","right_or_default","Return right or a default","right_or_else","factor_first","factor_second","Extract the value of an either over two equivalent types.","GIF decoder","Extension","disposalmethod","Converts `u8` to `Option<Self>`","extension","decodingerror","Width of the image","Height of the image","extensiondata","set_param","streamingdecoder","Sets `value` as a parameter of `self`.","parameter","MemoryLimit","DisposalMethod","DecodingError","ColorOutput","Extensions","ExtensionData","StreamingDecoder","SetParameter","Parameter","hyphensplitter","initial_indent","subsequent_indent","break_words","wrap_iter","Lazily wrap a line of text at `self.width` characters.…","intowrapiter","wrapper","WordSplitter","HyphenSplitter","NoHyphenation","IntoWrapIter","unreachable","UncheckedOptionExt","UncheckedResultExt","arraydeque","Returns a pair of slices which contain, in order, the…","Removes an element from anywhere in the `ArrayDeque` and…","RangeArgument","ArrayDeque","IndexRange is implemented by Rust's built-in range types,…","split_off","from_iter","intoiter","IterMut","regex_syntax","The span of this class.","regex_syntax::ast","regex_syntax::ast::ErrorKind","original","Assertion","A single zero-width assertion.","Repetition","A grouped regular expression.","Alternation","An alternation of regular expressions.","A concatenation of regular expressions.","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.","A perl character class, e.g., `\\d` or `\\W`.","Bracketed","A bracketed character class set, which may contain zero or…","CaptureName","ParserBuilder","A builder for a regular expression parser.","parserbuilder","withcomments","classsetitem","classsetbinaryop","classasciikind","ClassUnicode","ErrorKind","WordBoundary","A set of characters represented by Unicode scalar values.","StartLine","StartText","Unicode","GroupKind","CaptureIndex","NonCapturing","regex_syntax::hir","RepetitionKind","The kind of a repetition operator.","ZeroOrOne","ZeroOrMore","OneOrMore","RepetitionRange","Executes an implementation of `Visitor` in constant stack…","Literal","literals","is_empty","Create a new printer.","Print the given `Ast` to the given writer. The writer must…","translatorbuilder","translator","translate","All implementors of `Visitor` must provide a `finish`…","visit_pre","visit_post","visit_alternation_in","Return the type of this error.","errorkind","The original pattern string in which this error occurred.","Return the span at which this error occurred.","literal","repetition","Return true if and only if this HIR is required to match…","Return true if and only if this HIR contains any…","is_always_utf8","classunicode","case_fold_simple","classunicoderange","Create a new class from a sequence of ranges.","classbytes","Create a new class with no ranges.","Add a new range to this set.","Return an iterator over all ranges in this class.","Return the underlying ranges as a slice.","Expand this character class such that it contains all case…","intersect","difference","symmetric_difference","classbytesrange","Return the start of this range.","Return the end of this range.","is_negated","is_match_empty","Create a new parser builder with a default configuration.","Build a parser from this configuration with the given…","nest_limit","Set the nesting limit for this parser.","Whether to support octal syntax or not.","allow_invalid_utf8","ignore_whitespace","Enable verbose mode in the regular expression.","case_insensitive","multi_line","dot_matches_new_line","swap_greed","Enable or disable the Unicode flag (`u`) by default.","Create a new parser with a default configuration.","regex_syntax::ast::parse","regex_syntax::ast::print","regex_syntax::hir::literal","regex_syntax::hir::print","regex_syntax::hir::translate","alternation","literalkind","classperl","classascii","classunicodekind","classbracketed","classset","classsetrange","classsetunion","assertion","repetitionop","repetitionkind","repetitionrange","groupkind","capturename","flagsitem","flagsitemkind","wordboundary","specialliteralkind","hexliteralkind","classperlkind","classunicodeopkind","classsetbinaryopkind","assertionkind","setflags","description","This method is called before beginning traversal of the AST.","This method is called on an `Ast` before descending into…","This method is called on an `Ast` after descending all of…","This method is called between child nodes of an…","visit_class_set_item_pre","This method is called on every `ClassSetItem` before…","visit_class_set_item_post","This method is called on every `ClassSetItem` after…","visit_class_set_binary_op_pre","This method is called on every `ClassSetBinaryOp` before…","visit_class_set_binary_op_post","This method is called on every `ClassSetBinaryOp` after…","visit_class_set_binary_op_in","This method is called between the left hand and right hand…","This method is called before beginning traversal of the HIR.","This method is called on an `Hir` before descending into…","This method is called on an `Hir` after descending all of…","This method is called between child nodes of an alternation.","WithComments","ClassPerl","ClassAscii","ClassBracketed","ClassSetRange","ClassSetUnion","ClassSetBinaryOp","RepetitionOp","FlagsItem","LiteralKind","SpecialLiteralKind","HexLiteralKind","ClassPerlKind","ClassAsciiKind","ClassUnicodeKind","ClassUnicodeOpKind","ClassSetItem","ClassSetBinaryOpKind","AssertionKind","FlagsItemKind","TranslatorBuilder","Translator","ClassUnicodeRange","ClassBytes","ClassBytesRange","ClassUnicodeIter","ClassBytesIter","Position","arp_flags","arp_netmask","it_interval","envelope","e_machine","e_version","e_phentsize","e_shentsize","e_shstrndx","sh_offset","sh_addralign","sh_entsize","ch_addralign","st_blksize","st_blocks","st_atime_nsec","st_mtime_nsec","st_ctime_nsec","f_namelen","f_frsize","f_blocks","f_bavail","mxcr_mask","f_namemax","cpu_set_t","sigaction","statvfs64","if_nameindex","ipv6_mreq","itimerval","sockaddr_in","sockaddr_in6","sockaddr_ll","sched_param","in_pktinfo","in6_rtmsg","arpreq_old","epoll_event","sockaddr_un","sockaddr_storage","signalfd_siginfo","itimerspec","packet_mreq","input_event","input_absinfo","input_keymap_entry","input_mask","ff_replay","ff_trigger","ff_envelope","ff_constant_effect","ff_ramp_effect","ff_condition_effect","ff_periodic_effect","ff_rumble_effect","ff_effect","dl_phdr_info","posix_spawn_file_actions_t","posix_spawnattr_t","genlmsghdr","in6_pktinfo","arpd_request","inotify_event","sockaddr_nl","sockaddr_alg","af_alg_iv","statx_timestamp","__exit_status","__timeval","siginfo_t","mallinfo","nl_pktinfo","nl_mmap_req","nl_mmap_hdr","statfs64","pthread_attr_t","_libc_fpxreg","_libc_xmmreg","_libc_fpstate","user_regs_struct","mcontext_t","user_fpregs_struct","ucontext_t","pthread_mutexattr_t","pthread_rwlockattr_t","pthread_condattr_t","pthread_cond_t","pthread_mutex_t","pthread_rwlock_t","timespec","protoent","sockaddr","addrinfo","sigevent","rlimit64","input_id","Elf32_Ehdr","Elf64_Ehdr","Elf32_Sym","Elf64_Sym","Elf32_Phdr","Elf64_Phdr","Elf32_Shdr","Elf64_Shdr","Elf32_Chdr","Elf64_Chdr","dirent64","glob64_t","nlmsghdr","nlmsgerr","msqid_ds","ipc_perm","shmid_ds","termios2","in6_addr","sigset_t","timezone","fpos64_t","capacityerror","utf8error","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","arrayvec","Push `element` to the end of the vector.","Insert `element` at position `index`.","Remove the element at `index` and swap the last element…","Remove the element at `index` and shift down the following…","arraystring","clone_from","ArrayString","CapacityError","truncate","capacity","Trait for fixed size arrays.","Create a draining iterator that removes the specified…","byteorder","Reads an unsigned n-bytes integer from the underlying…","Reads a signed n-bytes integer from the underlying reader.","DEPRECATED.","Writes an unsigned n-bytes integer to the underlying writer.","Writes a signed n-bytes integer to the underlying writer.","read_u128","read_uint","read_uint128","Reads an unsigned n-bytes integer from `buf`.","write_u16","write_u24","write_u32","write_u48","write_u64","write_u128","write_uint","write_uint128","Writes an unsigned integer `n` to `buf` using only `nbytes`.","read_i128","read_int128","Reads a signed n-bytes integer from `buf`.","Reads a IEEE754 single-precision (4 bytes) floating point…","Reads a IEEE754 double-precision (8 bytes) floating point…","write_i16","write_i24","write_i32","write_i48","write_i64","write_i128","write_int","write_int128","Writes a signed integer `n` to `buf` using only `nbytes`.","write_f32","Writes a IEEE754 single-precision (4 bytes) floating point…","write_f64","Writes a IEEE754 double-precision (8 bytes) floating point…","read_u16_into","read_u32_into","read_u64_into","read_u128_into","read_i16_into","read_i32_into","read_i64_into","read_i128_into","read_f32_into","read_f32_into_unchecked","read_f64_into","Reads IEEE754 single-precision (4 bytes) floating point…","read_f64_into_unchecked","read_u16","read_u32","read_u64","write_u16_into","write_u32_into","write_u64_into","write_u128_into","from_slice_u16","from_slice_u32","from_slice_u64","from_slice_u128","from_slice_f32","from_slice_f64","bigendian","littleendian","Reads an unsigned 8 bit integer from the underlying reader.","Reads a signed 8 bit integer from the underlying reader.","Reads an unsigned 16 bit integer from the underlying reader.","read_i16","Reads a signed 16 bit integer from the underlying reader.","read_u24","Reads an unsigned 24 bit integer from the underlying reader.","read_i24","Reads a signed 24 bit integer from the underlying reader.","Reads an unsigned 32 bit integer from the underlying reader.","read_i32","Reads a signed 32 bit integer from the underlying reader.","read_u48","Reads an unsigned 48 bit integer from the underlying reader.","read_i48","Reads a signed 48 bit integer from the underlying reader.","Reads an unsigned 64 bit integer from the underlying reader.","read_i64","Reads a signed 64 bit integer from the underlying reader.","Reads an unsigned 128 bit integer from the underlying…","Reads a signed 128 bit integer from the underlying reader.","read_int","read_f32","read_f64","Reads a sequence of unsigned 16 bit integers from the…","Reads a sequence of unsigned 32 bit integers from the…","Reads a sequence of unsigned 64 bit integers from the…","Reads a sequence of unsigned 128 bit integers from the…","read_i8_into","Reads a sequence of signed 8 bit integers from the…","Reads a sequence of signed 16 bit integers from the…","Reads a sequence of signed 32 bit integers from the…","Reads a sequence of signed 64 bit integers from the…","Reads a sequence of signed 128 bit integers from the…","Reads a sequence of IEEE754 single-precision (4 bytes)…","Reads a sequence of IEEE754 double-precision (8 bytes)…","Writes an unsigned 8 bit integer to the underlying writer.","Writes a signed 8 bit integer to the underlying writer.","Writes an unsigned 16 bit integer to the underlying writer.","Writes a signed 16 bit integer to the underlying writer.","Writes an unsigned 24 bit integer to the underlying writer.","Writes a signed 24 bit integer to the underlying writer.","Writes an unsigned 32 bit integer to the underlying writer.","Writes a signed 32 bit integer to the underlying writer.","Writes an unsigned 48 bit integer to the underlying writer.","Writes a signed 48 bit integer to the underlying writer.","Writes an unsigned 64 bit integer to the underlying writer.","Writes a signed 64 bit integer to the underlying writer.","Writes an unsigned 128 bit integer to the underlying writer.","Writes a signed 128 bit integer to the underlying writer.","ReadBytesExt","WriteBytesExt","ByteOrder","BigEndian","LittleEndian","An iterator over all occurrences of the needles in a…","An iterator over all occurrences of the needle in a…","Creates a new iterator that yields all positions of needle…","crossbeam_queue","pusherror","poperror","Returns `true` if the queue is empty.","Returns the number of elements in the queue.","PushError","ArrayQueue","quickersort","parseerror","Returns the current value of a high-resolution performance…","duration","outofrangeerror","stdduration","precisetime","Returns a TmFmt that outputs according to the `asctime`…","Formats the time according to the format string.","steadytime","The resulting Tm is in UTC.","ParseError","PreciseTime","SteadyTime","OutOfRangeError","A wrapper for generating floating point numbers uniformly…","rand::distributions","jitterrng","timererror","ChaChaRng","A random number generator that uses the ChaCha20 algorithm…","A random number generator that uses the ISAAC algorithm[1].","Isaac64Rng","A random number generator that uses ISAAC-64[1], the…","new_unseeded","xorshiftrng","samplerange","partialord","rand::distributions::range","rand::distributions::gamma","rand::distributions::normal","rand::distributions::exponential","rand::jitter","rand::read","rand::reseeding","ind_sample","chacharng","isaac64rng","fill_bytes","next_u32","rand::os","next_u64","from_seed","reseedingrng","isaacrng","Create an ISAAC random number generator with a seed. This…","chisquared","standardnormal","lognormal","threadrng","reseedwithdefault","SampleRange","ChiSquared","StandardNormal","LogNormal","IndependentSample","RandSample","WeightedChoice","TimerError","JitterRng","ReseedingRng","IsaacRng","XorShiftRng","SeedableRng","Generator","AsciiGenerator","ThreadRng","ReseedWithDefault","num_traits","min_value","max_value","neg_infinity","Returns `-0.0`.","Returns the smallest finite value that this type can…","min_positive_value","Returns the smallest positive, normalized value that this…","Returns epsilon, a small positive value.","Returns the largest finite value that this type can…","is_infinite","is_finite","is_normal","Returns `true` if the number is neither zero, infinite,…","Returns the floating point category of the number. If only…","fpcategory","Returns the largest integer less than or equal to a number.","Returns the smallest integer greater than or equal to a…","Returns the nearest integer to a number. Round half-way…","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of `self`. Returns…","Returns a number that represents the sign of `self`.","is_sign_positive","is_sign_negative","Raise a number to an integer power.","to_degrees","to_radians","Returns the maximum of the two numbers.","Returns the minimum of the two numbers.","integer_decode","Returns the mantissa, base 2 exponent, and sign as…","Shifts the bits to the left by a specified amount amount,…","Shifts the bits to the right by a specified amount amount,…","num_traits::ops","Fused multiply-add. Computes `(self * a) + b` with only…","Performs the fused multiply-add operation.","checkedmul","The result after applying the operator.","Returns `true` if `self` is positive, including `+0.0`,…","Returns `true` if `self` is negative, including `-0.0`,…","Take the reciprocal (inverse) of a number, `1/x`.","Take the square root of a number.","Returns `e^(self)`, (the exponential function).","Returns `2^(self)`.","Returns the natural logarithm of the number.","Returns the logarithm of the number with respect to an…","Returns the base 2 logarithm of the number.","Returns the base 10 logarithm of the number.","Converts radians to degrees.","Converts degrees to radians.","The positive difference of two numbers.","Take the cubic root of a number.","Calculate the length of the hypotenuse of a right-angle…","Computes the sine of a number (in radians).","Computes the cosine of a number (in radians).","Computes the tangent of a number (in radians).","Computes the arcsine of a number. Return value is in…","Computes the arccosine of a number. Return value is in…","Computes the arctangent of a number. Return value is in…","Computes the four quadrant arctangent of `self` (`y`) and…","Simultaneously computes the sine and cosine of the number,…","Returns `e^(self) - 1` in a way that is accurate even if…","Returns `ln(1+n)` (natural logarithm) more accurately than…","Hyperbolic sine function.","Hyperbolic cosine function.","Hyperbolic tangent function.","Inverse hyperbolic sine function.","Inverse hyperbolic cosine function.","Inverse hyperbolic tangent function.","Computes the absolute value.","Returns the sign of the number.","ParseFloatError","FloatErrorKind","ToPrimitive","FromPrimitive","AsPrimitive","FloatCore","FloatConst","CheckedAdd","CheckedSub","CheckedMul","CheckedDiv","CheckedRem","CheckedNeg","CheckedShl","CheckedShr","MulAddAssign","Saturating","WrappingAdd","WrappingSub","WrappingMul","WrappingShl","WrappingShr","rotate_left","checked_add","checked_sub","crossbeam_epoch","Stores a `Shared` or `Owned` pointer into the atomic…","compareandseterror","Stores the pointer `new` (either `Shared` or `Owned`) into…","Dereferences the pointer.","Returns the tag stored within the pointer.","Returns the same pointer, but tagged with `tag`. `tag` is…","is_pinned","collector","Stores a function so that it can be executed at some point…","into_usize","from_usize","Returns a new pointer pointing to the tagged pointer `data`.","CompareAndSetError","Collector","LocalHandle","CompareAndSetOrdering","load_consume","compressionoptions","Compress the given slice of bytes with DEFLATE…","Returns a set of compression settings that makes the…","deflate::write","compression","specialoptions","matchingtype","When the encoder is dropped, output the rest of the data.","Flush the encoder.","Encode all pending data to the contained writer, consume…","Resets the encoder (except the compression options),…","CompressionOptions","SpecialOptions","Compression","MatchingType","DeflateEncoder","ZlibEncoder","aho_corasick","stateidx","acautomaton","Create a new automaton from an iterator of patterns.","fullacautomaton","start_bytes","next_state","for_each_transition","for_each_ok_transition","heap_bytes","Return the number of patterns in the automaton.","Returns true if the automaton has no patterns.","Returns an iterator of non-overlapping matches in `s`.","find_overlapping","Returns an iterator of overlapping matches in `s`.","matchesoverlapping","stream_find","Returns an iterator of non-overlapping matches in the…","streammatches","stream_find_overlapping","Returns an iterator of overlapping matches in the given…","streammatchesoverlapping","FullAcAutomaton","Transitions","AcAutomaton","MatchesOverlapping","StreamMatches","StreamMatchesOverlapping","An iterator for getting multiple values out of an argument…","AllowLeadingHyphen","NextLineHelp","Occurs when the user provides an unrecognized…","Sets a string describing what the program does. This will…","Adds additional help information to be displayed in…","Sets a string of the version number to be displayed when…","appsettings","Prints the full help message to [`io::stdout()`] using a…","clapresult","Writes the full help message to the user to a…","Writes the version message to the user to a [`io::Write`]…","Generate a completions file for a specified shell at…","argmatches","visible_alias","visible_aliases","Specifies that if the value is not passed in as an…","display_order","argsettings","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…","requires_all","Sets the requirement rules of this group. This is not to…","conflicts_with","conflicts_with_all","Convenience macro getting a typed value `T` where `T`…","Convenience macro getting a typed value [`Vec<T>`] where…","subcommand","ArgSettings","AppSettings","CaseInsensitive","InvalidUtf8","progressbar","ProgressBar","A random number generator that retrieves randomness…","Sample values uniformly between two bounds.","The Gamma distribution `Gamma(shape, scale)` distribution.","The chi-squared distribution `χ²(k)`, where `k` is the…","The Fisher F distribution `F(m, n)`.","The Student t distribution, `t(nu)`, where `nu` is the…","The normal distribution `N(mean, std_dev**2)`.","The log-normal distribution `ln N(mean, std_dev**2)`.","The exponential distribution `Exp(lambda)`.","rand::isaac","rand::chacha","Defines an additive identity element for `Self`.","Returns the additive identity element of `Self`, `0`. #…","Sets `self` to the additive identity element of `Self`, `0`.","Returns `true` if `self` is equal to the additive identity.","Defines a multiplicative identity element for `Self`.","Returns the multiplicative identity element of `Self`, `1`.","Sets `self` to the multiplicative identity element of…","Returns `true` if `self` is equal to the multiplicative…","Returns the additive identity, `0`.","Returns the multiplicative identity, `1`.","Useful functions for signed numbers (i.e. numbers that can…","is_positive","Returns true if the number is positive and false if the…","is_negative","Returns true if the number is negative and false if the…","A trait for values which cannot be negative","Saturating math operations","saturating_add","Saturating addition operator. Returns a+b, saturating at…","saturating_sub","Saturating subtraction operator. Returns a-b, saturating…","Performs addition that returns `None` instead of wrapping…","Adds two numbers, checking for overflow. If overflow…","Performs subtraction that returns `None` instead of…","Subtracts two numbers, checking for underflow. If…","Performs multiplication that returns `None` instead of…","checked_mul","Multiplies two numbers, checking for underflow or…","Performs division that returns `None` instead of panicking…","checked_div","Divides two numbers, checking for underflow, overflow and…","Performs a left shift that returns `None` on shifts larger…","checked_shl","Checked shift left. Computes `self << rhs`, returning…","Performs a right shift that returns `None` on shifts…","checked_shr","Checked shift right. Computes `self >> rhs`, returning…","Performs addition that wraps around on overflow.","wrapping_add","Wrapping (modular) addition. Computes `self + other`,…","Performs multiplication that wraps around on overflow.","wrapping_mul","Wrapping (modular) multiplication. Computes `self *…","Performs subtraction that wraps around on overflow.","wrapping_sub","Wrapping (modular) subtraction. Computes `self - other`,…","Numbers which have upper and lower bounds","returns the smallest finite number this type can represent","returns the largest finite number this type can represent","Generic trait for floating point numbers","Returns the `NaN` value.","Returns the infinite value.","Returns the negative infinite value.","Returns `true` if this value is `NaN` and false otherwise.","Returns `true` if this value is positive infinity or…","Returns `true` if this number is neither infinite nor `NaN`.","Raise a number to a floating point power.","Return Euler’s number.","Return `1.0 / π`.","FRAC_1_SQRT_2","Return `1.0 / sqrt(2.0)`.","Return `2.0 / π`.","FRAC_2_SQRT_PI","Return `2.0 / sqrt(π)`.","Return `π / 2.0`.","Return `π / 3.0`.","Return `π / 4.0`.","Return `π / 6.0`.","Return `π / 8.0`.","Return `ln(10.0)`.","Return `ln(2.0)`.","Return `log10(e)`.","Return `log2(e)`.","Return Archimedes’ constant.","Return `sqrt(2.0)`.","A generic interface for casting between machine scalars…","Convert a value to another, using the `as` operator.","A generic trait for converting a number to a value.","Convert an `isize` to return an optional value of this…","Convert an `i8` to return an optional value of this type.…","Convert an `i16` to return an optional value of this type.…","Convert an `i32` to return an optional value of this type.…","Convert an `i64` to return an optional value of this type.…","Convert an `i128` to return an optional value of this…","Convert a `usize` to return an optional value of this…","Convert an `u8` to return an optional value of this type.…","Convert an `u16` to return an optional value of this type.…","Convert an `u32` to return an optional value of this type.…","Convert an `u64` to return an optional value of this type.…","Convert an `u128` to return an optional value of this…","Convert a `f32` to return an optional value of this type.…","Convert a `f64` to return an optional value of this type.…","A generic trait for converting a value to a number.","Converts the value of `self` to an `isize`.","Converts the value of `self` to an `i8`.","Converts the value of `self` to an `i16`.","Converts the value of `self` to an `i32`.","Converts the value of `self` to an `i64`.","Converts the value of `self` to an `i128`.","Converts the value of `self` to a `usize`.","Converts the value of `self` to an `u8`.","Converts the value of `self` to an `u16`.","Converts the value of `self` to an `u32`.","Converts the value of `self` to an `u64`.","Converts the value of `self` to an `u128`.","Converts the value of `self` to an `f32`.","Converts the value of `self` to an `f64`.","An interface for casting between machine scalars.","Creates a number from another value that can be converted…","Cast from one machine scalar to another.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of…","count_zeros","Returns the number of zeros in the binary representation…","leading_zeros","Returns the number of leading zeros in the binary…","trailing_zeros","Returns the number of trailing zeros in the binary…","rotate_right","unsigned_shl","unsigned_shr","Reverses the byte order of the integer.","Convert an integer from big endian to the target's…","Convert an integer from little endian to the target's…","Convert `self` to big endian from the target's endianness.","Convert `self` to little endian from the target's…","Raises self to the power of `exp`, using exponentiation by…","Raises a value to the power of exp, using exponentiation…","checked_pow","Raises a value to the power of exp, returning `None` if an…","Numeric traits for generic mathematics","A value bounded by a minimum and a maximum","num_traits::bounds","num_traits::cast","from_isize","num_traits::float","num_traits::identities","num_traits::int","count_ones","signed_shl","signed_shr","swap_bytes","num_traits::ops::checked","num_traits::ops::saturating","num_traits::ops::wrapping","num_traits::pow","num_traits::real","A trait for real number types that do not necessarily have…","Raise a number to a real number power.","num_traits::sign","The base trait for numeric types, covering `0` and `1`…","FromStrRadixErr","from_str_radix","Convert from a string and radix <= 36.","The trait for types implementing basic numeric operations","The trait for `Num` types which also implement numeric…","The trait for references which implement numeric…","NumAssignOps","The trait for types implementing numeric assignment…","The trait for `Num` types which also implement assignment…","NumAssignRef","The trait for `NumAssign` types which also implement…","num_integer","Returns the truncated principal `n`th root of an integer…","Returns the truncated principal square root of an integer…","Returns the truncated principal cube root of an integer --…","div_mod_floor","extendedgcd","ExtendedGcd","IterBinomial","crossbeam_deque","Returns `true` if the deque is empty.","RegexBuilder","A configurable builder for a regular expression.","RegexSetBuilder","A configurable builder for a set of regular expressions.","Match represents a single match of a regex in a haystack.","An iterator over all non-overlapping matches for a…","CaptureMatches","An iterator that yields all non-overlapping capture groups…","Yields all substrings delimited by a regular expression…","Yields at most `N` substrings delimited by a regular…","CaptureNames","An iterator over the names of all possible captures.","SubCaptureMatches","An iterator that yields all capturing matches in the order…","ReplacerRef","By-reference adaptor for a `Replacer`","Match multiple (possibly overlapping) regular expressions…","A set of matches returned by a regex set.","SetMatchesIntoIter","An owned iterator over the set of matches from a regex set.","SetMatchesIter","A borrowed iterator over the set of matches from a regex…","regexbuilder","Create a new regular expression builder with the given…","Consume the builder and compile the regular expression.","Set the value for the case insensitive (`i`) flag.","Set the value for the multi-line matching (`m`) flag.","Set the value for the any character (`s`) flag, where in…","Set the value for the greedy swap (`U`) flag.","Set the value for the ignore whitespace (`x`) flag.","Set the value for the Unicode (`u`) flag.","Set the approximate size limit of the compiled regular…","dfa_size_limit","Set the approximate size of the cache used by the DFA.","regex::bytes","regexsetbuilder","size_limit","Consume the builder and compile the regular expressions…","no_expansion","Return a fixed unchanging replacement byte string.","Return a `Replacer` that borrows and wraps this `Replacer`.","replacerref","Create a new regex set with the given regular expressions.","regexset","Returns true if and only if one of the regexes in this set…","Returns the set of regular expressions that match in the…","Returns the total number of regular expressions in this set.","matched_any","Whether this set contains any matches.","Whether the regex at the given index matched.","The total number of regexes in the set that created these…","Returns an iterator over indexes in the regex that matched.","setmatchesiter","Returns the starting byte offset of the match in the…","Returns the ending byte offset of the match in the haystack.","Returns the matched text.","Compiles a regular expression. Once compiled, it can be…","Returns true if and only if the regex matches the string…","Returns the start and end byte range of the leftmost-first…","Returns an iterator for each successive non-overlapping…","Returns the capture groups corresponding to the…","captures","captures_iter","Returns an iterator over all the non-overlapping capture…","capturematches","Returns an iterator of substrings of `text` delimited by a…","Returns an iterator of at most `limit` substrings of…","Replaces the leftmost-first match with the replacement…","replace_all","Replaces all non-overlapping matches in `text` with the…","Replaces at most `limit` non-overlapping matches in `text`…","shortest_match","Returns the end location of a match in the text given.","Returns the original string of this regex.","capture_names","Returns an iterator over the capture names.","capturenames","captures_len","Returns the number of captures.","Returns the match associated with the capture group at…","Returns the match for the capture group named `name`. If…","subcapturematches","Expands all instances of `$name` in `replacement` to the…","Returns the number of captured groups.","Replacer describes types that can be used to replace…","replace_append","Appends text to `dst` to replace the current match.","setmatches","Shows the original regular expression.","Attempts to parse a string into a regular expression","Return a fixed unchanging replacement string.","SetMatches","Escapes all regular expression meta characters in `text`.","enum_primitive","Helper macro for internal use by `enum_from_primitive!`.","Applies a function to the contained value (if any), or…","Transforms the `Option<T>` into a [`Result<T, E>`],…","Returns [`None`] if the option is [`None`], otherwise…","from_i128","from_u128","rangeinclusive","rangestepinclusive","RangeInclusive","RangeStepInclusive","num_rational","parseratioerror","add_assign","sub_assign","mul_assign","div_assign","rem_assign","from_i64","from_u64","from_f32","from_f64","ParseRatioError","Represents a fork-join scope which can be used to spawn…","Fires off a task into the Rayon threadpool in the \"static\"…","Spawns a job into the fork-join scope `self`. This job…","configuration","current_num_threads","current_thread_index","current_thread_has_pending_tasks","Creates a scope that executes within this thread-pool.…","spawn_fifo","Spawns an asynchronous task in this thread-pool. This task…","threadpool","threadpoolbuilderror","customspawn","Deprecated in favor of `ThreadPoolBuilder::build`.","thread_name","num_threads","panic_handler","stack_size","breadth_first","start_handler","exit_handler","ThreadBuilder","ThreadPoolBuilder","Configuration","ThreadPoolBuildError","PixelDimensions","AnimationControl","FrameControl","chunktype","buffer_size","Returns the next processed row of the image","Returns the number of bytes required to hold a…","encodingerror","u8 -> Self. Temporary solution until Rust provides a…","animation_control","animationcontrol","frame_control","framecontrol","Returns the number of bytes needed for one deinterlaced…","transformations","colortype","EncodingError","Transformations","HasParameters","rayon::collections","This module contains the parallel iterator types for…","Parallel iterator over an immutable reference to a B-Tree…","This module contains the parallel iterator types for hash…","Iterate the producer, feeding each element to `folder`,…","rayon::iter","Converts `self` into a parallel iterator.","Reduces the items in the iterator into one item using…","Reduces the items in the iterator into one item using a…","Applies the given predicate to the items in the parallel…","Searches for some item in the parallel iterator that…","Internal method used to define the behavior of this…","Interleave elements of this iterator and the other given…","Lexicographically compares the elements of this…","Determines if the elements of this `ParallelIterator` are…","Searches for the sequentially first item in the parallel…","Searches for the sequentially last item in the parallel…","ParallelBridge","Conversion trait to convert an `Iterator` to a…","Create a bridge from this type to a `ParallelIterator`.","range_inclusive","Returns a parallel iterator over at most `chunk_size`…","Returns a parallel iterator over substrings that match a…","into_par_iter","rayon::collections::binary_heap","rayon::collections::btree_map","rayon::collections::btree_set","rayon::collections::hash_map","rayon::collections::hash_set","rayon::collections::linked_list","rayon::collections::vec_deque","rayon::option","rayon::range","rayon::range_inclusive","rayon::result","rayon::slice","defaultspawn","drive_unindexed","rayon::str","rayon::vec","with_producer","consumer","iterbridge","tryfoldwith","charindices","encodeutf16","splitterminator","splitwhitespace","matchindices","threadpoolbuilder","ProducerCallback","UnindexedConsumer","UnindexedProducer","IntoParallelIterator","IntoParallelRefIterator","IntoParallelRefMutIterator","ParallelIterator","IndexedParallelIterator","FromParallelIterator","ParallelExtend","ParallelSlice","ParallelSliceMut","ParallelString","TryFoldWith","CharIndices","EncodeUtf16","SplitTerminator","SplitWhitespace","MatchIndices","Thread builder used for customization via…","ThreadPool","Represents a user created [thread-pool].","Error when initializing a thread pool.","Used to create a new [`ThreadPool`] or to configure the…","Provides the calling context to a closure called by…","Takes two closures and potentially runs them in parallel.…","join_context","Identical to `join`, except that the closures have a…","Create a \"fork-join\" scope `s` and invokes the closure…","scope_fifo","Create a \"fork-join\" scope `s` with FIFO order, and…","If called from a Rayon worker thread, returns the index of…","Returns the number of threads in the current registry. If…","Get the index of this thread in the pool, within…","Get the string that was specified by…","Get the value that was specified by…","Execute the main loop for this thread. This will not…","Executes `op` within the threadpool. Any attempts to use…","Returns the (current) number of threads in the thread pool.","If called from a Rayon worker thread in this thread-pool,…","Returns true if the current worker thread currently has…","Execute `oper_a` and `oper_b` in the thread-pool and…","Creates and returns a valid rayon thread pool builder, but…","Create a new `ThreadPool` initialized using this…","build_global","Initializes the global thread pool. This initialization is…","build_scoped","Create a scoped `ThreadPool` initialized using this…","spawn_handler","Set a custom function for spawning threads.","Set a closure which takes a thread index and returns the…","Set the number of threads to be used in the rayon…","Normally, whenever Rayon catches a panic, it tries to…","Set the stack size of the worker threads","(DEPRECATED) Suggest to worker threads that they execute…","Set a callback to be invoked on thread start.","Set a callback to be invoked on thread exit.","Returns `true` if the closure was called from a different…","ScopeFifo","FnContext","interleave_shortest","partition_map","jpeg_decoder","imageinfo","pixelformat","PixelFormat","UnsupportedFeature","primitive","dynamicimage","imageresult","Create a new image from a byte slice","imageformat","image::math","Available Sampling Filters","Nearest Neighbor","Linear Filter","Cubic Filter","Gaussian Filter","Lanczos with window 3","imagebuffer","Create a new decoder that decodes from the stream `r`","Encodes the image `image` that has dimensions `width` and…","Create a new encoder that writes its output to `w`","jpegencoder","A GIF frame","Frame delay in units of 10 ms.","Disposal method.","transparent","Transparent index (if available).","needs_user_input","True if the frame needs user input do be displayed.","Offset from the top border of the canvas.","Offset from the left border of the canvas.","Width of the frame.","Height of the frame.","True if the image is interlaced.","Frame local color palette if available.","Buffer containing the image data. Only indices unless…","GIF encoder.","tiffdecoder","hdradapter","hdrdecoder","rgbe8pixel","rgbaimage","grayimage","grayalphaimage","Resize this image using the specified filter algorithm.…","filtertype","Hue rotate the supplied image. `value` is the degrees to…","Contructs a new frame","Returns the image buffer","decodingresult","dimensions","The width and height of this image.","The width of this image.","The height of this image.","get_pixel_mut","Returns the pixel located at (x, y)","Puts a pixel at location (x, y)","to_luma_alpha","Apply the function `f` to each channel of this pixel.","Apply the function `f` to each channel except the alpha…","Apply the function `f` to each channel of this pixel and…","par_bridge","image::math::nq","image::imageops::colorops","image::webp","image::webp::vp8","image::jpeg","image::tiff","image::gif","read_scanline","image::ppm","read_image","image::png","image::ico","image::tga","image::bmp","image::hdr","blend_pixel","get_pixel","put_pixel","unsafe_get_pixel","unsafe_put_pixel","Put a pixel at location (x, y), taking into account alpha…","channel_count","color_model","channels_mut","from_channels","from_slice_mut","map_with_alpha","apply_with_alpha","color_type","channels4","hdrmetadata","imageerror","Creates a frame from pixels in RGBA format.","Creates a frame from pixels in RGB format.","is_animated","Returns true if the image is animated","into_frames","Returns the frames of the image","Decodes a specific region of the image, represented by the…","Returns true if this x, y coordinate is contained inside…","Returns an Iterator over the pixels of this image. The…","pixels_mut","Returns an Iterator over mutable pixels of this image. The…","Copies all of the pixels from another image into this image.","Returns a subimage that is a view into this image.","DecodingResult","FilterType","ImageFormat","DynamicImage","WebpDecoder","JPEGEncoder","JPEGDecoder","TIFFDecoder","HDRMetadata","ImageBuffer","ImageDecoder","GenericImage","ConvertBuffer","HDRImageDecoderIterator","interlaced","ColorType","JPEG decoder","into_buffer","Creates a new neuronal network and trains it with the…","Initializes the neuronal network and trains it with the…","Translate a PRGB1555 colour point into an RGB colour point.","mandalas::ops","GenerationContext"];
searchIndex["atty"]={"doc":"atty is a simple utility that answers one question > is…","i":[[4,"Stream","atty","possible stream sources",N,N],[13,"Stdout",E,E,0,N],[13,"Stderr",E,E,0,N],[13,"Stdin",E,E,0,N],[5,"is",E,"returns true if this is a tty",N,[[["stream"]],["bool"]]],[5,"isnt",E,"returns true if this is not a tty",N,[[["stream"]],["bool"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,"fmt",E,E,0,[[["self"],[R[12]]],[R[2]]]],[11,"clone",E,E,0,[[["self"]],["stream"]]]],"p":[[4,"Stream"]]};
searchIndex["clap"]={"doc":"`clap` is a simple-to-use, efficient, and full-featured…","i":[[3,"Arg","clap","The abstract representation of a command line argument.…",N,N],[3,"ArgGroup",E,"`ArgGroup`s are a family of related [arguments] and way…",N,N],[3,"ArgMatches",E,"Used to get information about the arguments that where…",N,N],[3,"OsValues",E,R[1025],N,N],[3,"SubCommand",E,"The abstract representation of a command line subcommand.",N,N],[3,"Values",E,R[1025],N,N],[3,"App",E,"Used to create a representation of a command line program…",N,N],[3,"Error",E,"Command Line Argument Parser Error",N,N],[12,"message",E,"Formatted error message",0,N],[12,"kind",E,"The type of error",0,N],[12,"info",E,"Any additional information passed along, such as the…",0,N],[4,R[1052],E,"Various settings that apply to arguments and may be set,…",N,N],[13,"Required",E,"The argument must be used",1,N],[13,"Multiple",E,"The argument may be used multiple times such as `--flag…",1,N],[13,"EmptyValues",E,"The argument allows empty values such as `--option \"\"`",1,N],[13,"Global",E,"The argument should be propagated down through all child…",1,N],[13,"Hidden",E,"The argument should not be shown in help text",1,N],[13,"TakesValue",E,"The argument accepts a value, such as `--option <value>`",1,N],[13,"UseValueDelimiter",E,"Determines if the argument allows values to be grouped via…",1,N],[13,R[1027],E,"Prints the help text on the line after the argument",1,N],[13,"RequireDelimiter",E,"Requires the use of a value delimiter for all multiple…",1,N],[13,"HidePossibleValues",E,"Hides the possible values from the help string",1,N],[13,R[1026],E,"Allows vals that start with a '-'",1,N],[13,"RequireEquals",E,"Require options use `--option=val` syntax",1,N],[13,"Last",E,"Specifies that the arg is the last positional argument and…",1,N],[13,"HideDefaultValue",E,"Hides the default value from the help string",1,N],[13,R[1054],E,"Makes `Arg::possible_values` case insensitive",1,N],[13,"HideEnvValues",E,"Hides ENV values in the help message",1,N],[13,"HiddenShortHelp",E,"The argument should not be shown in short help text",1,N],[13,"HiddenLongHelp",E,"The argument should not be shown in long help text",1,N],[4,R[1053],E,"Application level settings, which affect how [`App`]…",N,N],[13,"AllowInvalidUtf8",E,"Specifies that any invalid UTF-8 code points should not be…",2,N],[13,"AllArgsOverrideSelf",E,"Essentially sets [`Arg::overrides_with(\"itself\")`] for all…",2,N],[13,R[1026],E,"Specifies that leading hyphens are allowed in argument…",2,N],[13,"AllowNegativeNumbers",E,"Allows negative numbers to pass as values. This is similar…",2,N],[13,"AllowMissingPositional",E,"Allows one to implement two styles of CLIs where…",2,N],[13,"AllowExternalSubcommands",E,"Specifies that an unexpected positional argument, which…",2,N],[13,"ArgsNegateSubcommands",E,"Specifies that use of a valid [argument] negates…",2,N],[13,"ArgRequiredElseHelp",E,"Specifies that the help text should be displayed (and then…",2,N],[13,"ColoredHelp",E,"Uses colorized help messages.",2,N],[13,"ColorAuto",E,"Enables colored output only when the output is going to a…",2,N],[13,"ColorAlways",E,"Enables colored output regardless of whether or not the…",2,N],[13,"ColorNever",E,"Disables colored output no matter if the output is going…",2,N],[13,"DontCollapseArgsInUsage",E,"Disables the automatic collapsing of positional args into…",2,N],[13,"DontDelimitTrailingValues",E,"Disables the automatic delimiting of values when `--` or…",2,N],[13,"DisableHelpFlags",E,"Disables `-h` and `--help` [`App`] without affecting any…",2,N],[13,"DisableHelpSubcommand",E,"Disables the `help` subcommand",2,N],[13,"DisableVersion",E,"Disables `-V` and `--version` [`App`] without affecting…",2,N],[13,"DeriveDisplayOrder",E,"Displays the arguments and [`SubCommand`]s in the help…",2,N],[13,"GlobalVersion",E,"Specifies to use the version of the current command for…",2,N],[13,"Hidden",E,"Specifies that this [`SubCommand`] should be hidden from…",2,N],[13,"HidePossibleValuesInHelp",E,"Tells `clap` not to print possible values when displaying…",2,N],[13,"InferSubcommands",E,"Tries to match unknown args to partial [`subcommands`] or…",2,N],[13,"NoBinaryName",E,"Specifies that the parser should not assume the first…",2,N],[13,R[1027],E,"Places the help string for all arguments on the line after…",2,N],[13,"PropagateGlobalValuesDown",E,"DEPRECATED: This setting is no longer required in order to…",2,N],[13,"SubcommandsNegateReqs",E,"Allows [`SubCommand`]s to override all requirements of the…",2,N],[13,"SubcommandRequiredElseHelp",E,"Specifies that the help text should be displayed (before…",2,N],[13,"StrictUtf8",E,"Specifies that any invalid UTF-8 code points should be…",2,N],[13,"SubcommandRequired",E,"Allows specifying that if no [`SubCommand`] is present at…",2,N],[13,"TrailingVarArg",E,"Specifies that the final positional argument is a \"VarArg\"…",2,N],[13,"UnifiedHelpMessage",E,"Groups flags and options together, presenting a more…",2,N],[13,"VersionlessSubcommands",E,"Disables `-V` and `--version` for all [`SubCommand`]s…",2,N],[13,"WaitOnError",E,"Will display a message \"Press [ENTER]/[RETURN] to…",2,N],[4,R[385],E,"Command line argument parser kind of error",N,N],[13,"InvalidValue",E,"Occurs when an [`Arg`] has a set of possible values, and…",3,N],[13,"UnknownArgument",E,"Occurs when a user provides a flag, option, argument or…",3,N],[13,"InvalidSubcommand",E,R[1028],3,N],[13,"UnrecognizedSubcommand",E,R[1028],3,N],[13,"EmptyValue",E,"Occurs when the user provides an empty value for an option…",3,N],[13,"ValueValidation",E,"Occurs when the user provides a value for an argument with…",3,N],[13,"TooManyValues",E,"Occurs when a user provides more values for an argument…",3,N],[13,"TooFewValues",E,"Occurs when the user provides fewer values for an argument…",3,N],[13,"WrongNumberOfValues",E,"Occurs when the user provides a different number of values…",3,N],[13,"ArgumentConflict",E,"Occurs when the user provides two values which conflict…",3,N],[13,"MissingRequiredArgument",E,"Occurs when the user does not provide one or more required…",3,N],[13,"MissingSubcommand",E,"Occurs when a subcommand is required (as defined by…",3,N],[13,"MissingArgumentOrSubcommand",E,"Occurs when either an argument or [`SubCommand`] is…",3,N],[13,"UnexpectedMultipleUsage",E,"Occurs when the user provides multiple values to an…",3,N],[13,R[1055],E,"Occurs when the user provides a value containing invalid…",3,N],[13,"HelpDisplayed",E,"Not a true \"error\" as it means `--help` or similar was…",3,N],[13,"VersionDisplayed",E,"Not a true \"error\" as it means `--version` or similar was…",3,N],[13,"ArgumentNotFound",E,"Occurs when using the [`value_t!`] and [`values_t!`]…",3,N],[13,"Io",E,"Represents an [I/O error]. Can occur when writing to…",3,N],[13,"Format",E,"Represents a [Format error] (which is a part of…",3,N],[4,"Shell",E,"Describes which shell to produce a completions file for",N,N],[13,"Bash",E,"Generates a .bash completion file for the Bourne Again…",4,N],[13,"Fish",E,"Generates a .fish completion file for the Friendly…",4,N],[13,"Zsh",E,"Generates a completion file for the Z SHell (ZSH)",4,N],[13,"PowerShell",E,"Generates a completion file for PowerShell",4,N],[13,"Elvish",E,"Generates a completion file for Elvish",4,N],[11,"new",E,"Creates a new instance of an application requiring a name.…",5,[[[R[34]],["into",[R[34]]]],["self"]]],[11,"get_name",E,"Get the name of the app",5,[[["self"]],["str"]]],[11,"get_bin_name",E,"Get the name of the binary",5,[[["self"]],[["str"],[R[24],["str"]]]]],[11,"with_defaults",E,"Creates a new instance of an application requiring a name,…",5,[[[R[34]],["into",[R[34]]]],["self"]]],[11,"author",E,"Sets a string of author(s) that will be displayed to the…",5,[[["into",["str"]],["str"]],["self"]]],[11,"bin_name",E,"Overrides the system-determined binary name. This should…",5,[[[R[34]],["into",[R[34]]]],["self"]]],[11,"about",E,R[1029],5,[[["into",["str"]],["str"]],["self"]]],[11,"long_about",E,R[1029],5,[[["into",["str"]],["str"]],["self"]]],[11,"name",E,"Sets the program's name. This will be displayed when…",5,[[[R[34]],["into",[R[34]]]],["self"]]],[11,"after_help",E,R[1030],5,[[["into",["str"]],["str"]],["self"]]],[11,"before_help",E,R[1030],5,[[["into",["str"]],["str"]],["self"]]],[11,"version",E,R[1031],5,[[["into",["str"]],["str"]],["self"]]],[11,"long_version",E,R[1031],5,[[["into",["str"]],["str"]],["self"]]],[11,"usage",E,"Sets a custom usage string to override the auto-generated…",5,[[["into",["str"]],["str"]],["self"]]],[11,"help",E,"Sets a custom help message and overrides the…",5,[[["into",["str"]],["str"]],["self"]]],[11,"help_short",E,"Sets the [`short`] for the auto-generated `help` argument.",5,[[["str"],["asref",["str"]]],["self"]]],[11,"version_short",E,"Sets the [`short`] for the auto-generated `version`…",5,[[["str"],["asref",["str"]]],["self"]]],[11,"help_message",E,"Sets the help text for the auto-generated `help` argument.",5,[[["str"],["into",["str"]]],["self"]]],[11,"version_message",E,"Sets the help text for the auto-generated `version`…",5,[[["str"],["into",["str"]]],["self"]]],[11,"template",E,"Sets the help template to be used, overriding the default…",5,[[["into",["str"]],["str"]],["self"]]],[11,"setting",E,"Enables a single command, or [`SubCommand`], level settings.",5,[[[R[1032]]],["self"]]],[11,"settings",E,"Enables multiple command, or [`SubCommand`], level settings",5,[[],["self"]]],[11,"global_setting",E,"Enables a single setting that is propagated down through…",5,[[[R[1032]]],["self"]]],[11,"global_settings",E,"Enables multiple settings which are propagated down…",5,[[],["self"]]],[11,"unset_setting",E,"Disables a single command, or [`SubCommand`], level setting.",5,[[[R[1032]]],["self"]]],[11,"unset_settings",E,"Disables multiple command, or [`SubCommand`], level…",5,[[],["self"]]],[11,"set_term_width",E,"Sets the terminal width at which to wrap help messages.…",5,[[["usize"]],["self"]]],[11,"max_term_width",E,"Sets the max terminal width at which to wrap help…",5,[[["usize"]],["self"]]],[11,"arg",E,"Adds an [argument] to the list of valid possibilities.",5,[[["into",["arg"]],["arg"]],["self"]]],[11,"args",E,"Adds multiple [arguments] to the list of valid possibilities",5,[[],["self"]]],[11,"arg_from_usage",E,"A convenience method for adding a single [argument] from a…",5,[[["str"]],["self"]]],[11,"args_from_usage",E,"Adds multiple [arguments] at once from a usage string, one…",5,[[["str"]],["self"]]],[11,"alias",E,"Allows adding a [`SubCommand`] alias, which function as…",5,[[["into",["str"]],["str"]],["self"]]],[11,"aliases",E,"Allows adding [`SubCommand`] aliases, which function as…",5,[[],["self"]]],[11,R[1039],E,"Allows adding a [`SubCommand`] alias that functions…",5,[[["into",["str"]],["str"]],["self"]]],[11,R[1040],E,"Allows adding multiple [`SubCommand`] aliases that…",5,[[],["self"]]],[11,"group",E,"Adds an [`ArgGroup`] to the application. [`ArgGroup`]s are…",5,[[["arggroup"]],["self"]]],[11,"groups",E,"Adds multiple [`ArgGroup`]s to the [`App`] at once.",5,[[],["self"]]],[11,R[1051],E,"Adds a [`SubCommand`] to the list of valid possibilities.…",5,[[["app"]],["self"]]],[11,"subcommands",E,"Adds multiple subcommands to the list of valid…",5,[[["i"]],["self"]]],[11,R[1042],E,"Allows custom ordering of [`SubCommand`]s within the help…",5,[[["usize"]],["self"]]],[11,"print_help",E,R[1033],5,[[["self"]],[R[1034]]]],[11,"print_long_help",E,R[1033],5,[[["self"]],[R[1034]]]],[11,"write_help",E,R[1035],5,[[["self"],["w"]],[R[1034]]]],[11,"write_long_help",E,R[1035],5,[[["self"],["w"]],[R[1034]]]],[11,"write_version",E,R[1036],5,[[["self"],["w"]],[R[1034]]]],[11,"write_long_version",E,R[1036],5,[[["self"],["w"]],[R[1034]]]],[11,"gen_completions",E,R[1037],5,[[[R[34]],["shell"],["self"],["osstring"],["into",["osstring"]],["into",[R[34]]]]]],[11,"gen_completions_to",E,R[1037],5,[[[R[34]],["shell"],["self"],["w"],["into",[R[34]]]]]],[11,"get_matches",E,"Starts the parsing process, upon a failed parse an error…",5,[[],[R[1038]]]],[11,"get_matches_safe",E,"Starts the parsing process. This method will return a…",5,[[],[[R[1038]],[R[1034],[R[1038]]]]]],[11,"get_matches_from",E,"Starts the parsing process. Like [`App::get_matches`] this…",5,[[["i"]],[R[1038]]]],[11,"get_matches_from_safe",E,"Starts the parsing process. A combination of…",5,[[["i"]],[[R[1038]],[R[1034],[R[1038]]]]]],[11,"get_matches_from_safe_borrow",E,"Starts the parsing process without consuming the [`App`]…",5,[[["self"],["i"]],[[R[1038]],[R[1034],[R[1038]]]]]],[11,"with_name",E,"Creates a new instance of [`Arg`] using a unique string…",6,[[["str"]],["self"]]],[11,"from_usage",E,"Creates a new instance of [`Arg`] from a usage string.…",6,[[["str"]],["self"]]],[11,"short",E,"Sets the short version of the argument without the…",6,[[["str"],["asref",["str"]]],["self"]]],[11,"long",E,"Sets the long version of the argument without the…",6,[[["str"]],["self"]]],[11,"alias",E,"Allows adding a [`Arg`] alias, which function as \"hidden\"…",6,[[["into",["str"]],["str"]],["self"]]],[11,"aliases",E,"Allows adding [`Arg`] aliases, which function as \"hidden\"…",6,[[],["self"]]],[11,R[1039],E,"Allows adding a [`Arg`] alias that functions exactly like…",6,[[["into",["str"]],["str"]],["self"]]],[11,R[1040],E,"Allows adding multiple [`Arg`] aliases that functions…",6,[[],["self"]]],[11,"help",E,"Sets the short help text of the argument that will be…",6,[[["str"]],["self"]]],[11,"long_help",E,"Sets the long help text of the argument that will be…",6,[[["str"]],["self"]]],[11,"last",E,"Specifies that this arg is the last, or final, positional…",6,[[["bool"]],["self"]]],[11,"required",E,"Sets whether or not the argument is required by default.…",6,[[["bool"]],["self"]]],[11,"require_equals",E,"Requires that options use the `--option=val` syntax (i.e.…",6,[[["bool"]],["self"]]],[11,"allow_hyphen_values",E,"Allows values which start with a leading hyphen (`-`)",6,[[["bool"]],["self"]]],[11,"required_unless",E,"Sets an arg that override this arg's required setting.…",6,[[["str"]],["self"]]],[11,"required_unless_all",E,"Sets args that override this arg's required setting. (i.e.…",6,[[],["self"]]],[11,"required_unless_one",E,"Sets args that override this arg's [required] setting.…",6,[[],["self"]]],[11,R[1047],E,"Sets a conflicting argument by name. I.e. when using this…",6,[[["str"]],["self"]]],[11,R[1048],E,"The same as [`Arg::conflicts_with`] but allows specifying…",6,[[],["self"]]],[11,"overrides_with",E,"Sets a overridable argument by name. I.e. this argument…",6,[[["str"]],["self"]]],[11,"overrides_with_all",E,"Sets multiple mutually overridable arguments by name. I.e.…",6,[[],["self"]]],[11,"requires",E,"Sets an argument by name that is required when this one is…",6,[[["str"]],["self"]]],[11,"requires_if",E,"Allows a conditional requirement. The requirement will…",6,[[["str"],["str"]],["self"]]],[11,"requires_ifs",E,"Allows multiple conditional requirements. The requirement…",6,[[],["self"]]],[11,"required_if",E,"Allows specifying that an argument is [required]…",6,[[["str"],["str"]],["self"]]],[11,"required_ifs",E,"Allows specifying that an argument is [required] based on…",6,[[],["self"]]],[11,R[1045],E,"Sets multiple arguments by names that are required when…",6,[[],["self"]]],[11,"takes_value",E,"Specifies that the argument takes a value at run time.",6,[[["bool"]],["self"]]],[11,"hide_possible_values",E,"Specifies if the possible values of an argument should be…",6,[[["bool"]],["self"]]],[11,"hide_default_value",E,"Specifies if the default value of an argument should be…",6,[[["bool"]],["self"]]],[11,"index",E,"Specifies the index of a positional argument starting at 1.",6,[[["u64"]],["self"]]],[11,"multiple",E,"Specifies that the argument may appear more than once. For…",6,[[["bool"]],["self"]]],[11,"value_terminator",E,"Specifies a value that stops parsing multiple values of a…",6,[[["str"]],["self"]]],[11,"global",E,"Specifies that an argument can be matched to all child…",6,[[["bool"]],["self"]]],[11,"empty_values",E,"Allows an argument to accept explicitly empty values. An…",6,[[["bool"]],["self"]]],[11,"hidden",E,"Hides an argument from help message output.",6,[[["bool"]],["self"]]],[11,"possible_values",E,"Specifies a list of possible values for this argument. At…",6,[[],["self"]]],[11,"possible_value",E,"Specifies a possible value for this argument, one at a…",6,[[["str"]],["self"]]],[11,R[449],E,"When used with [`Arg::possible_values`] it allows the…",6,[[["bool"]],["self"]]],[11,"group",E,"Specifies the name of the [`ArgGroup`] the argument…",6,[[["str"]],["self"]]],[11,"groups",E,"Specifies the names of multiple [`ArgGroup`]'s the…",6,[[],["self"]]],[11,"number_of_values",E,"Specifies how many values are required to satisfy this…",6,[[["u64"]],["self"]]],[11,"validator",E,"Allows one to perform a custom validation on the argument…",6,[[["f"]],["self"]]],[11,"validator_os",E,"Works identically to Validator but is intended to be used…",6,[[["f"]],["self"]]],[11,"max_values",E,"Specifies the maximum number of values are for this…",6,[[["u64"]],["self"]]],[11,"min_values",E,"Specifies the minimum number of values for this argument.…",6,[[["u64"]],["self"]]],[11,"use_delimiter",E,"Specifies whether or not an argument should allow grouping…",6,[[["bool"]],["self"]]],[11,"require_delimiter",E,"Specifies that multiple values may only be set using the…",6,[[["bool"]],["self"]]],[11,"value_delimiter",E,"Specifies the separator to use when values are clumped…",6,[[["str"]],["self"]]],[11,"value_names",E,"Specify multiple names for values of option arguments.…",6,[[],["self"]]],[11,"value_name",E,"Specifies the name for value of [option] or [positional]…",6,[[["str"]],["self"]]],[11,"default_value",E,"Specifies the value of the argument when not specified at…",6,[[["str"]],["self"]]],[11,"default_value_os",E,"Provides a default value in the exact same manner as…",6,[[["osstr"]],["self"]]],[11,"default_value_if",E,"Specifies the value of the argument if `arg` has been used…",6,[[["str"],[R[24],["str"]],["str"]],["self"]]],[11,"default_value_if_os",E,"Provides a conditional default value in the exact same…",6,[[["str"],["osstr"],[R[24],["osstr"]]],["self"]]],[11,"default_value_ifs",E,"Specifies multiple values and conditions in the same…",6,[[],["self"]]],[11,"default_value_ifs_os",E,"Provides multiple conditional default values in the exact…",6,[[],["self"]]],[11,"env",E,R[1041],6,[[["str"]],["self"]]],[11,"env_os",E,R[1041],6,[[["osstr"]],["self"]]],[11,"hide_env_values",E,"@TODO @p2 @docs @release: write docs",6,[[["bool"]],["self"]]],[11,"next_line_help",E,"When set to `true` the help string will be displayed on…",6,[[["bool"]],["self"]]],[11,R[1042],E,"Allows custom ordering of args within the help message.…",6,[[["usize"]],["self"]]],[11,"raw",E,"Indicates that all parameters passed after this should not…",6,[[["bool"]],["self"]]],[11,"hidden_short_help",E,"Hides an argument from short help message output.",6,[[["bool"]],["self"]]],[11,"hidden_long_help",E,"Hides an argument from long help message output.",6,[[["bool"]],["self"]]],[11,"is_set",E,"Checks if one of the [`ArgSettings`] settings is set for…",6,[[[R[1043]],["self"]],["bool"]]],[11,"set",E,"Sets one of the [`ArgSettings`] settings for the argument.",6,[[[R[1043]]],["self"]]],[11,"unset",E,"Unsets one of the [`ArgSettings`] settings for the argument.",6,[[[R[1043]]],["self"]]],[11,"value_of",E,"Gets the value of a specific [option] or [positional]…",7,[[["str"],["self"],["asref",["str"]]],[["str"],[R[24],["str"]]]]],[11,"value_of_lossy",E,"Gets the lossy value of a specific argument. If the…",7,[[["str"],["self"],["asref",["str"]]],[["cow",["str"]],[R[24],["cow"]]]]],[11,"value_of_os",E,"Gets the OS version of a string value of a specific…",7,[[["str"],["self"],["asref",["str"]]],[["osstr"],[R[24],["osstr"]]]]],[11,"values_of",E,"Gets a [`Values`] struct which implements [`Iterator`] for…",7,[[["str"],["self"],["asref",["str"]]],[["values"],[R[24],["values"]]]]],[11,"values_of_lossy",E,"Gets the lossy values of a specific argument. If the…",7,[[["str"],["self"],["asref",["str"]]],[["vec",[R[34]]],[R[24],["vec"]]]]],[11,"values_of_os",E,"Gets a [`OsValues`] struct which is implements…",7,[[["str"],["self"],["asref",["str"]]],[["osvalues"],[R[24],["osvalues"]]]]],[11,"is_present",E,"Returns `true` if an argument was present at runtime,…",7,[[["str"],["self"],["asref",["str"]]],["bool"]]],[11,"occurrences_of",E,"Returns the number of times an argument was used at…",7,[[["str"],["self"],["asref",["str"]]],["u64"]]],[11,"index_of",E,"Gets the starting index of the argument in respect to all…",7,[[["str"],["self"],["asref",["str"]]],[[R[24],["usize"]],["usize"]]]],[11,"indices_of",E,"Gets all indices of the argument in respect to all other…",7,[[["str"],["self"],["asref",["str"]]],[["indices"],[R[24],["indices"]]]]],[11,"subcommand_matches",E,R[1044],7,[[["str"],["self"],["asref",["str"]]],[[R[24],[R[1038]]],[R[1038]]]]],[11,"subcommand_name",E,R[1044],7,[[["self"]],[["str"],[R[24],["str"]]]]],[11,R[1051],E,"This brings together [`ArgMatches::subcommand_matches`]…",7,[[["self"]]]],[11,"usage",E,"Returns a string slice of the usage statement for the…",7,[[["self"]],["str"]]],[11,"with_name",E,"Creates a new instance of a subcommand requiring a name.…",8,[[["str"]],["app"]]],[11,"with_name",E,"Creates a new instance of `ArgGroup` using a unique string…",9,[[["str"]],["self"]]],[11,"arg",E,"Adds an [argument] to this group by name",9,[[["str"]],["self"]]],[11,"args",E,"Adds multiple [arguments] to this group by name",9,[[],["self"]]],[11,"multiple",E,"Allows more than one of the ['Arg']s in this group to be…",9,[[["bool"]],["self"]]],[11,"required",E,"Sets the group as required or not. A required group will…",9,[[["bool"]],["self"]]],[11,"requires",E,R[1046],9,[[["str"]],["self"]]],[11,R[1045],E,R[1046],9,[[],["self"]]],[11,R[1047],E,"Sets the exclusion rules of this group. Exclusion (aka…",9,[[["str"]],["self"]]],[11,R[1048],E,"Sets the exclusion rules of this group. Exclusion rules…",9,[[],["self"]]],[11,"use_stderr",E,"Should the message be written to `stdout` or not",0,[[["self"]],["bool"]]],[11,"exit",E,"Prints the error to `stderr` and exits with a status of `1`",0,[[["self"]]]],[11,"with_description",E,"Create an error with a custom description.",0,[[["str"],[R[415]]],["self"]]],[11,"variants",E,"A list of possible variants in `&'static str` form",4,[[]]],[6,"Result",E,"Short hand for [`Result`] type",N,N],[14,"value_t",E,R[1049],N,N],[14,"value_t_or_exit",E,R[1049],N,N],[14,"values_t",E,R[1050],N,N],[14,"values_t_or_exit",E,R[1050],N,N],[14,"_clap_count_exprs",E,"Counts the number of comma-delimited expressions passed to…",N,N],[14,"arg_enum",E,"Convenience macro to generate more complete enums with…",N,N],[14,"crate_version",E,"Allows you to pull the version from your Cargo.toml at…",N,N],[14,"crate_authors",E,"Allows you to pull the authors for the app from your…",N,N],[14,"crate_description",E,"Allows you to pull the description from your Cargo.toml at…",N,N],[14,"crate_name",E,"Allows you to pull the name from your Cargo.toml at…",N,N],[14,"app_from_crate",E,"Allows you to build the `App` instance from your…",N,N],[14,"clap_app",E,"Build `App`, `Arg`s, `SubCommand`s and `Group`s with…",N,N],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[66],E,E,6,[[["self"]],[T]]],[11,R[67],E,E,6,[[[T],["self"]]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[30]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[66],E,E,9,[[["self"]],[T]]],[11,R[67],E,E,9,[[[T],["self"]]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[29],E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"]],[R[30]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[66],E,E,7,[[["self"]],[T]]],[11,R[67],E,E,7,[[[T],["self"]]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[30]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[22],E,E,10,[[],["i"]]],[11,"into",E,E,10,[[],[U]]],[11,R[66],E,E,10,[[["self"]],[T]]],[11,R[67],E,E,10,[[[T],["self"]]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[29],E,E,10,[[["self"]],[T]]],[11,R[15],E,E,10,[[["self"]],[R[30]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[66],E,E,8,[[["self"]],[T]]],[11,R[67],E,E,8,[[[T],["self"]]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[R[30]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[22],E,E,11,[[],["i"]]],[11,"into",E,E,11,[[],[U]]],[11,R[66],E,E,11,[[["self"]],[T]]],[11,R[67],E,E,11,[[[T],["self"]]]],[11,R[8],E,E,11,[[[U]],[R[2]]]],[11,R[29],E,E,11,[[["self"]],[T]]],[11,R[15],E,E,11,[[["self"]],[R[30]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[],[R[2]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[66],E,E,5,[[["self"]],[T]]],[11,R[67],E,E,5,[[[T],["self"]]]],[11,R[161],E,E,5,[[["self"]],[R[34]]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[30]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[161],E,E,0,[[["self"]],[R[34]]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[66],E,E,1,[[["self"]],[T]]],[11,R[67],E,E,1,[[[T],["self"]]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[66],E,E,2,[[["self"]],[T]]],[11,R[67],E,E,2,[[[T],["self"]]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[66],E,E,3,[[["self"]],[T]]],[11,R[67],E,E,3,[[[T],["self"]]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[66],E,E,4,[[["self"]],[T]]],[11,R[67],E,E,4,[[[T],["self"]]]],[11,R[161],E,E,4,[[["self"]],[R[34]]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[30]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,"eq",E,E,2,[[[R[1032]],["self"]],["bool"]]],[11,"eq",E,E,6,[[["arg"],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[1043]]],["bool"]]],[11,"eq",E,E,3,[[[R[415]],["self"]],["bool"]]],[11,R[101],E,E,11,[[["self"]],[["str"],[R[24],["str"]]]]],[11,R[101],E,E,10,[[["self"]],[["osstr"],[R[24],["osstr"]]]]],[11,"clone",E,E,2,[[["self"]],[R[1032]]]],[11,"clone",E,E,5,[[["self"]],["self"]]],[11,"clone",E,E,6,[[["self"]],["arg"]]],[11,"clone",E,E,7,[[["self"]],[R[1038]]]],[11,"clone",E,E,11,[[["self"]],["values"]]],[11,"clone",E,E,10,[[["self"]],["osvalues"]]],[11,"clone",E,E,8,[[["self"]],[R[1051]]]],[11,"clone",E,E,9,[[["self"]],["self"]]],[11,"clone",E,E,1,[[["self"]],[R[1043]]]],[11,"clone",E,E,3,[[["self"]],[R[415]]]],[11,"clone",E,E,4,[[["self"]],["shell"]]],[11,"from",E,E,6,[[["arg"]],["self"]]],[11,"from",E,E,9,[[["arggroup"]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"next",E,E,11,[[["self"]],[["str"],[R[24],["str"]]]]],[11,R[104],E,E,11,[[["self"]]]],[11,"next",E,E,10,[[["self"]],[["osstr"],[R[24],["osstr"]]]]],[11,R[104],E,E,10,[[["self"]]]],[11,R[222],E,E,6,[[],["arg"]]],[11,R[222],E,E,7,[[],["self"]]],[11,R[222],E,E,11,[[],["self"]]],[11,R[222],E,E,10,[[],["self"]]],[11,R[222],E,E,9,[[],["arggroup"]]],[11,"fmt",E,E,2,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,7,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,11,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,10,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,8,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",E,E,1,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,3,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,4,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,5,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",E,E,4,[[[R[12]],["self"]],[R[2]]]],[11,"from_str",E,E,2,[[["str"]],[R[2]]]],[11,"from_str",E,E,1,[[["str"]],[R[2]]]],[11,"from_str",E,E,4,[[["str"]],[R[2]]]],[11,R[485],E,E,0,[[["self"]],["str"]]]],"p":[[3,"Error"],[4,R[1052]],[4,R[1053]],[4,R[385]],[4,"Shell"],[3,"App"],[3,"Arg"],[3,"ArgMatches"],[3,"SubCommand"],[3,"ArgGroup"],[3,"OsValues"],[3,"Values"]]};
searchIndex["deflate"]={"doc":"An implementation an encoder using DEFLATE compression…","i":[[3,R[991],"deflate","A struct describing the options for a compressor or…",N,N],[12,"max_hash_checks",E,"The maximum number of checks to make in the hash table for…",0,N],[12,"lazy_if_less_than",E,"Only lazy match if we have a length less than this value.",0,N],[12,"matching_type",E,"Whether to use lazy or greedy matching.",0,N],[12,"special",E,"Force fixed/stored blocks (Not implemented yet). * Default…",0,N],[4,R[992],E,"Enum allowing some special options (not implemented yet)!",N,N],[13,"Normal",E,"Compress normally.",1,N],[13,"_ForceFixed",E,"Force fixed huffman tables. (Unimplemented!).",1,N],[13,"_ForceStored",E,"Force stored (uncompressed) blocks only. (Unimplemented!).",1,N],[4,R[993],E,"An enum describing the level of compression to be used by…",N,N],[13,"Fast",E,"Fast minimal compression (`CompressionOptions::fast()`).",2,N],[13,"Default",E,"Default level (`CompressionOptions::default()`).",2,N],[13,"Best",E,"Higher compression level (`CompressionOptions::high()`).",2,N],[4,R[994],E,"An enum describing whether we use lazy or greedy matching.",N,N],[13,"Greedy",E,"Use greedy matching: the matching algorithm simply uses a…",3,N],[13,"Lazy",E,"Use lazy matching: after finding a match, the next input…",3,N],[5,"deflate_bytes_conf",E,"Compress the given slice of bytes with DEFLATE compression.",N,[[[R[980]],["into",[R[980]]]],[["u8"],["vec",["u8"]]]]],[5,"deflate_bytes",E,"Compress the given slice of bytes with DEFLATE compression…",N,[[],[["u8"],["vec",["u8"]]]]],[5,"deflate_bytes_zlib_conf",E,R[981],N,[[[R[980]],["into",[R[980]]]],[["u8"],["vec",["u8"]]]]],[5,"deflate_bytes_zlib",E,R[981],N,[[],[["u8"],["vec",["u8"]]]]],[11,"high",E,"Returns compression settings rouhgly corresponding to the…",0,[[],[R[980]]]],[11,"fast",E,"Returns  a fast set of compression settings",0,[[],[R[980]]]],[11,"huffman_only",E,R[982],0,[[],[R[980]]]],[11,"rle",E,R[982],0,[[],[R[980]]]],[0,"write",E,"Encoders implementing a `Write` interface.",N,N],[3,R[995],R[983],"A DEFLATE encoder/compressor.",N,N],[3,R[996],E,"A Zlib encoder/compressor.",N,N],[11,"from","deflate",E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[66],E,E,0,[[["self"]],[T]]],[11,R[67],E,E,0,[[[T],["self"]]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[66],E,E,1,[[["self"]],[T]]],[11,R[67],E,E,1,[[[T],["self"]]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[66],E,E,2,[[["self"]],[T]]],[11,R[67],E,E,2,[[[T],["self"]]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[66],E,E,3,[[["self"]],[T]]],[11,R[67],E,E,3,[[[T],["self"]]]],[11,R[161],E,E,3,[[["self"]],[R[34]]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"from",R[983],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[30]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[30]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,"eq","deflate",E,2,[[["self"],[R[984]]],["bool"]]],[11,"eq",E,E,1,[[[R[985]],["self"]],["bool"]]],[11,"eq",E,E,0,[[[R[980]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[980]],["self"]],["bool"]]],[11,"eq",E,E,3,[[[R[986]],["self"]],["bool"]]],[11,"clone",E,E,2,[[["self"]],[R[984]]]],[11,"clone",E,E,1,[[["self"]],[R[985]]]],[11,"clone",E,E,0,[[["self"]],[R[980]]]],[11,"clone",E,E,3,[[["self"]],[R[986]]]],[11,"cmp",E,E,2,[[["self"],[R[984]]],[R[23]]]],[11,"cmp",E,E,3,[[[R[986]],["self"]],[R[23]]]],[11,"from",E,E,0,[[[R[984]]],[R[980]]]],[11,"drop",R[983],R[987],4,[[["self"]]]],[11,"drop",E,R[987],5,[[["self"]]]],[11,R[62],"deflate",E,2,[[["self"],[R[984]]],[[R[23]],[R[24],[R[23]]]]]],[11,R[62],E,E,3,[[[R[986]],["self"]],[[R[23]],[R[24],[R[23]]]]]],[11,R[222],E,E,2,[[],[R[984]]]],[11,R[222],E,E,1,[[],[R[985]]]],[11,R[222],E,"Returns the options describing the default compression…",0,[[],[R[980]]]],[11,"fmt",E,E,2,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,1,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,3,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,3,[[[R[12]],["self"]],[R[2]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"write",R[983],E,4,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,"flush",E,R[988],4,[[["self"]],[R[2]]]],[11,"write",E,E,5,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,"flush",E,R[988],5,[[["self"]],[R[2]]]],[11,"new",E,"Creates a new encoder using the provided compression…",4,[[["w"],[R[980]],["into",[R[980]]]],["deflateencoder"]]],[11,"finish",E,R[989],4,[[],[R[2]]]],[11,"reset",E,R[990],4,[[["self"],["w"]],[R[2]]]],[11,"new",E,"Create a new `ZlibEncoder` using the provided compression…",5,[[["w"],[R[980]],["into",[R[980]]]],["zlibencoder"]]],[11,"finish",E,R[989],5,[[],[R[2]]]],[11,"reset",E,R[990],5,[[["self"],["w"]],[R[2]]]],[11,"checksum",E,"Return the adler32 checksum of the currently consumed data.",5,[[["self"]],["u32"]]]],"p":[[3,R[991]],[4,R[992]],[4,R[993]],[4,R[994]],[3,R[995]],[3,R[996]]]};
searchIndex["gif"]={"doc":"GIF en- and decoding library Build Status","i":[[3,"Frame","gif",R[1535],N,N],[12,"delay",E,R[1536],0,N],[12,"dispose",E,R[1537],0,N],[12,R[1538],E,R[1539],0,N],[12,R[1540],E,R[1541],0,N],[12,"top",E,R[1542],0,N],[12,"left",E,R[1543],0,N],[12,"width",E,R[1544],0,N],[12,"height",E,R[1545],0,N],[12,R[1634],E,R[1546],0,N],[12,"palette",E,R[1547],0,N],[12,"buffer",E,R[1548],0,N],[3,R[332],E,"GIF decoder which supports streaming",N,N],[3,R[326],E,"Memory limit in bytes. `MemoryLimit::Some(0)` means that…",N,N],[12,"0",E,E,1,N],[3,"Reader",E,R[313],N,N],[3,"Decoder",E,R[313],N,N],[3,"Encoder",E,R[1549],N,N],[4,"Block",E,"Known GIF block types",N,N],[13,"Image",E,"Image block.",2,N],[13,R[314],E,"Extension block.",2,N],[13,"Trailer",E,"Image trailer.",2,N],[4,R[314],E,"Known GIF extensions",N,N],[13,"Text",E,"Text extension.",3,N],[13,"Control",E,"Control extension.",3,N],[13,"Comment",E,"Comment extension.",3,N],[13,"Application",E,"Application extension.",3,N],[4,R[327],E,"Disposal method",N,N],[13,"Any",E,"StreamingDecoder is not required to take any action.",4,N],[13,"Keep",E,"Do not dispose.",4,N],[13,"Background",E,"Restore to background color.",4,N],[13,"Previous",E,"Restore to previous.",4,N],[4,"Decoded",E,"Indicates whether a certain object has been decoded",N,N],[13,"Nothing",E,"Decoded nothing.",5,N],[13,"GlobalPalette",E,"Global palette.",5,N],[13,"BackgroundColor",E,"Index of the background color in the global palette.",5,N],[13,"Trailer",E,"Decoded the image trailer.",5,N],[13,"BlockStart",E,"The start of a block.",5,N],[13,"SubBlockFinished",E,"Decoded a sub-block. More sub-block are available.",5,N],[13,"BlockFinished",E,"Decoded the last (or only) sub-block of a block.",5,N],[13,"Frame",E,"Decoded all information of the next frame. The returned…",5,N],[13,"Data",E,"Decoded some data of the current frame.",5,N],[13,"DataEnd",E,"No more data available the current frame.",5,N],[4,R[328],E,"Decoding error.",N,N],[13,"Format",E,"Returned if the image is found to be malformed.",6,N],[13,"Internal",E,"Internal (logic) error.",6,N],[13,"Io",E,"Wraps `std::io::Error`.",6,N],[4,R[329],E,"Output mode for the image data",N,N],[13,"RGBA",E,"The decoder expands the image data to 32bit RGBA. This…",7,N],[13,"Indexed",E,"The decoder returns the raw indexed data.",7,N],[4,R[330],E,"Configures how extensions should be handled",N,N],[13,"Save",E,"Saves all extention data",8,N],[13,"Skip",E,"Skips the data of unknown extensions and extracts the data…",8,N],[4,R[331],E,"Extension data.",N,N],[13,"Control",E,"Control extension. Use `ExtensionData::new_control_ext` to…",9,N],[12,"flags","gif::ExtensionData","Flags.",9,N],[12,"delay",E,"Frame delay.",9,N],[12,"trns",E,"Transparent index.",9,N],[13,"Repetitions","gif","Sets the number of repetitions",9,N],[4,"Repeat",E,"Number of repetitions",N,N],[13,"Finite",E,"Finite number of repetitions",10,N],[13,"Infinite",E,"Infinite number of repetitions",10,N],[11,"from_u8",E,R[316],4,[[["u8"]],[[R[315]],[R[24],[R[315]]]]]],[11,"from_u8",E,R[316],2,[[["u8"]],[["block"],[R[24],["block"]]]]],[11,"from_u8",E,R[316],3,[[["u8"]],[[R[24],[R[317]]],[R[317]]]]],[11,"from_rgba",E,R[1607],0,[[["u16"]],["frame"]]],[11,"from_rgb",E,R[1608],0,[[["u16"]],["frame"]]],[11,"new",E,"Creates a new streaming decoder",11,[[],[R[323]]]],[11,"update",E,"Updates the internal state of the decoder. ",11,[[["self"]],[[R[318]],[R[2],[R[318]]]]]],[11,"last_ext",E,"Returns the data of the last extension that has been…",11,[[["self"]]]],[11,"current_frame_mut",E,"Current frame info as a mutable ref.",11,[[["self"]],["frame"]]],[11,"current_frame",E,"Current frame info as a ref.",11,[[["self"]],["frame"]]],[11,"width",E,R[319],11,[[["self"]],["u16"]]],[11,"height",E,R[320],11,[[["self"]],["u16"]]],[11,"new",E,"Creates a new decoder builder",12,[[["r"]],["decoder"]]],[11,"read_info",E,"Reads the logical screen descriptor including the global…",12,[[],[[R[2],["reader",R[318]]],[R[318]],["reader"]]]],[11,"next_frame_info",E,"Returns the next frame info",13,[[["self"]],[[R[318]],[R[2],[R[24],R[318]]],[R[24],["frame"]]]]],[11,"read_next_frame",E,"Reads the next frame from the image.",13,[[["self"]],[[R[318]],[R[2],[R[24],R[318]]],[R[24],["frame"]]]]],[11,"read_into_buffer",E,"Reads the data of the current frame into a pre-allocated…",13,[[["self"]],[[R[318]],[R[2],[R[318]]]]]],[11,"fill_buffer",E,"Reads data of the current frame into a pre-allocated…",13,[[["self"]],[[R[318]],[R[2],["bool",R[318]]],["bool"]]]],[11,R[1386],E,"Output buffer size",13,[[["self"]],["usize"]]],[11,"line_length",E,"Line length of the current frame",13,[[["self"]],["usize"]]],[11,"palette",E,"Returns the color palette relevant for the current (next)…",13,[[["self"]],[[R[318]],[R[2],[R[318]]]]]],[11,"global_palette",E,"The global color palette",13,[[["self"]],[R[24]]]],[11,"width",E,R[319],13,[[["self"]],["u16"]]],[11,"height",E,R[320],13,[[["self"]],["u16"]]],[11,"bg_color",E,"Index of the background color in the global palette",13,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,"new_control_ext",E,"Constructor for control extension data.",9,[[[R[315]],["u16"],["u8"],["bool"],[R[24],["u8"]]],[R[321]]]],[11,"new",E,"Creates a new encoder.",14,[[["u16"],["w"]],[R[2]]]],[11,"write_global_palette",E,"Writes the global color palette.",14,[[],[R[2]]]],[11,"write_frame",E,"Writes a frame to the image.",14,[[["self"],["frame"]],[R[2]]]],[11,"write_extension",E,"Writes an extension to the image.",14,[[[R[321]],["self"]],[R[2]]]],[11,"write_raw_extension",E,"Writes a raw extension to the image.",14,[[["self"],["u8"]],[R[2]]]],[8,R[333],E,"Implemented for objects that have parameters.",N,N],[11,"set",E,R[324],15,[[["self"],[R[325]]]]],[8,R[334],E,"Configuration parameter trait.",N,N],[16,"Result",E,"Result type of `set_param`.",16,N],[10,R[322],E,"Sets `self` as a parameter of `Object`.",16,[[["object"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[66],E,E,0,[[["self"]],[T]]],[11,R[67],E,E,0,[[[T],["self"]]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[8],E,E,11,[[[U]],[R[2]]]],[11,R[29],E,E,11,[[["self"]],[T]]],[11,R[15],E,E,11,[[["self"]],[R[30]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[],[R[2]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[8],E,E,13,[[[U]],[R[2]]]],[11,R[29],E,E,13,[[["self"]],[T]]],[11,R[15],E,E,13,[[["self"]],[R[30]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[],[R[2]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[8],E,E,12,[[[U]],[R[2]]]],[11,R[29],E,E,12,[[["self"]],[T]]],[11,R[15],E,E,12,[[["self"]],[R[30]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[],[R[2]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[8],E,E,14,[[[U]],[R[2]]]],[11,R[29],E,E,14,[[["self"]],[T]]],[11,R[15],E,E,14,[[["self"]],[R[30]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[],[R[2]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[66],E,E,2,[[["self"]],[T]]],[11,R[67],E,E,2,[[[T],["self"]]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[66],E,E,3,[[["self"]],[T]]],[11,R[67],E,E,3,[[[T],["self"]]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[66],E,E,4,[[["self"]],[T]]],[11,R[67],E,E,4,[[[T],["self"]]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[30]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[30]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[161],E,E,6,[[["self"]],[R[34]]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[30]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[30]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[R[30]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[29],E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"]],[R[30]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[29],E,E,10,[[["self"]],[T]]],[11,R[15],E,E,10,[[["self"]],[R[30]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,R[322],E,E,8,[[[R[323]]]]],[11,R[322],E,E,7,[[["decoder"]]]],[11,R[322],E,E,1,[[["decoder"]]]],[11,R[322],E,E,10,[[["encoder"]]]],[11,"eq",E,E,4,[[[R[315]],["self"]],["bool"]]],[11,"eq",E,E,2,[[["block"],["self"]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[317]]],["bool"]]],[11,"eq",E,E,8,[[["self"],["extensions"]],["bool"]]],[11,"eq",E,E,7,[[["coloroutput"],["self"]],["bool"]]],[11,"clone",E,E,4,[[["self"]],[R[315]]]],[11,"clone",E,E,2,[[["self"]],["block"]]],[11,"clone",E,E,3,[[["self"]],[R[317]]]],[11,"clone",E,E,0,[[["self"]],["frame"]]],[11,"from",E,E,6,[[["error"]],["self"]]],[11,"drop",E,E,14,[[["self"]]]],[11,R[222],E,E,0,[[],["frame"]]],[11,"fmt",E,E,4,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,2,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,3,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,6,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,8,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,5,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,11,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,7,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,1,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,6,[[[R[12]],["self"]],[R[2]]]],[11,R[485],E,E,6,[[["self"]],["str"]]],[11,"cause",E,E,6,[[["self"]],[[R[24],["error"]],["error"]]]],[11,"set",E,R[324],15,[[["self"],[R[325]]]]]],"p":[[3,"Frame"],[3,R[326]],[4,"Block"],[4,R[314]],[4,R[327]],[4,"Decoded"],[4,R[328]],[4,R[329]],[4,R[330]],[4,R[331]],[4,"Repeat"],[3,R[332]],[3,"Decoder"],[3,"Reader"],[3,"Encoder"],[8,R[333]],[8,R[334]]]};
searchIndex["image"]={"doc":"This crate provides native rust implementations of image…","i":[[3,"Luma","image","Grayscale colors",N,N],[12,"data",E,E,0,N],[3,"LumaA",E,"Grayscale colors + alpha channel",N,N],[12,"data",E,E,1,N],[3,"Rgb",E,"RGB colors",N,N],[12,"data",E,E,2,N],[3,"Rgba",E,"RGB colors + alpha channel",N,N],[12,"data",E,E,3,N],[3,"SubImage",E,"A View into another image",N,N],[3,"Pixels",E,"Immutable pixel iterator",N,N],[3,"MutPixels",E,"Mutable pixel iterator",N,N],[3,R[1629],E,"Generic image buffer",N,N],[3,"Frame",E,"A single animation frame",N,N],[3,"Frames",E,"Holds the frames of the animated image",N,N],[4,R[1635],E,"An enumeration over supported color types and their bit…",N,N],[13,"Gray",E,"Pixel is grayscale",4,N],[13,"RGB",E,"Pixel contains R, G and B channels",4,N],[13,"Palette",E,"Pixel is an index into a color palette",4,N],[13,"GrayA",E,"Pixel is grayscale with an alpha channel",4,N],[13,"RGBA",E,"Pixel is RGB with an alpha channel",4,N],[4,"ImageError",E,"An enumeration of Image errors",N,N],[13,"FormatError",E,"The Image is not formatted properly",5,N],[13,"DimensionError",E,"The Image's dimensions are either too small or too large",5,N],[13,"UnsupportedError",E,"The Decoder does not support this image format",5,N],[13,"UnsupportedColor",E,"The Decoder does not support this color type",5,N],[13,"NotEnoughData",E,"Not enough data was provided to the Decoder to decode the…",5,N],[13,"IoError",E,"An I/O Error occurred while decoding the image",5,N],[13,"ImageEnd",E,"The end of the image has been reached",5,N],[4,R[1620],E,"Result of a decoding process",N,N],[13,"U8",E,"A vector of unsigned bytes",6,N],[13,"U16",E,"A vector of unsigned words",6,N],[4,R[1621],E,R[1524],N,N],[13,"Nearest",E,R[1525],7,N],[13,"Triangle",E,R[1526],7,N],[13,"CatmullRom",E,R[1527],7,N],[13,"Gaussian",E,R[1528],7,N],[13,"Lanczos3",E,R[1529],7,N],[4,R[1622],E,"An enumeration of supported image formats. Not all formats…",N,N],[13,"PNG",E,"An Image in PNG Format",8,N],[13,"JPEG",E,"An Image in JPEG Format",8,N],[13,"GIF",E,"An Image in GIF Format",8,N],[13,"WEBP",E,"An Image in WEBP Format",8,N],[13,"PPM",E,"An Image in PPM Format",8,N],[13,"TIFF",E,"An Image in TIFF Format",8,N],[13,"TGA",E,"An Image in TGA Format",8,N],[13,"BMP",E,"An Image in BMP Format",8,N],[13,"ICO",E,"An Image in ICO Format",8,N],[13,"HDR",E,"An Image in Radiance HDR Format",8,N],[4,R[1623],E,"A Dynamic Image",N,N],[13,"ImageLuma8",E,"Each pixel in this image is 8-bit Luma",9,N],[13,"ImageLumaA8",E,"Each pixel in this image is 8-bit Luma with alpha",9,N],[13,"ImageRgb8",E,"Each pixel in this image is 8-bit Rgb",9,N],[13,"ImageRgba8",E,"Each pixel in this image is 8-bit Rgb with alpha",9,N],[5,"Luma",E,E,N,[[],[[R[1518]],["luma"]]]],[5,"LumaA",E,E,N,[[],[[R[1518]],["lumaa"]]]],[5,"Rgb",E,E,N,[[],[["rgb"],[R[1518]]]]],[5,"Rgba",E,E,N,[[],[[R[1518]],["rgba"]]]],[5,"open",E,"Open the image located at the path specified. The image's…",N,[[["p"]],[[R[1520],[R[1519]]],[R[1519]]]]],[5,"load",E,"Create a new image from a Reader",N,[[["bufread"],["seek"],[R[1522]]],[[R[1520],[R[1519]]],[R[1519]]]]],[5,"load_from_memory",E,R[1521],N,[[],[[R[1520],[R[1519]]],[R[1519]]]]],[5,"load_from_memory_with_format",E,R[1521],N,[[[R[1522]]],[[R[1520],[R[1519]]],[R[1519]]]]],[5,"guess_format",E,"Guess image format from memory block",N,[[],[[R[1520],[R[1522]]],[R[1522]]]]],[5,"save_buffer",E,"Saves the supplied buffer to a file at the path specified.",N,[[["u32"],[R[1397]],["p"]],[R[2]]]],[0,"math",E,"Mathematical helper functions and types.",N,N],[0,"utils",R[1523],"Shared mathematical utility functions.",N,N],[5,"clamp","image::math::utils","Cut value to be inside given range",N,[[["n"]],["n"]]],[0,"nq",R[1523],"NEUQUANT Neural-Net quantization algorithm by Anthony…",N,N],[3,R[52],R[1575],"Neural network color quantizer",N,N],[11,"new",E,R[1638],10,[[["i32"],["usize"]],["self"]]],[11,"init",E,R[1639],10,[[["self"]]]],[11,"map_pixel",E,"Maps the pixel in-place to the best-matching color in the…",10,[[["self"]]]],[11,"index_of",E,"Finds the best-matching index in the color map for `pixel`",10,[[["self"]],["usize"]]],[0,"imageops","image","Image Processing Functions",N,N],[4,R[1621],"image::imageops",R[1524],N,N],[13,"Nearest",E,R[1525],7,N],[13,"Triangle",E,R[1526],7,N],[13,"CatmullRom",E,R[1527],7,N],[13,"Gaussian",E,R[1528],7,N],[13,"Lanczos3",E,R[1529],7,N],[5,"rotate90",E,"Rotate an image 90 degrees clockwise.",N,[[["i"]],[["vec"],[R[1530],["vec"]]]]],[5,"rotate180",E,"Rotate an image 180 degrees clockwise.",N,[[["i"]],[["vec"],[R[1530],["vec"]]]]],[5,"rotate270",E,"Rotate an image 270 degrees clockwise.",N,[[["i"]],[["vec"],[R[1530],["vec"]]]]],[5,"flip_horizontal",E,"Flip an image horizontally",N,[[["i"]],[["vec"],[R[1530],["vec"]]]]],[5,"flip_vertical",E,"Flip an image vertically",N,[[["i"]],[["vec"],[R[1530],["vec"]]]]],[5,"filter3x3",E,"Perform a 3x3 box filter on the supplied image. `kernel`…",N,[[["i"]],[[R[1530],["vec"]],["vec"]]]],[5,"resize",E,"Resize the supplied image to the specified dimensions.…",N,[[["i"],["u32"],[R[1558]]],[["vec"],[R[1530],["vec"]]]]],[5,"blur",E,"Performs a Gaussian blur on the supplied image. `sigma` is…",N,[[["i"],["f32"]],[["vec"],[R[1530],["vec"]]]]],[5,"unsharpen",E,"Performs an unsharpen mask on the supplied image. `sigma`…",N,[[["i"],["i32"],["f32"]],[[R[1530],["vec"]],["vec"]]]],[5,"crop",E,"Return a mutable view into an image",N,[[["u32"],["i"]],[["subimage"],["genericimage"]]]],[5,"overlay",E,"Overlay an image at a given coordinate (x, y)",N,[[["i"],["u32"],["i"]]]],[5,"replace",E,"Replace the contents of an image at a given coordinate (x,…",N,[[["i"],["u32"],["i"]]]],[0,"colorops",E,"Public only because of Rust bug:…",N,N],[3,"BiLevel",R[1576],"A bi-level color map",N,N],[5,"grayscale",E,"Convert the supplied image to grayscale",N,[[["i"]],[[R[1530],["luma","vec"]],["vec"],["luma"]]]],[5,"invert",E,"Invert each pixel within the supplied image. This function…",N,[[["i"]]]],[5,"contrast",E,"Adjust the contrast of the supplied image. `contrast` is…",N,[[["i"],["f32"]],[[R[1530],["vec"]],["vec"]]]],[5,"brighten",E,"Brighten the supplied image. `value` is the amount to…",N,[[["i"],["i32"]],[[R[1530],["vec"]],["vec"]]]],[5,"huerotate",E,R[1559],N,[[["i"],["i32"]],[[R[1530],["vec"]],["vec"]]]],[5,"dither",E,"Reduces the colors of the image using the supplied…",N,[[[R[1530]],["map"]]]],[5,"index_colors",E,"Reduces the colors using the supplied `color_map` and…",N,[[["map"],[R[1530]]],[["luma",["u8"]],[R[1530],["luma","vec"]],["vec",["u8"]]]]],[8,"ColorMap",E,"A color map",N,N],[16,"Color",E,"The color type on which the map operates on",11,N],[10,"index_of",E,"Returns the index of the closed match of `color` in the…",11,[[["self"]],["usize"]]],[10,"map_color",E,"Maps `color` to the closest color in the color map.",11,[[["self"]]]],[0,"webp","image","Decoding of Webp Images",N,N],[3,R[1624],R[1577],"A Representation of a Webp Image format decoder.",N,N],[11,"new",E,"Create a new WebpDecoder from the Reader `r`. This…",12,[[["r"]],["webpdecoder"]]],[0,"vp8",E,"An implementation of the VP8 Video Codec",N,N],[3,"Frame",R[1578],"A Representation of the last decoded video frame",N,N],[12,"width",E,"The width of the luma plane",13,N],[12,"height",E,"The height of the luma plane",13,N],[12,"ybuf",E,"The luma plane of the frame",13,N],[12,"keyframe",E,"Indicates whether this frame is a keyframe",13,N],[12,"for_display",E,"Indicates whether this frame is intended for display",13,N],[12,"pixel_type",E,"The pixel type of the frame as defined by Section 9.2 of…",13,N],[3,"VP8Decoder",E,"VP8 Decoder",N,N],[11,"new",E,"Create a new decoder. The reader must present a raw vp8…",14,[[["r"]],["vp8decoder"]]],[11,"decode_frame",E,"Decodes the current frame and returns a reference to it",14,[[["self"]],[["frame"],[R[2],["frame"]]]]],[0,"ppm","image","Encoding of portable pixmap Images",N,N],[3,"PPMEncoder",R[1583],"A representation of a PPM encoder.",N,N],[3,"PPMDecoder",E,"PPM decoder",N,N],[11,"new",E,"Create a new PPMEncoder from the Writer `w`. This function…",15,[[["w"]],["ppmencoder"]]],[11,"encode",E,"Encode the buffer `im` as a PPM image. `width` and…",15,[[["u32"],[R[1397]],["self"]],[R[2]]]],[11,"new",E,R[1531],16,[[["r"]],[["ppmdecoder"],[R[1520],["ppmdecoder"]]]]],[0,"png","image","Decoding and Encoding of PNG Images",N,N],[3,"PNGDecoder",R[1585],"PNG decoder",N,N],[3,"PNGEncoder",E,"PNG encoder",N,N],[11,"new",E,"Creates a new decoder that decodes from the stream `r`",17,[[["r"]],["pngdecoder"]]],[11,"new",E,R[1533],18,[[["w"]],["pngencoder"]]],[11,"encode",E,R[1532],18,[[["u32"],[R[1397]]],[R[2]]]],[0,"ico","image","Decoding and Encoding of ICO files",N,N],[3,"ICODecoder",R[1586],"An ico decoder",N,N],[3,"ICOEncoder",E,"ICO encoder",N,N],[11,"new",E,R[1531],19,[[["r"]],[[R[1520],["icodecoder"]],["icodecoder"]]]],[11,"new",E,"Create a new encoder that writes its output to `w`.",20,[[["w"]],["icoencoder"]]],[11,"encode",E,R[1532],20,[[["u32"],[R[1397]]],[R[2]]]],[0,"jpeg","image","Decoding and Encoding of JPEG Images",N,N],[3,R[1626],R[1579],R[1636],N,N],[3,R[1625],E,"The representation of a JPEG encoder",N,N],[11,"new",E,R[1533],21,[[["w"]],[R[1534]]]],[11,"new_with_quality",E,"Create a new encoder that writes its output to `w`, and…",21,[[["u8"],["w"]],[R[1534]]]],[11,"encode",E,R[1532],21,[[["u32"],[R[1397]],["self"]],[R[2]]]],[11,"new",E,R[1531],22,[[["r"]],["jpegdecoder"]]],[0,"gif","image","Decoding of GIF Images",N,N],[3,"Frame",R[1581],R[1535],N,N],[12,"delay",E,R[1536],23,N],[12,"dispose",E,R[1537],23,N],[12,R[1538],E,R[1539],23,N],[12,R[1540],E,R[1541],23,N],[12,"top",E,R[1542],23,N],[12,"left",E,R[1543],23,N],[12,"width",E,R[1544],23,N],[12,"height",E,R[1545],23,N],[12,R[1634],E,R[1546],23,N],[12,"palette",E,R[1547],23,N],[12,"buffer",E,R[1548],23,N],[3,"Decoder",E,R[313],N,N],[3,"Encoder",E,R[1549],N,N],[11,"new",E,"Creates a new decoder that decodes the input steam `r`",24,[[["r"]],["decoder"]]],[11,"new",E,"Creates a new GIF encoder.",25,[[["w"]],["encoder"]]],[11,"encode",E,"Encodes a frame.",25,[[["frame"]],[R[1520]]]],[0,"tiff","image","Decoding and Encoding of TIFF Images",N,N],[3,R[1627],R[1580],"The representation of a TIFF decoder",N,N],[11,"new",E,R[1531],26,[[["r"]],[[R[1550]],[R[1520],[R[1550]]]]]],[11,"init",E,"Initializes the decoder.",26,[[],[[R[1550]],[R[1520],[R[1550]]]]]],[11,"next_image",E,"Reads in the next image. If there is no further image in…",26,[[],[[R[1550]],[R[1520],[R[1550]]]]]],[11,"more_images",E,"Returns `true` if there is at least one more image…",26,[[["self"]],["bool"]]],[11,"byte_order",E,"Returns the byte_order",26,[[["self"]],[R[667]]]],[11,"read_short",E,"Reads a TIFF short value",26,[[["self"]],[["u16"],[R[2],["u16","error"]],["error"]]]],[11,"read_long",E,"Reads a TIFF long value",26,[[["self"]],[["u32"],[R[2],["u32","error"]],["error"]]]],[11,"read_offset",E,"Reads a TIFF IFA offset/value field",26,[[["self"]],[["error"],[R[2],["error"]]]]],[11,"goto_offset",E,"Moves the cursor to the specified offset",26,[[["u32"],["self"]],[R[2]]]],[0,"tga","image","Decoding of TGA Images",N,N],[3,"TGADecoder",R[1587],"The representation of a TGA decoder",N,N],[11,"new",E,R[1531],27,[[["r"]],["tgadecoder"]]],[0,"bmp","image","Decoding of BMP Images",N,N],[3,"BMPDecoder",R[1588],"A bmp decoder",N,N],[11,"new",E,R[1531],28,[[["r"]],["bmpdecoder"]]],[0,"hdr","image","Decoding of Radiance HDR Images",N,N],[3,"HDRAdapter",R[1589],"Adapter to conform to `ImageDecoder` trait",N,N],[3,"HDRDecoder",E,"An Radiance HDR decoder",N,N],[3,"RGBE8Pixel",E,"Refer to wikipedia",N,N],[12,"c",E,"Color components",29,N],[12,"e",E,"Exponent",29,N],[3,R[1633],E,"Scanline buffered pixel by pixel iterator",N,N],[3,R[1628],E,"Metadata for Radiance HDR image",N,N],[12,"width",E,"Width of decoded image. It could be either scanline…",30,N],[12,"height",E,"Height of decoded image. It depends on orientation too.",30,N],[12,"orientation",E,"Orientation matrix. For standart orientation it is…",30,N],[12,"exposure",E,"Divide color values by exposure to get to get physical…",30,N],[12,"color_correction",E,"Divide color values by corresponing tuple member (r, g, b)…",30,N],[12,"pixel_aspect_ratio",E,"Pixel height divided by pixel width",30,N],[12,"custom_attributes",E,"All lines contained in image header are put here. Ordering…",30,N],[3,"HDREncoder",E,"Radiance HDR encoder",N,N],[5,"rgbe8",E,"Creates `RGBE8Pixel` from components",N,[[["u8"]],[R[1553]]]],[5,"read_raw_file",E,"Helper function for reading raw 3-channel f32 images",N,[[["path"],["asref",["path"]]],[["vec",["rgb"]],[R[2],["vec"]]]]],[5,"to_rgbe8",E,"Converts `Rgb<f32>` into `RGBE8Pixel`",N,[[["rgb",["f32"]],["f32"]],[R[1553]]]],[11,"new",E,"Creates adapter ",31,[[["r"]],[[R[1551]],[R[1520],[R[1551]]]]]],[11,"new_nonstrict",E,"Allows reading old Radiance HDR images",31,[[["r"]],[[R[1551]],[R[1520],[R[1551]]]]]],[11,"to_hdr",E,"Converts `RGBE8Pixel` into `Rgb<f32>` linearly    ",29,[[],[["rgb",["f32"]],["f32"]]]],[11,"to_ldr",E,"Converts `RGBE8Pixel` into `Rgb<T>` with scale=1 and…",29,[[],[["rgb"],[R[1518]],["zero"]]]],[11,"to_ldr_scale_gamma",E,"Converts RGBE8Pixel into Rgb using provided scale and gamma",29,[[["f32"]],[["rgb"],[R[1518]],["zero"]]]],[11,"new",E,"Reads Radiance HDR image header from stream `r` if the…",32,[[["r"]],[[R[1520],[R[1552]]],[R[1552]]]]],[11,"with_strictness",E,"Reads Radiance HDR image header from stream `reader`, if…",32,[[["bool"],["r"]],[[R[1520],[R[1552]]],[R[1552]]]]],[11,"metadata",E,"Returns file metadata. Refer to `HDRMetadata` for details.",32,[[["self"]],[R[1605]]]],[11,"read_image_native",E,"Consumes decoder and returns a vector of RGBE8 pixels",32,[[],[[R[1520],["vec"]],["vec",[R[1553]]]]]],[11,"read_image_transform",E,"Consumes decoder and returns a vector of tranformed pixels",32,[[["fn"],["send"],["sync"]],[[R[1520],["vec"]],["vec"]]]],[11,"read_image_ldr",E,"Consumes decoder and returns a vector of Rgb pixels. scale…",32,[[],[["vec",["rgb"]],[R[1520],["vec"]]]]],[11,"read_image_hdr",E,"Consumes decoder and returns a vector of Rgb pixels.",32,[[],[[R[1520],["vec"]],["vec",["rgb"]]]]],[11,"new",E,"Creates encoder",33,[[["w"]],["hdrencoder"]]],[11,"encode",E,"Encodes the image `data` that has dimensions `width` and…",33,[[["usize"]],[R[2]]]],[17,"SIGNATURE",E,"Radiance HDR file signature",N,N],[11,"new","image","Construct a new subimage",34,[[["u32"],["i"]],["subimage"]]],[11,"inner_mut",E,"Returns a mutable reference to the wrapped image.",34,[[["self"]],["i"]]],[11,"change_bounds",E,"Change the coordinates of this subimage.",34,[[["u32"],["self"]]]],[11,"to_image",E,"Convert this subimage to an ImageBuffer",34,[[["self"]],[["vec"],[R[1530],["vec"]]]]],[11,"new_luma8",E,"Creates a dynamic image backed by a buffer of grey pixels.",9,[[["u32"]],[R[1519]]]],[11,"new_luma_a8",E,"Creates a dynamic image backed by a buffer of grey pixels…",9,[[["u32"]],[R[1519]]]],[11,"new_rgb8",E,"Creates a dynamic image backed by a buffer of RGB pixels.",9,[[["u32"]],[R[1519]]]],[11,"new_rgba8",E,"Creates a dynamic image backed by a buffer of RGBA pixels.",9,[[["u32"]],[R[1519]]]],[11,"to_rgb",E,"Returns a copy of this image as an RGB image.",9,[[["self"]],["rgbimage"]]],[11,"to_rgba",E,"Returns a copy of this image as an RGBA image.",9,[[["self"]],[R[1554]]]],[11,"to_luma",E,"Returns a copy of this image as a Luma image.",9,[[["self"]],[R[1555]]]],[11,R[1570],E,"Returns a copy of this image as a LumaA image.",9,[[["self"]],[R[1556]]]],[11,"crop",E,"Return a cut out of this image delimited by the bounding…",9,[[["u32"],["self"]],[R[1519]]]],[11,"as_rgb8",E,"Return a reference to an 8bit RGB image",9,[[["self"]],[[R[24],["rgbimage"]],["rgbimage"]]]],[11,"as_mut_rgb8",E,"Return a mutable reference to an 8bit RGB image",9,[[["self"]],[[R[24],["rgbimage"]],["rgbimage"]]]],[11,"as_rgba8",E,"Return a reference to an 8bit RGBA image",9,[[["self"]],[[R[1554]],[R[24],[R[1554]]]]]],[11,"as_mut_rgba8",E,"Return a mutable reference to an 8bit RGBA image",9,[[["self"]],[[R[1554]],[R[24],[R[1554]]]]]],[11,"as_luma8",E,"Return a reference to an 8bit Grayscale image",9,[[["self"]],[[R[24],[R[1555]]],[R[1555]]]]],[11,"as_mut_luma8",E,"Return a mutable reference to an 8bit Grayscale image",9,[[["self"]],[[R[24],[R[1555]]],[R[1555]]]]],[11,"as_luma_alpha8",E,"Return a reference to an 8bit Grayscale image with an…",9,[[["self"]],[[R[1556]],[R[24],[R[1556]]]]]],[11,"as_mut_luma_alpha8",E,"Return a mutable reference to an 8bit Grayscale image with…",9,[[["self"]],[[R[1556]],[R[24],[R[1556]]]]]],[11,"raw_pixels",E,"Return this image's pixels as a byte vector.",9,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"color",E,"Return this image's color type.",9,[[["self"]],[R[1397]]]],[11,"grayscale",E,"Return a grayscale version of this image.",9,[[["self"]],[R[1519]]]],[11,"invert",E,"Invert the colors of this image. This method operates…",9,[[["self"]]]],[11,"resize",E,R[1557],9,[[["u32"],["self"],[R[1558]]],[R[1519]]]],[11,"resize_exact",E,R[1557],9,[[["u32"],["self"],[R[1558]]],[R[1519]]]],[11,"blur",E,"Performs a Gaussian blur on this image. `sigma` is a…",9,[[["self"],["f32"]],[R[1519]]]],[11,"unsharpen",E,"Performs an unsharpen mask on this image. `sigma` is the…",9,[[["i32"],["self"],["f32"]],[R[1519]]]],[11,"filter3x3",E,"Filters this image with the specified 3x3 kernel.",9,[[["self"]],[R[1519]]]],[11,"adjust_contrast",E,"Adjust the contrast of this image. `contrast` is the…",9,[[["self"],["f32"]],[R[1519]]]],[11,"brighten",E,"Brighten the pixels of this image. `value` is the amount…",9,[[["i32"],["self"]],[R[1519]]]],[11,"huerotate",E,R[1559],9,[[["i32"],["self"]],[R[1519]]]],[11,"flipv",E,"Flip this image vertically",9,[[["self"]],[R[1519]]]],[11,"fliph",E,"Flip this image horizontally",9,[[["self"]],[R[1519]]]],[11,"rotate90",E,"Rotate this image 90 degrees clockwise.",9,[[["self"]],[R[1519]]]],[11,"rotate180",E,"Rotate this image 180 degrees clockwise.",9,[[["self"]],[R[1519]]]],[11,"rotate270",E,"Rotate this image 270 degrees clockwise.",9,[[["self"]],[R[1519]]]],[11,"save",E,"Encode this image and write it to `w`",9,[[["self"],["w"],[R[1522]]],[R[1520]]]],[11,"from_raw",E,"Contructs a buffer from a generic container (for example a…",35,[[["u32"],["container"]],[[R[1530]],[R[24],[R[1530]]]]]],[11,"into_raw",E,"Returns the underlying raw buffer",35,[[],["container"]]],[11,R[1563],E,R[1564],35,[[["self"]]]],[11,"width",E,R[1565],35,[[["self"]],["u32"]]],[11,"height",E,R[1566],35,[[["self"]],["u32"]]],[11,"pixels",E,"Returns an iterator over the pixels of this image.",35,[[["self"]],["pixels"]]],[11,"enumerate_pixels",E,"Enumerates over the pixels of the image. The iterator…",35,[[["self"]],["enumeratepixels"]]],[11,R[1591],E,"Gets a reference to the pixel at location `(x, y)`",35,[[["u32"],["self"]],["p"]]],[11,R[1616],E,"Returns an iterator over the mutable pixels of this image.…",35,[[["self"]],["pixelsmut"]]],[11,"enumerate_pixels_mut",E,"Enumerates over the pixels of the image.",35,[[["self"]],["enumeratepixelsmut"]]],[11,R[1567],E,"Gets a reference to the mutable pixel at location `(x, y)`",35,[[["u32"],["self"]],["p"]]],[11,R[1592],E,"Puts a pixel at location `(x, y)`",35,[[["u32"],["self"],["p"]]]],[11,"save",E,"Saves the buffer to a file at the path specified.",35,[[["q"],["self"]],[R[2]]]],[11,"new",E,"Creates a new image buffer based on a `Vec<P::Subpixel>`.",35,[[["u32"]],[["vec"],[R[1530],["vec"]]]]],[11,"from_pixel",E,"Constructs a new ImageBuffer by copying a pixel",35,[[["u32"],["p"]],[["vec"],[R[1530],["vec"]]]]],[11,"from_fn",E,"Constructs a new ImageBuffer by repeated application of…",35,[[["u32"],["f"]],[["vec"],[R[1530],["vec"]]]]],[11,"from_vec",E,"Creates an image buffer out of an existing buffer. Returns…",35,[[["u32"],["vec"]],[[R[24],[R[1530]]],[R[1530],["vec"]]]]],[11,"into_vec",E,"Consumes the image buffer and returns the underlying data…",35,[[],["vec"]]],[11,"new",E,"Contructs a new frame iterator",36,[[["frame"],["vec",["frame"]]],["frames"]]],[11,"new",E,R[1560],37,[[[R[1554]]],["frame"]]],[11,"from_parts",E,R[1560],37,[[["u32"],["u16"],["ratio",["u16"]],[R[1554]]],["frame"]]],[11,"delay",E,"Delay of this frame",37,[[["self"]],[["u16"],["ratio",["u16"]]]]],[11,"buffer",E,R[1561],37,[[["self"]],[R[1554]]]],[11,R[1637],E,R[1561],37,[[],[R[1554]]]],[11,"left",E,"Returns the x offset",37,[[["self"]],["u32"]]],[11,"top",E,"Returns the y offset",37,[[["self"]],["u32"]]],[6,"ImageResult",E,"Result of an image decoding/encoding process",N,N],[6,"RgbImage",E,"Sendable Rgb image buffer",N,N],[6,"RgbaImage",E,"Sendable Rgb + alpha channel image buffer",N,N],[6,"GrayImage",E,"Sendable grayscale image buffer",N,N],[6,"GrayAlphaImage",E,"Sendable grayscale + alpha channel image buffer",N,N],[8,R[1630],E,"The trait that all decoders implement",N,N],[10,R[1563],E,"Returns a tuple containing the width and height of the image",38,[[["self"]],[R[1520]]]],[10,R[1397],E,"Returns the color type of the image e.g. RGB(8) (8bit RGB)",38,[[["self"]],[[R[1397]],[R[1520],[R[1397]]]]]],[10,"row_len",E,"Returns the length in bytes of one decoded row of the image",38,[[["self"]],[[R[1520],["usize"]],["usize"]]]],[10,R[1582],E,"Reads one row from the image into `buf` and returns the…",38,[[["self"]],[["u32"],[R[1520],["u32"]]]]],[10,R[1584],E,"Decodes the entire image and return it as a Vector",38,[[["self"]],[[R[1520],[R[1562]]],[R[1562]]]]],[11,R[1609],E,R[1610],38,[[["self"]],[[R[1520],["bool"]],["bool"]]]],[11,R[1611],E,R[1612],38,[[],[[R[1520],["frames"]],["frames"]]]],[11,"load_rect",E,R[1613],38,[[["u32"],["self"]],[[R[1520],["vec"]],["vec",["u8"]]]]],[8,R[1631],E,"A trait for manipulating images.",N,N],[16,"Pixel",E,"The type of pixel.",39,N],[10,R[1563],E,R[1564],39,[[["self"]]]],[11,"width",E,R[1565],39,[[["self"]],["u32"]]],[11,"height",E,R[1566],39,[[["self"]],["u32"]]],[10,"bounds",E,"The bounding rectangle of this image.",39,[[["self"]]]],[11,"in_bounds",E,R[1614],39,[[["u32"],["self"]],["bool"]]],[10,R[1591],E,R[1568],39,[[["u32"],["self"]]]],[10,R[1567],E,R[1569],39,[[["u32"],["self"]]]],[11,R[1593],E,R[1568],39,[[["u32"],["self"]]]],[10,R[1592],E,"Put a pixel at location (x, y)",39,[[["u32"],["self"]]]],[11,R[1594],E,R[1569],39,[[["u32"],["self"]]]],[10,R[1590],E,R[1595],39,[[["u32"],["self"]]]],[11,"pixels",E,R[1615],39,[[["self"]],["pixels"]]],[11,R[1616],E,R[1617],39,[[["self"]],["mutpixels"]]],[11,"copy_from",E,R[1618],39,[[["u32"],["o"],["self"]],["bool"]]],[11,"sub_image",E,R[1619],39,[[["u32"],["self"]],["subimage"]]],[8,"Pixel",E,"A generalized pixel.",N,N],[16,"Subpixel",E,"The underlying subpixel type.",40,N],[10,R[1596],E,"Returns the number of channels of this pixel type.",40,[[],["u8"]]],[10,"channels",E,"Returns the components as a slice.",40,[[["self"]]]],[10,R[1598],E,"Returns the components as a mutable slice",40,[[["self"]]]],[10,R[1597],E,"Returns a string that can help to interprete the meaning…",40,[[],["str"]]],[10,R[1603],E,"Returns the ColorType for this pixel format",40,[[],[R[1397]]]],[10,R[1604],E,"Returns the channels of this pixel as a 4 tuple. If the…",40,[[["self"]]]],[10,R[1599],E,"Construct a pixel from the 4 channels a, b, c and d. If…",40,[[],["self"]]],[10,R[86],E,"Returns a view into a slice.",40,[[],["self"]]],[10,R[1600],E,"Returns mutable view into a mutable slice.",40,[[],["self"]]],[10,"to_rgb",E,"Convert this pixel to RGB",40,[[["self"]],["rgb"]]],[10,"to_rgba",E,"Convert this pixel to RGB with an alpha channel",40,[[["self"]],["rgba"]]],[10,"to_luma",E,"Convert this pixel to luma",40,[[["self"]],["luma"]]],[10,R[1570],E,"Convert this pixel to luma with an alpha channel",40,[[["self"]],["lumaa"]]],[10,"map",E,R[1571],40,[[["self"],["f"]],["self"]]],[10,"apply",E,R[1571],40,[[["self"],["f"]]]],[10,R[1601],E,R[1572],40,[[["g"],["self"],["f"]],["self"]]],[10,R[1602],E,R[1572],40,[[["self"],["g"],["f"]]]],[10,"map2",E,R[1573],40,[[["self"],["f"]],["self"]]],[10,"apply2",E,R[1573],40,[[["self"],["self"],["f"]]]],[10,"invert",E,"Invert this pixel",40,[[["self"]]]],[10,"blend",E,"Blend the color of a given pixel into ourself, taking into…",40,[[["self"],["self"]]]],[8,R[1632],E,"Provides color conversions for whole image buffers.",N,N],[10,"convert",E,"Converts `self` to a buffer of type T",41,[[["self"]],[T]]],[8,"Primitive",E,"Primitive trait from old stdlib",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[66],E,E,0,[[["self"]],[T]]],[11,R[67],E,E,0,[[[T],["self"]]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[66],E,E,1,[[["self"]],[T]]],[11,R[67],E,E,1,[[[T],["self"]]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[66],E,E,2,[[["self"]],[T]]],[11,R[67],E,E,2,[[[T],["self"]]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[66],E,E,3,[[["self"]],[T]]],[11,R[67],E,E,3,[[[T],["self"]]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[8],E,E,34,[[[U]],[R[2]]]],[11,R[29],E,E,34,[[["self"]],[T]]],[11,R[15],E,E,34,[[["self"]],[R[30]]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[9],E,E,34,[[],[R[2]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[22],E,E,42,[[],["i"]]],[11,"into",E,E,42,[[],[U]]],[11,R[8],E,E,42,[[[U]],[R[2]]]],[11,R[29],E,E,42,[[["self"]],[T]]],[11,R[15],E,E,42,[[["self"]],[R[30]]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[9],E,E,42,[[],[R[2]]]],[11,R[1574],E,E,42,[[],[R[1443]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[22],E,E,43,[[],["i"]]],[11,"into",E,E,43,[[],[U]]],[11,R[8],E,E,43,[[[U]],[R[2]]]],[11,R[29],E,E,43,[[["self"]],[T]]],[11,R[15],E,E,43,[[["self"]],[R[30]]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[9],E,E,43,[[],[R[2]]]],[11,R[1574],E,E,43,[[],[R[1443]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[66],E,E,35,[[["self"]],[T]]],[11,R[67],E,E,35,[[[T],["self"]]]],[11,R[8],E,E,35,[[[U]],[R[2]]]],[11,R[29],E,E,35,[[["self"]],[T]]],[11,R[15],E,E,35,[[["self"]],[R[30]]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[9],E,E,35,[[],[R[2]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[66],E,E,37,[[["self"]],[T]]],[11,R[67],E,E,37,[[[T],["self"]]]],[11,R[8],E,E,37,[[[U]],[R[2]]]],[11,R[29],E,E,37,[[["self"]],[T]]],[11,R[15],E,E,37,[[["self"]],[R[30]]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[9],E,E,37,[[],[R[2]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[22],E,E,36,[[],["i"]]],[11,"into",E,E,36,[[],[U]]],[11,R[8],E,E,36,[[[U]],[R[2]]]],[11,R[29],E,E,36,[[["self"]],[T]]],[11,R[15],E,E,36,[[["self"]],[R[30]]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[9],E,E,36,[[],[R[2]]]],[11,R[1574],E,E,36,[[],[R[1443]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[66],E,E,4,[[["self"]],[T]]],[11,R[67],E,E,4,[[[T],["self"]]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[30]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[161],E,E,5,[[["self"]],[R[34]]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[30]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[30]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[66],E,E,7,[[["self"]],[T]]],[11,R[67],E,E,7,[[[T],["self"]]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[30]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[66],E,E,8,[[["self"]],[T]]],[11,R[67],E,E,8,[[[T],["self"]]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[R[30]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[66],E,E,9,[[["self"]],[T]]],[11,R[67],E,E,9,[[[T],["self"]]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[29],E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"]],[R[30]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,"from",R[1575],E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[29],E,E,10,[[["self"]],[T]]],[11,R[15],E,E,10,[[["self"]],[R[30]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,"from",R[1576],E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[66],E,E,44,[[["self"]],[T]]],[11,R[67],E,E,44,[[[T],["self"]]]],[11,R[8],E,E,44,[[[U]],[R[2]]]],[11,R[29],E,E,44,[[["self"]],[T]]],[11,R[15],E,E,44,[[["self"]],[R[30]]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[9],E,E,44,[[],[R[2]]]],[11,"from",R[1577],E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[8],E,E,12,[[[U]],[R[2]]]],[11,R[29],E,E,12,[[["self"]],[T]]],[11,R[15],E,E,12,[[["self"]],[R[30]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[],[R[2]]]],[11,"from",R[1578],E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[66],E,E,13,[[["self"]],[T]]],[11,R[67],E,E,13,[[[T],["self"]]]],[11,R[8],E,E,13,[[[U]],[R[2]]]],[11,R[29],E,E,13,[[["self"]],[T]]],[11,R[15],E,E,13,[[["self"]],[R[30]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[],[R[2]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[8],E,E,14,[[[U]],[R[2]]]],[11,R[29],E,E,14,[[["self"]],[T]]],[11,R[15],E,E,14,[[["self"]],[R[30]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[],[R[2]]]],[11,"from",R[1583],E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[8],E,E,15,[[[U]],[R[2]]]],[11,R[29],E,E,15,[[["self"]],[T]]],[11,R[15],E,E,15,[[["self"]],[R[30]]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[],[R[2]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[8],E,E,16,[[[U]],[R[2]]]],[11,R[29],E,E,16,[[["self"]],[T]]],[11,R[15],E,E,16,[[["self"]],[R[30]]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[9],E,E,16,[[],[R[2]]]],[11,"from",R[1585],E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[8],E,E,17,[[[U]],[R[2]]]],[11,R[29],E,E,17,[[["self"]],[T]]],[11,R[15],E,E,17,[[["self"]],[R[30]]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[9],E,E,17,[[],[R[2]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[8],E,E,18,[[[U]],[R[2]]]],[11,R[29],E,E,18,[[["self"]],[T]]],[11,R[15],E,E,18,[[["self"]],[R[30]]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[9],E,E,18,[[],[R[2]]]],[11,"from",R[1586],E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[8],E,E,19,[[[U]],[R[2]]]],[11,R[29],E,E,19,[[["self"]],[T]]],[11,R[15],E,E,19,[[["self"]],[R[30]]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[9],E,E,19,[[],[R[2]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[8],E,E,20,[[[U]],[R[2]]]],[11,R[29],E,E,20,[[["self"]],[T]]],[11,R[15],E,E,20,[[["self"]],[R[30]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[],[R[2]]]],[11,"from",R[1579],E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[8],E,E,22,[[[U]],[R[2]]]],[11,R[29],E,E,22,[[["self"]],[T]]],[11,R[15],E,E,22,[[["self"]],[R[30]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[],[R[2]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[8],E,E,21,[[[U]],[R[2]]]],[11,R[29],E,E,21,[[["self"]],[T]]],[11,R[15],E,E,21,[[["self"]],[R[30]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[],[R[2]]]],[11,"from",R[1581],E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[66],E,E,23,[[["self"]],[T]]],[11,R[67],E,E,23,[[[T],["self"]]]],[11,R[8],E,E,23,[[[U]],[R[2]]]],[11,R[29],E,E,23,[[["self"]],[T]]],[11,R[15],E,E,23,[[["self"]],[R[30]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[],[R[2]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[8],E,E,24,[[[U]],[R[2]]]],[11,R[29],E,E,24,[[["self"]],[T]]],[11,R[15],E,E,24,[[["self"]],[R[30]]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[],[R[2]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[8],E,E,25,[[[U]],[R[2]]]],[11,R[29],E,E,25,[[["self"]],[T]]],[11,R[15],E,E,25,[[["self"]],[R[30]]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[9],E,E,25,[[],[R[2]]]],[11,"from",R[1580],E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[8],E,E,26,[[[U]],[R[2]]]],[11,R[29],E,E,26,[[["self"]],[T]]],[11,R[15],E,E,26,[[["self"]],[R[30]]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[9],E,E,26,[[],[R[2]]]],[11,"from",R[1587],E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[8],E,E,27,[[[U]],[R[2]]]],[11,R[29],E,E,27,[[["self"]],[T]]],[11,R[15],E,E,27,[[["self"]],[R[30]]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[],[R[2]]]],[11,"from",R[1588],E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[8],E,E,28,[[[U]],[R[2]]]],[11,R[29],E,E,28,[[["self"]],[T]]],[11,R[15],E,E,28,[[["self"]],[R[30]]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[],[R[2]]]],[11,"from",R[1589],E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[8],E,E,31,[[[U]],[R[2]]]],[11,R[29],E,E,31,[[["self"]],[T]]],[11,R[15],E,E,31,[[["self"]],[R[30]]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[],[R[2]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[22],E,E,32,[[],["i"]]],[11,"into",E,E,32,[[],[U]]],[11,R[8],E,E,32,[[[U]],[R[2]]]],[11,R[29],E,E,32,[[["self"]],[T]]],[11,R[15],E,E,32,[[["self"]],[R[30]]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[],[R[2]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[66],E,E,29,[[["self"]],[T]]],[11,R[67],E,E,29,[[[T],["self"]]]],[11,R[8],E,E,29,[[[U]],[R[2]]]],[11,R[29],E,E,29,[[["self"]],[T]]],[11,R[15],E,E,29,[[["self"]],[R[30]]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[],[R[2]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[22],E,E,45,[[],["i"]]],[11,"into",E,E,45,[[],[U]]],[11,R[8],E,E,45,[[[U]],[R[2]]]],[11,R[29],E,E,45,[[["self"]],[T]]],[11,R[15],E,E,45,[[["self"]],[R[30]]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[9],E,E,45,[[],[R[2]]]],[11,R[1574],E,E,45,[[],[R[1443]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[66],E,E,30,[[["self"]],[T]]],[11,R[67],E,E,30,[[[T],["self"]]]],[11,R[8],E,E,30,[[[U]],[R[2]]]],[11,R[29],E,E,30,[[["self"]],[T]]],[11,R[15],E,E,30,[[["self"]],[R[30]]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[],[R[2]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[8],E,E,33,[[[U]],[R[2]]]],[11,R[29],E,E,33,[[["self"]],[T]]],[11,R[15],E,E,33,[[["self"]],[R[30]]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[9],E,E,33,[[],[R[2]]]],[11,"fmt",R[1581],E,23,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"clone",E,E,23,[[["self"]],["frame"]]],[11,R[222],E,E,23,[[],["frame"]]],[11,"index_of",R[1576],E,44,[[["self"],["luma"]],["usize"]]],[11,"map_color",E,E,44,[[["self"],["luma"]]]],[11,"index_of",R[1575],E,10,[[["self"],["rgba"]],["usize"]]],[11,"map_color",E,E,10,[[["self"],["rgba"]]]],[11,R[1563],R[1577],E,12,[[["self"]],[R[1520]]]],[11,R[1397],E,E,12,[[["self"]],[[R[1520],[R[1397]]],[R[1397]]]]],[11,"row_len",E,E,12,[[["self"]],[[R[1520],["usize"]],["usize"]]]],[11,R[1582],E,E,12,[[["self"]],[["u32"],[R[1520],["u32"]]]]],[11,R[1584],E,E,12,[[["self"]],[[R[1562]],[R[1520],[R[1562]]]]]],[11,R[1563],R[1583],E,16,[[["self"]],[R[1520]]]],[11,R[1397],E,E,16,[[["self"]],[[R[1397]],[R[1520],[R[1397]]]]]],[11,"row_len",E,E,16,[[["self"]],[[R[1520],["usize"]],["usize"]]]],[11,R[1582],E,E,16,[[["self"]],[["u32"],[R[1520],["u32"]]]]],[11,R[1584],E,E,16,[[["self"]],[[R[1520],[R[1562]]],[R[1562]]]]],[11,R[1563],R[1585],E,17,[[["self"]],[R[1520]]]],[11,R[1397],E,E,17,[[["self"]],[[R[1397]],[R[1520],[R[1397]]]]]],[11,"row_len",E,E,17,[[["self"]],[[R[1520],["usize"]],["usize"]]]],[11,R[1582],E,E,17,[[["self"]],[["u32"],[R[1520],["u32"]]]]],[11,R[1584],E,E,17,[[["self"]],[[R[1520],[R[1562]]],[R[1562]]]]],[11,R[1563],R[1586],E,19,[[["self"]],[R[1520]]]],[11,R[1397],E,E,19,[[["self"]],[[R[1397]],[R[1520],[R[1397]]]]]],[11,"row_len",E,E,19,[[["self"]],[[R[1520],["usize"]],["usize"]]]],[11,R[1582],E,E,19,[[["self"]],[["u32"],[R[1520],["u32"]]]]],[11,R[1584],E,E,19,[[["self"]],[[R[1520],[R[1562]]],[R[1562]]]]],[11,R[1563],R[1579],E,22,[[["self"]],[R[1520]]]],[11,R[1397],E,E,22,[[["self"]],[[R[1397]],[R[1520],[R[1397]]]]]],[11,"row_len",E,E,22,[[["self"]],[[R[1520],["usize"]],["usize"]]]],[11,R[1582],E,E,22,[[["self"]],[["u32"],[R[1520],["u32"]]]]],[11,R[1584],E,E,22,[[["self"]],[[R[1520],[R[1562]]],[R[1562]]]]],[11,R[1563],R[1581],E,24,[[["self"]],[R[1520]]]],[11,R[1397],E,E,24,[[["self"]],[[R[1520],[R[1397]]],[R[1397]]]]],[11,"row_len",E,E,24,[[["self"]],[[R[1520],["usize"]],["usize"]]]],[11,R[1582],E,E,24,[[["self"]],[["u32"],[R[1520],["u32"]]]]],[11,R[1584],E,E,24,[[["self"]],[[R[1520],[R[1562]]],[R[1562]]]]],[11,R[1563],R[1580],E,26,[[["self"]],[R[1520]]]],[11,R[1397],E,E,26,[[["self"]],[[R[1397]],[R[1520],[R[1397]]]]]],[11,"row_len",E,E,26,[[["self"]],[[R[1520],["usize"]],["usize"]]]],[11,R[1582],E,E,26,[[["self"]],[["u32"],[R[1520],["u32"]]]]],[11,R[1584],E,E,26,[[["self"]],[[R[1520],[R[1562]]],[R[1562]]]]],[11,R[1563],R[1587],E,27,[[["self"]],[R[1520]]]],[11,R[1397],E,E,27,[[["self"]],[[R[1397]],[R[1520],[R[1397]]]]]],[11,"row_len",E,E,27,[[["self"]],[[R[1520],["usize"]],["usize"]]]],[11,R[1582],E,E,27,[[["self"]],[["u32"],[R[1520],["u32"]]]]],[11,R[1584],E,E,27,[[["self"]],[[R[1520],[R[1562]]],[R[1562]]]]],[11,R[1563],R[1588],E,28,[[["self"]],[R[1520]]]],[11,R[1397],E,E,28,[[["self"]],[[R[1397]],[R[1520],[R[1397]]]]]],[11,"row_len",E,E,28,[[["self"]],[[R[1520],["usize"]],["usize"]]]],[11,R[1582],E,E,28,[[["self"]],[["u32"],[R[1520],["u32"]]]]],[11,R[1584],E,E,28,[[["self"]],[[R[1520],[R[1562]]],[R[1562]]]]],[11,R[1563],R[1589],E,31,[[["self"]],[R[1520]]]],[11,R[1397],E,E,31,[[["self"]],[[R[1397]],[R[1520],[R[1397]]]]]],[11,"row_len",E,E,31,[[["self"]],[[R[1520],["usize"]],["usize"]]]],[11,R[1582],E,E,31,[[["self"]],[["u32"],[R[1520],["u32"]]]]],[11,R[1584],E,E,31,[[["self"]],[[R[1520],[R[1562]]],[R[1562]]]]],[11,R[1563],"image",E,34,[[["self"]]]],[11,"bounds",E,E,34,[[["self"]]]],[11,R[1591],E,E,34,[[["u32"],["self"]]]],[11,R[1592],E,E,34,[[["u32"],["self"]]]],[11,R[1590],E,"DEPRECATED: This method will be removed. Blend the pixel…",34,[[["u32"],["self"]]]],[11,R[1567],E,E,34,[[["u32"],["self"]]]],[11,R[1563],E,E,9,[[["self"]]]],[11,"bounds",E,E,9,[[["self"]]]],[11,R[1591],E,E,9,[[["u32"],["self"]],[["u8"],["rgba",["u8"]]]]],[11,R[1592],E,E,9,[[["u32"],["self"],["u8"],["rgba",["u8"]]]]],[11,R[1590],E,"DEPRECATED: Use iterator `pixels_mut` to blend the pixels…",9,[[["u32"],["self"],["u8"],["rgba",["u8"]]]]],[11,R[1567],E,"DEPRECATED: Do not use is function: It is unimplemented!",9,[[["u32"],["self"]],["rgba"]]],[11,R[1563],E,E,35,[[["self"]]]],[11,"bounds",E,E,35,[[["self"]]]],[11,R[1591],E,E,35,[[["u32"],["self"]],["p"]]],[11,R[1567],E,E,35,[[["u32"],["self"]],["p"]]],[11,R[1593],E,"Returns the pixel located at (x, y), ignoring bounds…",35,[[["u32"],["self"]],["p"]]],[11,R[1592],E,E,35,[[["u32"],["self"],["p"]]]],[11,R[1594],E,"Puts a pixel at location (x, y), ignoring bounds checking.",35,[[["u32"],["self"],["p"]]]],[11,R[1590],E,R[1595],35,[[["u32"],["self"],["p"]]]],[11,R[1596],E,E,2,[[],["u8"]]],[11,R[1597],E,E,2,[[],["str"]]],[11,R[1603],E,E,2,[[],[R[1397]]]],[11,"channels",E,E,2,[[["self"]]]],[11,R[1598],E,E,2,[[["self"]]]],[11,R[1604],E,E,2,[[["self"]]]],[11,R[1599],E,E,2,[[[T]],["rgb"]]],[11,R[86],E,E,2,[[],["rgb"]]],[11,R[1600],E,E,2,[[],["rgb"]]],[11,"to_rgb",E,E,2,[[["self"]],["rgb"]]],[11,"to_rgba",E,E,2,[[["self"]],["rgba"]]],[11,"to_luma",E,E,2,[[["self"]],["luma"]]],[11,R[1570],E,E,2,[[["self"]],["lumaa"]]],[11,"map",E,E,2,[[["self"],["f"]],["rgb"]]],[11,"apply",E,E,2,[[["self"],["f"]]]],[11,R[1601],E,E,2,[[["g"],["self"],["f"]],["rgb"]]],[11,R[1602],E,E,2,[[["self"],["g"],["f"]]]],[11,"map2",E,E,2,[[["self"],["f"]],["rgb"]]],[11,"apply2",E,E,2,[[["rgb"],["self"],["f"]]]],[11,"invert",E,E,2,[[["self"]]]],[11,"blend",E,E,2,[[["rgb"],["self"]]]],[11,R[1596],E,E,0,[[],["u8"]]],[11,R[1597],E,E,0,[[],["str"]]],[11,R[1603],E,E,0,[[],[R[1397]]]],[11,"channels",E,E,0,[[["self"]]]],[11,R[1598],E,E,0,[[["self"]]]],[11,R[1604],E,E,0,[[["self"]]]],[11,R[1599],E,E,0,[[[T]],["luma"]]],[11,R[86],E,E,0,[[],["luma"]]],[11,R[1600],E,E,0,[[],["luma"]]],[11,"to_rgb",E,E,0,[[["self"]],["rgb"]]],[11,"to_rgba",E,E,0,[[["self"]],["rgba"]]],[11,"to_luma",E,E,0,[[["self"]],["luma"]]],[11,R[1570],E,E,0,[[["self"]],["lumaa"]]],[11,"map",E,E,0,[[["self"],["f"]],["luma"]]],[11,"apply",E,E,0,[[["self"],["f"]]]],[11,R[1601],E,E,0,[[["g"],["self"],["f"]],["luma"]]],[11,R[1602],E,E,0,[[["self"],["g"],["f"]]]],[11,"map2",E,E,0,[[["self"],["f"]],["luma"]]],[11,"apply2",E,E,0,[[["self"],["f"],["luma"]]]],[11,"invert",E,E,0,[[["self"]]]],[11,"blend",E,E,0,[[["self"],["luma"]]]],[11,R[1596],E,E,3,[[],["u8"]]],[11,R[1597],E,E,3,[[],["str"]]],[11,R[1603],E,E,3,[[],[R[1397]]]],[11,"channels",E,E,3,[[["self"]]]],[11,R[1598],E,E,3,[[["self"]]]],[11,R[1604],E,E,3,[[["self"]]]],[11,R[1599],E,E,3,[[[T]],["rgba"]]],[11,R[86],E,E,3,[[],["rgba"]]],[11,R[1600],E,E,3,[[],["rgba"]]],[11,"to_rgb",E,E,3,[[["self"]],["rgb"]]],[11,"to_rgba",E,E,3,[[["self"]],["rgba"]]],[11,"to_luma",E,E,3,[[["self"]],["luma"]]],[11,R[1570],E,E,3,[[["self"]],["lumaa"]]],[11,"map",E,E,3,[[["self"],["f"]],["rgba"]]],[11,"apply",E,E,3,[[["self"],["f"]]]],[11,R[1601],E,E,3,[[["g"],["self"],["f"]],["rgba"]]],[11,R[1602],E,E,3,[[["self"],["g"],["f"]]]],[11,"map2",E,E,3,[[["self"],["f"]],["rgba"]]],[11,"apply2",E,E,3,[[["self"],["f"],["rgba"]]]],[11,"invert",E,E,3,[[["self"]]]],[11,"blend",E,E,3,[[["self"],["rgba"]]]],[11,R[1596],E,E,1,[[],["u8"]]],[11,R[1597],E,E,1,[[],["str"]]],[11,R[1603],E,E,1,[[],[R[1397]]]],[11,"channels",E,E,1,[[["self"]]]],[11,R[1598],E,E,1,[[["self"]]]],[11,R[1604],E,E,1,[[["self"]]]],[11,R[1599],E,E,1,[[[T]],["lumaa"]]],[11,R[86],E,E,1,[[],["lumaa"]]],[11,R[1600],E,E,1,[[],["lumaa"]]],[11,"to_rgb",E,E,1,[[["self"]],["rgb"]]],[11,"to_rgba",E,E,1,[[["self"]],["rgba"]]],[11,"to_luma",E,E,1,[[["self"]],["luma"]]],[11,R[1570],E,E,1,[[["self"]],["lumaa"]]],[11,"map",E,E,1,[[["self"],["f"]],["lumaa"]]],[11,"apply",E,E,1,[[["self"],["f"]]]],[11,R[1601],E,E,1,[[["g"],["self"],["f"]],["lumaa"]]],[11,R[1602],E,E,1,[[["self"],["g"],["f"]]]],[11,"map2",E,E,1,[[["self"],["f"]],["lumaa"]]],[11,"apply2",E,E,1,[[["self"],["lumaa"],["f"]]]],[11,"invert",E,E,1,[[["self"]]]],[11,"blend",E,E,1,[[["self"],["lumaa"]]]],[11,"convert",E,E,35,[[["self"]],[["vec"],[R[1530],["vec"]]]]],[11,"eq",R[1589],E,29,[[[R[1553]],["self"]],["bool"]]],[11,"ne",E,E,29,[[[R[1553]],["self"]],["bool"]]],[11,"eq","image",E,8,[[["self"],[R[1522]]],["bool"]]],[11,"eq",E,E,4,[[[R[1397]],["self"]],["bool"]]],[11,"ne",E,E,4,[[[R[1397]],["self"]],["bool"]]],[11,"eq",E,E,2,[[["rgb"],["self"]],["bool"]]],[11,"ne",E,E,2,[[["rgb"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["luma"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["luma"]],["bool"]]],[11,"eq",E,E,3,[[["self"],["rgba"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["rgba"]],["bool"]]],[11,"eq",E,E,1,[[["lumaa"],["self"]],["bool"]]],[11,"ne",E,E,1,[[["lumaa"],["self"]],["bool"]]],[11,"clone",R[1576],E,44,[[["self"]],["bilevel"]]],[11,"clone","image",E,7,[[["self"]],[R[1558]]]],[11,"clone",R[1578],E,13,[[["self"]],["frame"]]],[11,"clone",R[1589],E,29,[[["self"]],[R[1553]]]],[11,"clone",E,E,30,[[["self"]],[R[1605]]]],[11,"clone","image",E,8,[[["self"]],[R[1522]]]],[11,"clone",E,E,9,[[["self"]],[R[1519]]]],[11,"clone",E,E,4,[[["self"]],[R[1397]]]],[11,"clone",E,E,2,[[["self"]],["rgb"]]],[11,"clone",E,E,0,[[["self"]],["luma"]]],[11,"clone",E,E,3,[[["self"]],["rgba"]]],[11,"clone",E,E,1,[[["self"]],["lumaa"]]],[11,"clone",E,E,35,[[["self"]],[R[1530]]]],[11,"clone",E,E,37,[[["self"]],["frame"]]],[11,"from",E,E,4,[[],[R[1397]]]],[11,"from",E,E,5,[[[R[318]]],[R[1606]]]],[11,"from",E,E,4,[[[R[1515]]],[R[1397]]]],[11,"from",E,E,5,[[["error"]],[R[1606]]]],[11,"from",E,E,5,[[[R[318]]],[R[1606]]]],[11,"from",E,E,5,[[["error"]],[R[1606]]]],[11,R[22],R[1589],E,32,[[]]],[11,"next",E,E,45,[[["self"]],[R[24]]]],[11,R[104],E,E,45,[[["self"]]]],[11,"next","image",E,42,[[["self"]],[R[24]]]],[11,"next",E,E,43,[[["self"]],[R[24]]]],[11,"next",E,E,36,[[["self"]],[["frame"],[R[24],["frame"]]]]],[11,R[222],R[1578],E,13,[[],["frame"]]],[11,R[16],"image",E,35,[[["self"]]]],[11,"fmt",R[1578],E,13,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[1580],E,26,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[1589],E,31,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,32,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,29,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,30,[[[R[12]],["self"]],[R[2]]]],[11,"fmt","image",E,5,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,6,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,8,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,4,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,2,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,3,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,1,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,35,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,5,[[[R[12]],["self"]],[[R[2],["error"]],["error"]]]],[11,"hash",E,E,2,[[["self"],["__ht"]]]],[11,"hash",E,E,0,[[["self"],["__ht"]]]],[11,"hash",E,E,3,[[["self"],["__ht"]]]],[11,"hash",E,E,1,[[["self"],["__ht"]]]],[11,"deref",E,E,35,[[["self"]]]],[11,"index",E,E,2,[[["self"],["usize"]],[T]]],[11,"index",E,E,0,[[["self"],["usize"]],[T]]],[11,"index",E,E,3,[[["self"],["usize"]],[T]]],[11,"index",E,E,1,[[["self"],["usize"]],[T]]],[11,"index",E,E,35,[[["self"]],["p"]]],[11,R[106],E,E,2,[[["self"],["usize"]],[T]]],[11,R[106],E,E,0,[[["self"],["usize"]],[T]]],[11,R[106],E,E,3,[[["self"],["usize"]],[T]]],[11,R[106],E,E,1,[[["self"],["usize"]],[T]]],[11,R[106],E,E,35,[[["self"]],["p"]]],[11,R[485],E,E,5,[[["self"]],["str"]]],[11,"cause",E,E,5,[[["self"]],[[R[24],["error"]],["error"]]]],[11,"from_rgba",R[1581],R[1607],23,[[["u16"]],["frame"]]],[11,"from_rgb",E,R[1608],23,[[["u16"]],["frame"]]],[11,R[1609],"image",R[1610],38,[[["self"]],[[R[1520],["bool"]],["bool"]]]],[11,R[1611],E,R[1612],38,[[],[[R[1520],["frames"]],["frames"]]]],[11,"load_rect",E,R[1613],38,[[["u32"],["self"]],[[R[1520],["vec"]],["vec",["u8"]]]]],[11,"width",E,R[1565],39,[[["self"]],["u32"]]],[11,"height",E,R[1566],39,[[["self"]],["u32"]]],[11,"in_bounds",E,R[1614],39,[[["u32"],["self"]],["bool"]]],[11,R[1593],E,R[1568],39,[[["u32"],["self"]]]],[11,R[1594],E,R[1569],39,[[["u32"],["self"]]]],[11,"pixels",E,R[1615],39,[[["self"]],["pixels"]]],[11,R[1616],E,R[1617],39,[[["self"]],["mutpixels"]]],[11,"copy_from",E,R[1618],39,[[["u32"],["o"],["self"]],["bool"]]],[11,"sub_image",E,R[1619],39,[[["u32"],["self"]],["subimage"]]],[11,"expand_palette",E,"Expands a color palette by re-using the existing buffer.…",46,[[["u8"],[R[24],["u8"]]],[R[1554]]]]],"p":[[3,"Luma"],[3,"LumaA"],[3,"Rgb"],[3,"Rgba"],[4,R[1635]],[4,"ImageError"],[4,R[1620]],[4,R[1621]],[4,R[1622]],[4,R[1623]],[3,R[52]],[8,"ColorMap"],[3,R[1624]],[3,"Frame"],[3,"VP8Decoder"],[3,"PPMEncoder"],[3,"PPMDecoder"],[3,"PNGDecoder"],[3,"PNGEncoder"],[3,"ICODecoder"],[3,"ICOEncoder"],[3,R[1625]],[3,R[1626]],[3,"Frame"],[3,"Decoder"],[3,"Encoder"],[3,R[1627]],[3,"TGADecoder"],[3,"BMPDecoder"],[3,"RGBE8Pixel"],[3,R[1628]],[3,"HDRAdapter"],[3,"HDRDecoder"],[3,"HDREncoder"],[3,"SubImage"],[3,R[1629]],[3,"Frames"],[3,"Frame"],[8,R[1630]],[8,R[1631]],[8,"Pixel"],[8,R[1632]],[3,"Pixels"],[3,"MutPixels"],[3,"BiLevel"],[3,R[1633]],[6,"GrayImage"]]};
searchIndex["inflate"]={"doc":"A DEFLATE decoder written in rust.","i":[[3,R[35],"inflate","A DEFLATE decoder.",N,N],[3,R[36],E,E,N,N],[5,"inflate_bytes",E,"Decompress the given slice of DEFLATE compressed data.",N,[[],[[R[34]],[R[2],["vec",R[34]]],["vec",["u8"]]]]],[5,"inflate_bytes_zlib",E,"Decompress the given slice of DEFLATE compressed (with…",N,[[],[[R[34]],[R[2],["vec",R[34]]],["vec",["u8"]]]]],[11,"new",E,E,0,[[["w"]],[R[31]]]],[11,R[32],E,E,0,[[["w"]],[R[31]]]],[11,"finish",E,E,0,[[],[R[2]]]],[11,"new",E,"Create a new stream for decoding raw deflate encoded data.",1,[[],[R[33]]]],[11,R[32],E,"Create a new stream for decoding deflate encoded data with…",1,[[],[R[33]]]],[11,"update",E,"Try to uncompress/decode the data in `data`.",1,[[["self"]],[[R[34]],[R[2],[R[34]]]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"write",E,E,0,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,"flush",E,E,0,[[["self"]],[R[2]]]]],"p":[[3,R[35]],[3,R[36]]]};
searchIndex["libc"]={"doc":"libc - Raw FFI bindings to platforms' system libraries","i":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",N,N],[3,"group",E,E,N,N],[12,"gr_name",E,E,0,N],[12,"gr_passwd",E,E,0,N],[12,"gr_gid",E,E,0,N],[12,"gr_mem",E,E,0,N],[3,"utimbuf",E,E,N,N],[12,"actime",E,E,1,N],[12,"modtime",E,E,1,N],[3,"timeval",E,E,N,N],[12,"tv_sec",E,E,2,N],[12,"tv_usec",E,E,2,N],[3,R[621],E,E,N,N],[12,"tv_sec",E,E,3,N],[12,"tv_nsec",E,E,3,N],[3,"rlimit",E,E,N,N],[12,"rlim_cur",E,E,4,N],[12,"rlim_max",E,E,4,N],[3,"rusage",E,E,N,N],[12,"ru_utime",E,E,5,N],[12,"ru_stime",E,E,5,N],[12,"ru_maxrss",E,E,5,N],[12,"ru_ixrss",E,E,5,N],[12,"ru_idrss",E,E,5,N],[12,"ru_isrss",E,E,5,N],[12,"ru_minflt",E,E,5,N],[12,"ru_majflt",E,E,5,N],[12,"ru_nswap",E,E,5,N],[12,"ru_inblock",E,E,5,N],[12,"ru_oublock",E,E,5,N],[12,"ru_msgsnd",E,E,5,N],[12,"ru_msgrcv",E,E,5,N],[12,"ru_nsignals",E,E,5,N],[12,"ru_nvcsw",E,E,5,N],[12,"ru_nivcsw",E,E,5,N],[3,R[560],E,E,N,N],[12,"ipv6mr_multiaddr",E,E,6,N],[12,"ipv6mr_interface",E,E,6,N],[3,"hostent",E,E,N,N],[12,"h_name",E,E,7,N],[12,"h_aliases",E,E,7,N],[12,"h_addrtype",E,E,7,N],[12,"h_length",E,E,7,N],[12,"h_addr_list",E,E,7,N],[3,"iovec",E,E,N,N],[12,"iov_base",E,E,8,N],[12,"iov_len",E,E,8,N],[3,"pollfd",E,E,N,N],[12,"fd",E,E,9,N],[12,"events",E,E,9,N],[12,"revents",E,E,9,N],[3,"winsize",E,E,N,N],[12,"ws_row",E,E,10,N],[12,"ws_col",E,E,10,N],[12,"ws_xpixel",E,E,10,N],[12,"ws_ypixel",E,E,10,N],[3,"linger",E,E,N,N],[12,"l_onoff",E,E,11,N],[12,"l_linger",E,E,11,N],[3,"sigval",E,E,N,N],[12,"sival_ptr",E,E,12,N],[3,R[561],E,E,N,N],[12,R[534],E,E,13,N],[12,"it_value",E,E,13,N],[3,"tms",E,E,N,N],[12,"tms_utime",E,E,14,N],[12,"tms_stime",E,E,14,N],[12,"tms_cutime",E,E,14,N],[12,"tms_cstime",E,E,14,N],[3,"servent",E,E,N,N],[12,"s_name",E,E,15,N],[12,"s_aliases",E,E,15,N],[12,"s_port",E,E,15,N],[12,"s_proto",E,E,15,N],[3,R[622],E,E,N,N],[12,"p_name",E,E,16,N],[12,"p_aliases",E,E,16,N],[12,"p_proto",E,E,16,N],[3,"in_addr",E,E,N,N],[12,"s_addr",E,E,17,N],[3,"ip_mreq",E,E,N,N],[12,"imr_multiaddr",E,E,18,N],[12,"imr_interface",E,E,18,N],[3,R[623],E,E,N,N],[12,"sa_family",E,E,19,N],[12,"sa_data",E,E,19,N],[3,R[562],E,E,N,N],[12,"sin_family",E,E,20,N],[12,"sin_port",E,E,20,N],[12,"sin_addr",E,E,20,N],[12,"sin_zero",E,E,20,N],[3,R[563],E,E,N,N],[12,"sin6_family",E,E,21,N],[12,"sin6_port",E,E,21,N],[12,"sin6_flowinfo",E,E,21,N],[12,"sin6_addr",E,E,21,N],[12,"sin6_scope_id",E,E,21,N],[3,R[624],E,E,N,N],[12,"ai_flags",E,E,22,N],[12,"ai_family",E,E,22,N],[12,"ai_socktype",E,E,22,N],[12,"ai_protocol",E,E,22,N],[12,"ai_addrlen",E,E,22,N],[12,"ai_addr",E,E,22,N],[12,"ai_canonname",E,E,22,N],[12,"ai_next",E,E,22,N],[3,R[564],E,E,N,N],[12,"sll_family",E,E,23,N],[12,"sll_protocol",E,E,23,N],[12,"sll_ifindex",E,E,23,N],[12,"sll_hatype",E,E,23,N],[12,"sll_pkttype",E,E,23,N],[12,"sll_halen",E,E,23,N],[12,"sll_addr",E,E,23,N],[3,"fd_set",E,E,N,N],[3,"tm",E,E,N,N],[12,"tm_sec",E,E,24,N],[12,"tm_min",E,E,24,N],[12,"tm_hour",E,E,24,N],[12,"tm_mday",E,E,24,N],[12,"tm_mon",E,E,24,N],[12,"tm_year",E,E,24,N],[12,"tm_wday",E,E,24,N],[12,"tm_yday",E,E,24,N],[12,"tm_isdst",E,E,24,N],[12,"tm_gmtoff",E,E,24,N],[12,"tm_zone",E,E,24,N],[3,R[565],E,E,N,N],[12,"sched_priority",E,E,25,N],[3,"Dl_info",E,E,N,N],[12,"dli_fname",E,E,26,N],[12,"dli_fbase",E,E,26,N],[12,"dli_sname",E,E,26,N],[12,"dli_saddr",E,E,26,N],[3,"lconv",E,E,N,N],[12,"decimal_point",E,E,27,N],[12,"thousands_sep",E,E,27,N],[12,"grouping",E,E,27,N],[12,"int_curr_symbol",E,E,27,N],[12,"currency_symbol",E,E,27,N],[12,"mon_decimal_point",E,E,27,N],[12,"mon_thousands_sep",E,E,27,N],[12,"mon_grouping",E,E,27,N],[12,"positive_sign",E,E,27,N],[12,"negative_sign",E,E,27,N],[12,"int_frac_digits",E,E,27,N],[12,"frac_digits",E,E,27,N],[12,"p_cs_precedes",E,E,27,N],[12,"p_sep_by_space",E,E,27,N],[12,"n_cs_precedes",E,E,27,N],[12,"n_sep_by_space",E,E,27,N],[12,"p_sign_posn",E,E,27,N],[12,"n_sign_posn",E,E,27,N],[12,"int_p_cs_precedes",E,E,27,N],[12,"int_p_sep_by_space",E,E,27,N],[12,"int_n_cs_precedes",E,E,27,N],[12,"int_n_sep_by_space",E,E,27,N],[12,"int_p_sign_posn",E,E,27,N],[12,"int_n_sign_posn",E,E,27,N],[3,R[625],E,E,N,N],[12,"sigev_value",E,E,28,N],[12,"sigev_signo",E,E,28,N],[12,"sigev_notify",E,E,28,N],[12,"sigev_notify_thread_id",E,E,28,N],[3,R[566],E,E,N,N],[12,"ipi_ifindex",E,E,29,N],[12,"ipi_spec_dst",E,E,29,N],[12,"ipi_addr",E,E,29,N],[3,"ifaddrs",E,E,N,N],[12,"ifa_next",E,E,30,N],[12,"ifa_name",E,E,30,N],[12,"ifa_flags",E,E,30,N],[12,"ifa_addr",E,E,30,N],[12,"ifa_netmask",E,E,30,N],[12,"ifa_ifu",E,E,30,N],[12,"ifa_data",E,E,30,N],[3,R[567],E,E,N,N],[3,"arpreq",E,E,N,N],[12,"arp_pa",E,E,31,N],[12,"arp_ha",E,E,31,N],[12,R[532],E,E,31,N],[12,R[533],E,E,31,N],[12,"arp_dev",E,E,31,N],[3,R[568],E,E,N,N],[12,"arp_pa",E,E,32,N],[12,"arp_ha",E,E,32,N],[12,R[532],E,E,32,N],[12,R[533],E,E,32,N],[3,"arphdr",E,E,N,N],[12,"ar_hrd",E,E,33,N],[12,"ar_pro",E,E,33,N],[12,"ar_hln",E,E,33,N],[12,"ar_pln",E,E,33,N],[12,"ar_op",E,E,33,N],[3,"mmsghdr",E,E,N,N],[12,"msg_hdr",E,E,34,N],[12,"msg_len",E,E,34,N],[3,R[569],E,E,N,N],[12,"events",E,E,35,N],[12,"u64",E,E,35,N],[3,R[570],E,E,N,N],[12,"sun_family",E,E,36,N],[12,"sun_path",E,E,36,N],[3,R[571],E,E,N,N],[12,"ss_family",E,E,37,N],[3,"utsname",E,E,N,N],[12,"sysname",E,E,38,N],[12,"nodename",E,E,38,N],[12,"release",E,E,38,N],[12,"version",E,E,38,N],[12,"machine",E,E,38,N],[12,"domainname",E,E,38,N],[3,R[626],E,E,N,N],[12,"rlim_cur",E,E,39,N],[12,"rlim_max",E,E,39,N],[3,"glob_t",E,E,N,N],[12,"gl_pathc",E,E,40,N],[12,"gl_pathv",E,E,40,N],[12,"gl_offs",E,E,40,N],[12,"gl_flags",E,E,40,N],[3,"passwd",E,E,N,N],[12,"pw_name",E,E,41,N],[12,"pw_passwd",E,E,41,N],[12,"pw_uid",E,E,41,N],[12,"pw_gid",E,E,41,N],[12,"pw_gecos",E,E,41,N],[12,"pw_dir",E,E,41,N],[12,"pw_shell",E,E,41,N],[3,"spwd",E,E,N,N],[12,"sp_namp",E,E,42,N],[12,"sp_pwdp",E,E,42,N],[12,"sp_lstchg",E,E,42,N],[12,"sp_min",E,E,42,N],[12,"sp_max",E,E,42,N],[12,"sp_warn",E,E,42,N],[12,"sp_inact",E,E,42,N],[12,"sp_expire",E,E,42,N],[12,"sp_flag",E,E,42,N],[3,"dqblk",E,E,N,N],[12,"dqb_bhardlimit",E,E,43,N],[12,"dqb_bsoftlimit",E,E,43,N],[12,"dqb_curspace",E,E,43,N],[12,"dqb_ihardlimit",E,E,43,N],[12,"dqb_isoftlimit",E,E,43,N],[12,"dqb_curinodes",E,E,43,N],[12,"dqb_btime",E,E,43,N],[12,"dqb_itime",E,E,43,N],[12,"dqb_valid",E,E,43,N],[3,R[572],E,E,N,N],[12,"ssi_signo",E,E,44,N],[12,"ssi_errno",E,E,44,N],[12,"ssi_code",E,E,44,N],[12,"ssi_pid",E,E,44,N],[12,"ssi_uid",E,E,44,N],[12,"ssi_fd",E,E,44,N],[12,"ssi_tid",E,E,44,N],[12,"ssi_band",E,E,44,N],[12,"ssi_overrun",E,E,44,N],[12,"ssi_trapno",E,E,44,N],[12,"ssi_status",E,E,44,N],[12,"ssi_int",E,E,44,N],[12,"ssi_ptr",E,E,44,N],[12,"ssi_utime",E,E,44,N],[12,"ssi_stime",E,E,44,N],[12,"ssi_addr",E,E,44,N],[12,"ssi_addr_lsb",E,E,44,N],[12,"ssi_syscall",E,E,44,N],[12,"ssi_call_addr",E,E,44,N],[12,"ssi_arch",E,E,44,N],[3,R[573],E,E,N,N],[12,R[534],E,E,45,N],[12,"it_value",E,E,45,N],[3,"fsid_t",E,E,N,N],[3,R[574],E,E,N,N],[12,"mr_ifindex",E,E,46,N],[12,"mr_type",E,E,46,N],[12,"mr_alen",E,E,46,N],[12,"mr_address",E,E,46,N],[3,R[556],E,E,N,N],[3,R[559],E,E,N,N],[12,"if_index",E,E,47,N],[12,"if_name",E,E,47,N],[3,"msginfo",E,E,N,N],[12,"msgpool",E,E,48,N],[12,"msgmap",E,E,48,N],[12,"msgmax",E,E,48,N],[12,"msgmnb",E,E,48,N],[12,"msgmni",E,E,48,N],[12,"msgssz",E,E,48,N],[12,"msgtql",E,E,48,N],[12,"msgseg",E,E,48,N],[3,"sembuf",E,E,N,N],[12,"sem_num",E,E,49,N],[12,"sem_op",E,E,49,N],[12,"sem_flg",E,E,49,N],[3,R[575],E,E,N,N],[12,"time",E,E,50,N],[12,"type_",E,E,50,N],[12,"code",E,E,50,N],[12,"value",E,E,50,N],[3,R[627],E,E,N,N],[12,"bustype",E,E,51,N],[12,"vendor",E,E,51,N],[12,"product",E,E,51,N],[12,"version",E,E,51,N],[3,R[576],E,E,N,N],[12,"value",E,E,52,N],[12,"minimum",E,E,52,N],[12,"maximum",E,E,52,N],[12,"fuzz",E,E,52,N],[12,"flat",E,E,52,N],[12,"resolution",E,E,52,N],[3,R[577],E,E,N,N],[12,"flags",E,E,53,N],[12,"len",E,E,53,N],[12,"index",E,E,53,N],[12,"keycode",E,E,53,N],[12,"scancode",E,E,53,N],[3,R[578],E,E,N,N],[12,"type_",E,E,54,N],[12,"codes_size",E,E,54,N],[12,"codes_ptr",E,E,54,N],[3,R[579],E,E,N,N],[12,"length",E,E,55,N],[12,"delay",E,E,55,N],[3,R[580],E,E,N,N],[12,"button",E,E,56,N],[12,"interval",E,E,56,N],[3,R[581],E,E,N,N],[12,"attack_length",E,E,57,N],[12,"attack_level",E,E,57,N],[12,"fade_length",E,E,57,N],[12,"fade_level",E,E,57,N],[3,R[582],E,E,N,N],[12,"level",E,E,58,N],[12,R[535],E,E,58,N],[3,R[583],E,E,N,N],[12,"start_level",E,E,59,N],[12,"end_level",E,E,59,N],[12,R[535],E,E,59,N],[3,R[584],E,E,N,N],[12,"right_saturation",E,E,60,N],[12,"left_saturation",E,E,60,N],[12,"right_coeff",E,E,60,N],[12,"left_coeff",E,E,60,N],[12,"deadband",E,E,60,N],[12,"center",E,E,60,N],[3,R[585],E,E,N,N],[12,"waveform",E,E,61,N],[12,"period",E,E,61,N],[12,"magnitude",E,E,61,N],[12,"offset",E,E,61,N],[12,"phase",E,E,61,N],[12,R[535],E,E,61,N],[12,"custom_len",E,E,61,N],[12,"custom_data",E,E,61,N],[3,R[586],E,E,N,N],[12,"strong_magnitude",E,E,62,N],[12,"weak_magnitude",E,E,62,N],[3,R[587],E,E,N,N],[12,"type_",E,E,63,N],[12,"id",E,E,63,N],[12,"direction",E,E,63,N],[12,"trigger",E,E,63,N],[12,"replay",E,E,63,N],[12,U,E,E,63,N],[3,R[588],E,E,N,N],[12,"dlpi_addr",E,E,64,N],[12,"dlpi_name",E,E,64,N],[12,"dlpi_phdr",E,E,64,N],[12,"dlpi_phnum",E,E,64,N],[12,"dlpi_adds",E,E,64,N],[12,"dlpi_subs",E,E,64,N],[12,"dlpi_tls_modid",E,E,64,N],[12,"dlpi_tls_data",E,E,64,N],[3,R[628],E,E,N,N],[12,"e_ident",E,E,65,N],[12,"e_type",E,E,65,N],[12,R[536],E,E,65,N],[12,R[537],E,E,65,N],[12,"e_entry",E,E,65,N],[12,"e_phoff",E,E,65,N],[12,"e_shoff",E,E,65,N],[12,"e_flags",E,E,65,N],[12,"e_ehsize",E,E,65,N],[12,R[538],E,E,65,N],[12,"e_phnum",E,E,65,N],[12,R[539],E,E,65,N],[12,"e_shnum",E,E,65,N],[12,R[540],E,E,65,N],[3,R[629],E,E,N,N],[12,"e_ident",E,E,66,N],[12,"e_type",E,E,66,N],[12,R[536],E,E,66,N],[12,R[537],E,E,66,N],[12,"e_entry",E,E,66,N],[12,"e_phoff",E,E,66,N],[12,"e_shoff",E,E,66,N],[12,"e_flags",E,E,66,N],[12,"e_ehsize",E,E,66,N],[12,R[538],E,E,66,N],[12,"e_phnum",E,E,66,N],[12,R[539],E,E,66,N],[12,"e_shnum",E,E,66,N],[12,R[540],E,E,66,N],[3,R[630],E,E,N,N],[12,"st_name",E,E,67,N],[12,"st_value",E,E,67,N],[12,"st_size",E,E,67,N],[12,"st_info",E,E,67,N],[12,"st_other",E,E,67,N],[12,"st_shndx",E,E,67,N],[3,R[631],E,E,N,N],[12,"st_name",E,E,68,N],[12,"st_info",E,E,68,N],[12,"st_other",E,E,68,N],[12,"st_shndx",E,E,68,N],[12,"st_value",E,E,68,N],[12,"st_size",E,E,68,N],[3,R[632],E,E,N,N],[12,"p_type",E,E,69,N],[12,"p_offset",E,E,69,N],[12,"p_vaddr",E,E,69,N],[12,"p_paddr",E,E,69,N],[12,"p_filesz",E,E,69,N],[12,"p_memsz",E,E,69,N],[12,"p_flags",E,E,69,N],[12,"p_align",E,E,69,N],[3,R[633],E,E,N,N],[12,"p_type",E,E,70,N],[12,"p_flags",E,E,70,N],[12,"p_offset",E,E,70,N],[12,"p_vaddr",E,E,70,N],[12,"p_paddr",E,E,70,N],[12,"p_filesz",E,E,70,N],[12,"p_memsz",E,E,70,N],[12,"p_align",E,E,70,N],[3,R[634],E,E,N,N],[12,"sh_name",E,E,71,N],[12,"sh_type",E,E,71,N],[12,"sh_flags",E,E,71,N],[12,"sh_addr",E,E,71,N],[12,R[541],E,E,71,N],[12,"sh_size",E,E,71,N],[12,"sh_link",E,E,71,N],[12,"sh_info",E,E,71,N],[12,R[542],E,E,71,N],[12,R[543],E,E,71,N],[3,R[635],E,E,N,N],[12,"sh_name",E,E,72,N],[12,"sh_type",E,E,72,N],[12,"sh_flags",E,E,72,N],[12,"sh_addr",E,E,72,N],[12,R[541],E,E,72,N],[12,"sh_size",E,E,72,N],[12,"sh_link",E,E,72,N],[12,"sh_info",E,E,72,N],[12,R[542],E,E,72,N],[12,R[543],E,E,72,N],[3,R[636],E,E,N,N],[12,"ch_type",E,E,73,N],[12,"ch_size",E,E,73,N],[12,R[544],E,E,73,N],[3,R[637],E,E,N,N],[12,"ch_type",E,E,74,N],[12,"ch_reserved",E,E,74,N],[12,"ch_size",E,E,74,N],[12,R[544],E,E,74,N],[3,"ucred",E,E,N,N],[12,"pid",E,E,75,N],[12,"uid",E,E,75,N],[12,"gid",E,E,75,N],[3,"mntent",E,E,N,N],[12,"mnt_fsname",E,E,76,N],[12,"mnt_dir",E,E,76,N],[12,"mnt_type",E,E,76,N],[12,"mnt_opts",E,E,76,N],[12,"mnt_freq",E,E,76,N],[12,"mnt_passno",E,E,76,N],[3,R[589],E,E,N,N],[3,R[590],E,E,N,N],[3,R[591],E,E,N,N],[12,"cmd",E,E,77,N],[12,"version",E,E,77,N],[12,"reserved",E,E,77,N],[3,R[592],E,E,N,N],[12,"ipi6_addr",E,E,78,N],[12,"ipi6_ifindex",E,E,78,N],[3,R[593],E,E,N,N],[12,"req",E,E,79,N],[12,"ip",E,E,79,N],[12,"dev",E,E,79,N],[12,"stamp",E,E,79,N],[12,"updated",E,E,79,N],[12,"ha",E,E,79,N],[3,R[594],E,E,N,N],[12,"wd",E,E,80,N],[12,"mask",E,E,80,N],[12,"cookie",E,E,80,N],[12,"len",E,E,80,N],[3,R[595],E,E,N,N],[12,"nl_family",E,E,81,N],[12,"nl_pid",E,E,81,N],[12,"nl_groups",E,E,81,N],[3,"dirent",E,E,N,N],[12,"d_ino",E,E,82,N],[12,"d_off",E,E,82,N],[12,"d_reclen",E,E,82,N],[12,"d_type",E,E,82,N],[12,"d_name",E,E,82,N],[3,R[638],E,E,N,N],[12,"d_ino",E,E,83,N],[12,"d_off",E,E,83,N],[12,"d_reclen",E,E,83,N],[12,"d_type",E,E,83,N],[12,"d_name",E,E,83,N],[3,R[596],E,E,N,N],[12,"salg_family",E,E,84,N],[12,"salg_type",E,E,84,N],[12,"salg_feat",E,E,84,N],[12,"salg_mask",E,E,84,N],[12,"salg_name",E,E,84,N],[3,R[597],E,E,N,N],[12,"ivlen",E,E,85,N],[12,"iv",E,E,85,N],[3,"mq_attr",E,E,N,N],[12,"mq_flags",E,E,86,N],[12,"mq_maxmsg",E,E,86,N],[12,"mq_msgsize",E,E,86,N],[12,"mq_curmsgs",E,E,86,N],[3,"statx",E,E,N,N],[12,"stx_mask",E,E,87,N],[12,"stx_blksize",E,E,87,N],[12,"stx_attributes",E,E,87,N],[12,"stx_nlink",E,E,87,N],[12,"stx_uid",E,E,87,N],[12,"stx_gid",E,E,87,N],[12,"stx_mode",E,E,87,N],[12,"__statx_pad1",E,E,87,N],[12,"stx_ino",E,E,87,N],[12,"stx_size",E,E,87,N],[12,"stx_blocks",E,E,87,N],[12,"stx_attributes_mask",E,E,87,N],[12,"stx_atime",E,E,87,N],[12,"stx_btime",E,E,87,N],[12,"stx_ctime",E,E,87,N],[12,"stx_mtime",E,E,87,N],[12,"stx_rdev_major",E,E,87,N],[12,"stx_rdev_minor",E,E,87,N],[12,"stx_dev_major",E,E,87,N],[12,"stx_dev_minor",E,E,87,N],[12,"__statx_pad2",E,E,87,N],[3,R[598],E,E,N,N],[12,"tv_sec",E,E,88,N],[12,"tv_nsec",E,E,88,N],[12,"__statx_timestamp_pad1",E,E,88,N],[3,"aiocb",E,E,N,N],[12,"aio_fildes",E,E,89,N],[12,"aio_lio_opcode",E,E,89,N],[12,"aio_reqprio",E,E,89,N],[12,"aio_buf",E,E,89,N],[12,"aio_nbytes",E,E,89,N],[12,"aio_sigevent",E,E,89,N],[12,"aio_offset",E,E,89,N],[3,R[599],E,E,N,N],[12,"e_termination",E,E,90,N],[12,"e_exit",E,E,90,N],[3,R[600],E,E,N,N],[12,"tv_sec",E,E,91,N],[12,"tv_usec",E,E,91,N],[3,R[557],E,E,N,N],[12,"sa_sigaction",E,E,92,N],[12,"sa_mask",E,E,92,N],[12,"sa_flags",E,E,92,N],[12,"sa_restorer",E,E,92,N],[3,"stack_t",E,E,N,N],[12,"ss_sp",E,E,93,N],[12,"ss_flags",E,E,93,N],[12,"ss_size",E,E,93,N],[3,R[601],E,E,N,N],[12,"si_signo",E,E,94,N],[12,"si_errno",E,E,94,N],[12,"si_code",E,E,94,N],[3,R[639],E,E,N,N],[12,"gl_pathc",E,E,95,N],[12,"gl_pathv",E,E,95,N],[12,"gl_offs",E,E,95,N],[12,"gl_flags",E,E,95,N],[3,"statfs",E,E,N,N],[12,"f_type",E,E,96,N],[12,"f_bsize",E,E,96,N],[12,R[552],E,E,96,N],[12,"f_bfree",E,E,96,N],[12,R[553],E,E,96,N],[12,"f_files",E,E,96,N],[12,"f_ffree",E,E,96,N],[12,"f_fsid",E,E,96,N],[12,R[550],E,E,96,N],[12,R[551],E,E,96,N],[3,"msghdr",E,E,N,N],[12,"msg_name",E,E,97,N],[12,"msg_namelen",E,E,97,N],[12,"msg_iov",E,E,97,N],[12,"msg_iovlen",E,E,97,N],[12,"msg_control",E,E,97,N],[12,"msg_controllen",E,E,97,N],[12,"msg_flags",E,E,97,N],[3,"cmsghdr",E,E,N,N],[12,"cmsg_len",E,E,98,N],[12,"cmsg_level",E,E,98,N],[12,"cmsg_type",E,E,98,N],[3,"termios",E,E,N,N],[12,"c_iflag",E,E,99,N],[12,"c_oflag",E,E,99,N],[12,"c_cflag",E,E,99,N],[12,"c_lflag",E,E,99,N],[12,"c_line",E,E,99,N],[12,"c_cc",E,E,99,N],[12,"c_ispeed",E,E,99,N],[12,"c_ospeed",E,E,99,N],[3,"flock",E,E,N,N],[12,"l_type",E,E,100,N],[12,"l_whence",E,E,100,N],[12,"l_start",E,E,100,N],[12,"l_len",E,E,100,N],[12,"l_pid",E,E,100,N],[3,R[602],E,E,N,N],[12,"arena",E,E,101,N],[12,"ordblks",E,E,101,N],[12,"smblks",E,E,101,N],[12,"hblks",E,E,101,N],[12,"hblkhd",E,E,101,N],[12,"usmblks",E,E,101,N],[12,"fsmblks",E,E,101,N],[12,"uordblks",E,E,101,N],[12,"fordblks",E,E,101,N],[12,"keepcost",E,E,101,N],[3,R[640],E,E,N,N],[12,"nlmsg_len",E,E,102,N],[12,"nlmsg_type",E,E,102,N],[12,"nlmsg_flags",E,E,102,N],[12,"nlmsg_seq",E,E,102,N],[12,"nlmsg_pid",E,E,102,N],[3,R[641],E,E,N,N],[12,"error",E,E,103,N],[12,"msg",E,E,103,N],[3,R[603],E,E,N,N],[12,"group",E,E,104,N],[3,R[604],E,E,N,N],[12,"nm_block_size",E,E,105,N],[12,"nm_block_nr",E,E,105,N],[12,"nm_frame_size",E,E,105,N],[12,"nm_frame_nr",E,E,105,N],[3,R[605],E,E,N,N],[12,"nm_status",E,E,106,N],[12,"nm_len",E,E,106,N],[12,"nm_group",E,E,106,N],[12,"nm_pid",E,E,106,N],[12,"nm_uid",E,E,106,N],[12,"nm_gid",E,E,106,N],[3,"nlattr",E,E,N,N],[12,"nla_len",E,E,107,N],[12,"nla_type",E,E,107,N],[3,"rtentry",E,E,N,N],[12,"rt_pad1",E,E,108,N],[12,"rt_dst",E,E,108,N],[12,"rt_gateway",E,E,108,N],[12,"rt_genmask",E,E,108,N],[12,"rt_flags",E,E,108,N],[12,"rt_pad2",E,E,108,N],[12,"rt_pad3",E,E,108,N],[12,"rt_tos",E,E,108,N],[12,"rt_class",E,E,108,N],[12,"rt_pad4",E,E,108,N],[12,"rt_metric",E,E,108,N],[12,"rt_dev",E,E,108,N],[12,"rt_mtu",E,E,108,N],[12,"rt_window",E,E,108,N],[12,"rt_irtt",E,E,108,N],[3,"utmpx",E,E,N,N],[12,"ut_type",E,E,109,N],[12,"ut_pid",E,E,109,N],[12,"ut_line",E,E,109,N],[12,"ut_id",E,E,109,N],[12,"ut_user",E,E,109,N],[12,"ut_host",E,E,109,N],[12,"ut_exit",E,E,109,N],[12,"ut_session",E,E,109,N],[12,"ut_tv",E,E,109,N],[12,"ut_addr_v6",E,E,109,N],[3,R[647],E,E,N,N],[3,"sysinfo",E,E,N,N],[12,"uptime",E,E,110,N],[12,"loads",E,E,110,N],[12,"totalram",E,E,110,N],[12,"freeram",E,E,110,N],[12,"sharedram",E,E,110,N],[12,"bufferram",E,E,110,N],[12,"totalswap",E,E,110,N],[12,"freeswap",E,E,110,N],[12,"procs",E,E,110,N],[12,"pad",E,E,110,N],[12,"totalhigh",E,E,110,N],[12,"freehigh",E,E,110,N],[12,"mem_unit",E,E,110,N],[12,"_f",E,E,110,N],[3,R[642],E,E,N,N],[12,"msg_perm",E,E,111,N],[12,"msg_stime",E,E,111,N],[12,"msg_rtime",E,E,111,N],[12,"msg_ctime",E,E,111,N],[12,"msg_qnum",E,E,111,N],[12,"msg_qbytes",E,E,111,N],[12,"msg_lspid",E,E,111,N],[12,"msg_lrpid",E,E,111,N],[3,"stat",E,E,N,N],[12,"st_dev",E,E,112,N],[12,"st_ino",E,E,112,N],[12,"st_nlink",E,E,112,N],[12,"st_mode",E,E,112,N],[12,"st_uid",E,E,112,N],[12,"st_gid",E,E,112,N],[12,"st_rdev",E,E,112,N],[12,"st_size",E,E,112,N],[12,R[545],E,E,112,N],[12,R[546],E,E,112,N],[12,"st_atime",E,E,112,N],[12,R[547],E,E,112,N],[12,"st_mtime",E,E,112,N],[12,R[548],E,E,112,N],[12,"st_ctime",E,E,112,N],[12,R[549],E,E,112,N],[3,"stat64",E,E,N,N],[12,"st_dev",E,E,113,N],[12,"st_ino",E,E,113,N],[12,"st_nlink",E,E,113,N],[12,"st_mode",E,E,113,N],[12,"st_uid",E,E,113,N],[12,"st_gid",E,E,113,N],[12,"st_rdev",E,E,113,N],[12,"st_size",E,E,113,N],[12,R[545],E,E,113,N],[12,R[546],E,E,113,N],[12,"st_atime",E,E,113,N],[12,R[547],E,E,113,N],[12,"st_mtime",E,E,113,N],[12,R[548],E,E,113,N],[12,"st_ctime",E,E,113,N],[12,R[549],E,E,113,N],[3,R[606],E,E,N,N],[12,"f_type",E,E,114,N],[12,"f_bsize",E,E,114,N],[12,R[552],E,E,114,N],[12,"f_bfree",E,E,114,N],[12,R[553],E,E,114,N],[12,"f_files",E,E,114,N],[12,"f_ffree",E,E,114,N],[12,"f_fsid",E,E,114,N],[12,R[550],E,E,114,N],[12,R[551],E,E,114,N],[12,"f_flags",E,E,114,N],[12,"f_spare",E,E,114,N],[3,R[558],E,E,N,N],[12,"f_bsize",E,E,115,N],[12,R[551],E,E,115,N],[12,R[552],E,E,115,N],[12,"f_bfree",E,E,115,N],[12,R[553],E,E,115,N],[12,"f_files",E,E,115,N],[12,"f_ffree",E,E,115,N],[12,"f_favail",E,E,115,N],[12,"f_fsid",E,E,115,N],[12,"f_flag",E,E,115,N],[12,R[555],E,E,115,N],[3,R[607],E,E,N,N],[3,R[608],E,E,N,N],[12,"significand",E,E,116,N],[12,"exponent",E,E,116,N],[3,R[609],E,E,N,N],[12,"element",E,E,117,N],[3,R[610],E,E,N,N],[12,"cwd",E,E,118,N],[12,"swd",E,E,118,N],[12,"ftw",E,E,118,N],[12,"fop",E,E,118,N],[12,"rip",E,E,118,N],[12,"rdp",E,E,118,N],[12,"mxcsr",E,E,118,N],[12,R[554],E,E,118,N],[12,"_st",E,E,118,N],[12,"_xmm",E,E,118,N],[3,R[611],E,E,N,N],[12,"r15",E,E,119,N],[12,"r14",E,E,119,N],[12,"r13",E,E,119,N],[12,"r12",E,E,119,N],[12,"rbp",E,E,119,N],[12,"rbx",E,E,119,N],[12,"r11",E,E,119,N],[12,"r10",E,E,119,N],[12,"r9",E,E,119,N],[12,"r8",E,E,119,N],[12,"rax",E,E,119,N],[12,"rcx",E,E,119,N],[12,"rdx",E,E,119,N],[12,"rsi",E,E,119,N],[12,"rdi",E,E,119,N],[12,"orig_rax",E,E,119,N],[12,"rip",E,E,119,N],[12,"cs",E,E,119,N],[12,"eflags",E,E,119,N],[12,"rsp",E,E,119,N],[12,"ss",E,E,119,N],[12,"fs_base",E,E,119,N],[12,"gs_base",E,E,119,N],[12,"ds",E,E,119,N],[12,"es",E,E,119,N],[12,"fs",E,E,119,N],[12,"gs",E,E,119,N],[3,"user",E,E,N,N],[12,"regs",E,E,120,N],[12,"u_fpvalid",E,E,120,N],[12,"i387",E,E,120,N],[12,"u_tsize",E,E,120,N],[12,"u_dsize",E,E,120,N],[12,"u_ssize",E,E,120,N],[12,"start_code",E,E,120,N],[12,"start_stack",E,E,120,N],[12,"signal",E,E,120,N],[12,"u_ar0",E,E,120,N],[12,"u_fpstate",E,E,120,N],[12,"magic",E,E,120,N],[12,"u_comm",E,E,120,N],[12,"u_debugreg",E,E,120,N],[3,R[612],E,E,N,N],[12,"gregs",E,E,121,N],[12,"fpregs",E,E,121,N],[3,R[643],E,E,N,N],[12,"__key",E,E,122,N],[12,"uid",E,E,122,N],[12,"gid",E,E,122,N],[12,"cuid",E,E,122,N],[12,"cgid",E,E,122,N],[12,"mode",E,E,122,N],[12,"__seq",E,E,122,N],[3,R[644],E,E,N,N],[12,"shm_perm",E,E,123,N],[12,"shm_segsz",E,E,123,N],[12,"shm_atime",E,E,123,N],[12,"shm_dtime",E,E,123,N],[12,"shm_ctime",E,E,123,N],[12,"shm_cpid",E,E,123,N],[12,"shm_lpid",E,E,123,N],[12,"shm_nattch",E,E,123,N],[3,R[645],E,E,N,N],[12,"c_iflag",E,E,124,N],[12,"c_oflag",E,E,124,N],[12,"c_cflag",E,E,124,N],[12,"c_lflag",E,E,124,N],[12,"c_line",E,E,124,N],[12,"c_cc",E,E,124,N],[12,"c_ispeed",E,E,124,N],[12,"c_ospeed",E,E,124,N],[3,R[613],E,E,N,N],[12,"cwd",E,E,125,N],[12,"swd",E,E,125,N],[12,"ftw",E,E,125,N],[12,"fop",E,E,125,N],[12,"rip",E,E,125,N],[12,"rdp",E,E,125,N],[12,"mxcsr",E,E,125,N],[12,R[554],E,E,125,N],[12,"st_space",E,E,125,N],[12,"xmm_space",E,E,125,N],[3,R[614],E,E,N,N],[12,"uc_flags",E,E,126,N],[12,"uc_link",E,E,126,N],[12,"uc_stack",E,E,126,N],[12,"uc_mcontext",E,E,126,N],[12,"uc_sigmask",E,E,126,N],[3,"statvfs",E,E,N,N],[12,"f_bsize",E,E,127,N],[12,R[551],E,E,127,N],[12,R[552],E,E,127,N],[12,"f_bfree",E,E,127,N],[12,R[553],E,E,127,N],[12,"f_files",E,E,127,N],[12,"f_ffree",E,E,127,N],[12,"f_favail",E,E,127,N],[12,"f_fsid",E,E,127,N],[12,"f_flag",E,E,127,N],[12,R[555],E,E,127,N],[3,"sem_t",E,E,N,N],[3,R[615],E,E,N,N],[3,R[616],E,E,N,N],[3,R[617],E,E,N,N],[3,R[618],E,E,N,N],[3,R[619],E,E,N,N],[3,R[620],E,E,N,N],[3,R[646],E,E,N,N],[12,"s6_addr",E,E,128,N],[4,"DIR",E,E,N,N],[4,"FILE",E,E,N,N],[4,"fpos_t",E,E,N,N],[4,R[648],E,E,N,N],[4,R[649],E,E,N,N],[5,"CMSG_FIRSTHDR",E,E,N,[[]]],[5,"CMSG_DATA",E,E,N,[[]]],[5,"CMSG_SPACE",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"FD_CLR",E,E,N,[[["c_int"]]]],[5,"FD_ISSET",E,E,N,[[["c_int"]],["bool"]]],[5,"FD_SET",E,E,N,[[["c_int"]]]],[5,"FD_ZERO",E,E,N,[[]]],[5,"WIFSTOPPED",E,E,N,[[["c_int"]],["bool"]]],[5,"WSTOPSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED",E,E,N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED",E,E,N,[[["c_int"]],["bool"]]],[5,"WTERMSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED",E,E,N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS",E,E,N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP",E,E,N,[[["c_int"]],["bool"]]],[5,"QCMD",E,E,N,[[["c_int"]],["c_int"]]],[5,"IPOPT_COPIED",E,E,N,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS",E,E,N,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER",E,E,N,[[["u8"]],["u8"]]],[5,"IPTOS_ECN",E,E,N,[[["u8"]],["u8"]]],[5,"CMSG_NXTHDR",E,E,N,[[]]],[5,"CPU_ZERO",E,E,N,[[[R[556]]]]],[5,"CPU_SET",E,E,N,[[[R[556]],["usize"]]]],[5,"CPU_CLR",E,E,N,[[[R[556]],["usize"]]]],[5,"CPU_ISSET",E,E,N,[[[R[556]],["usize"]],["bool"]]],[5,"CPU_EQUAL",E,E,N,[[[R[556]]],["bool"]]],[5,"major",E,E,N,[[["dev_t"]],["c_uint"]]],[5,"minor",E,E,N,[[["dev_t"]],["c_uint"]]],[5,"makedev",E,E,N,[[["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS",E,E,N,[[["u8"]],["u8"]]],[5,"IPTOS_PREC",E,E,N,[[["u8"]],["u8"]]],[5,"RT_TOS",E,E,N,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS",E,E,N,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR",E,E,N,[[["u32"]],["bool"]]],[5,"NLA_ALIGN",E,E,N,[[["c_int"]],["c_int"]]],[5,"isalnum",E,E,N,N],[5,"isalpha",E,E,N,N],[5,"iscntrl",E,E,N,N],[5,"isdigit",E,E,N,N],[5,"isgraph",E,E,N,N],[5,"islower",E,E,N,N],[5,"isprint",E,E,N,N],[5,"ispunct",E,E,N,N],[5,"isspace",E,E,N,N],[5,"isupper",E,E,N,N],[5,"isxdigit",E,E,N,N],[5,"tolower",E,E,N,N],[5,"toupper",E,E,N,N],[5,"fopen",E,E,N,N],[5,"freopen",E,E,N,N],[5,"fflush",E,E,N,N],[5,"fclose",E,E,N,N],[5,"remove",E,E,N,N],[5,"rename",E,E,N,N],[5,"tmpfile",E,E,N,N],[5,"setvbuf",E,E,N,N],[5,"setbuf",E,E,N,N],[5,"getchar",E,E,N,N],[5,"putchar",E,E,N,N],[5,"fgetc",E,E,N,N],[5,"fgets",E,E,N,N],[5,"fputc",E,E,N,N],[5,"fputs",E,E,N,N],[5,"puts",E,E,N,N],[5,"ungetc",E,E,N,N],[5,"fread",E,E,N,N],[5,"fwrite",E,E,N,N],[5,"fseek",E,E,N,N],[5,"ftell",E,E,N,N],[5,"rewind",E,E,N,N],[5,"fgetpos",E,E,N,N],[5,"fsetpos",E,E,N,N],[5,"feof",E,E,N,N],[5,"ferror",E,E,N,N],[5,"perror",E,E,N,N],[5,"atoi",E,E,N,N],[5,"strtod",E,E,N,N],[5,"strtol",E,E,N,N],[5,"strtoul",E,E,N,N],[5,"calloc",E,E,N,N],[5,"malloc",E,E,N,N],[5,"realloc",E,E,N,N],[5,"free",E,E,N,N],[5,"abort",E,E,N,N],[5,"exit",E,E,N,N],[5,"_exit",E,E,N,N],[5,"atexit",E,E,N,N],[5,"system",E,E,N,N],[5,"getenv",E,E,N,N],[5,"strcpy",E,E,N,N],[5,"strncpy",E,E,N,N],[5,"strcat",E,E,N,N],[5,"strncat",E,E,N,N],[5,"strcmp",E,E,N,N],[5,"strncmp",E,E,N,N],[5,"strcoll",E,E,N,N],[5,"strchr",E,E,N,N],[5,"strrchr",E,E,N,N],[5,"strspn",E,E,N,N],[5,"strcspn",E,E,N,N],[5,"strdup",E,E,N,N],[5,"strpbrk",E,E,N,N],[5,"strstr",E,E,N,N],[5,"strcasecmp",E,E,N,N],[5,"strncasecmp",E,E,N,N],[5,"strlen",E,E,N,N],[5,"strnlen",E,E,N,N],[5,"strerror",E,E,N,N],[5,"strtok",E,E,N,N],[5,"strxfrm",E,E,N,N],[5,"wcslen",E,E,N,N],[5,"wcstombs",E,E,N,N],[5,"memchr",E,E,N,N],[5,"memcmp",E,E,N,N],[5,"memcpy",E,E,N,N],[5,"memmove",E,E,N,N],[5,"memset",E,E,N,N],[5,"getpwnam",E,E,N,N],[5,"getpwuid",E,E,N,N],[5,"fprintf",E,E,N,N],[5,"printf",E,E,N,N],[5,"snprintf",E,E,N,N],[5,"sprintf",E,E,N,N],[5,"fscanf",E,E,N,N],[5,"scanf",E,E,N,N],[5,"sscanf",E,E,N,N],[5,"getchar_unlocked",E,E,N,N],[5,"putchar_unlocked",E,E,N,N],[5,"socket",E,E,N,N],[5,"connect",E,E,N,N],[5,"listen",E,E,N,N],[5,"accept",E,E,N,N],[5,"getpeername",E,E,N,N],[5,"getsockname",E,E,N,N],[5,"setsockopt",E,E,N,N],[5,"socketpair",E,E,N,N],[5,"sendto",E,E,N,N],[5,"shutdown",E,E,N,N],[5,"chmod",E,E,N,N],[5,"fchmod",E,E,N,N],[5,"fstat",E,E,N,N],[5,"mkdir",E,E,N,N],[5,"stat",E,E,N,N],[5,"pclose",E,E,N,N],[5,"fdopen",E,E,N,N],[5,"fileno",E,E,N,N],[5,"open",E,E,N,N],[5,"creat",E,E,N,N],[5,"fcntl",E,E,N,N],[5,"opendir",E,E,N,N],[5,"fdopendir",E,E,N,N],[5,"readdir",E,E,N,N],[5,"readdir_r",E,"The 64-bit libc on Solaris and illumos only has readdir_r.…",N,N],[5,"closedir",E,E,N,N],[5,"rewinddir",E,E,N,N],[5,"openat",E,E,N,N],[5,"fchmodat",E,E,N,N],[5,"fchown",E,E,N,N],[5,"fchownat",E,E,N,N],[5,"fstatat",E,E,N,N],[5,"linkat",E,E,N,N],[5,"mkdirat",E,E,N,N],[5,"readlinkat",E,E,N,N],[5,"renameat",E,E,N,N],[5,"symlinkat",E,E,N,N],[5,"unlinkat",E,E,N,N],[5,"access",E,E,N,N],[5,"alarm",E,E,N,N],[5,"chdir",E,E,N,N],[5,"fchdir",E,E,N,N],[5,"chown",E,E,N,N],[5,"lchown",E,E,N,N],[5,"close",E,E,N,N],[5,"dup",E,E,N,N],[5,"dup2",E,E,N,N],[5,"execl",E,E,N,N],[5,"execle",E,E,N,N],[5,"execlp",E,E,N,N],[5,"execv",E,E,N,N],[5,"execve",E,E,N,N],[5,"execvp",E,E,N,N],[5,"fork",E,E,N,N],[5,"fpathconf",E,E,N,N],[5,"getcwd",E,E,N,N],[5,"getegid",E,E,N,N],[5,"geteuid",E,E,N,N],[5,"getgid",E,E,N,N],[5,"getgroups",E,E,N,N],[5,"getlogin",E,E,N,N],[5,"getopt",E,E,N,N],[5,"getpgid",E,E,N,N],[5,"getpgrp",E,E,N,N],[5,"getpid",E,E,N,N],[5,"getppid",E,E,N,N],[5,"getuid",E,E,N,N],[5,"isatty",E,E,N,N],[5,"link",E,E,N,N],[5,"lseek",E,E,N,N],[5,"pathconf",E,E,N,N],[5,"pause",E,E,N,N],[5,"pipe",E,E,N,N],[5,"posix_memalign",E,E,N,N],[5,"read",E,E,N,N],[5,"rmdir",E,E,N,N],[5,"seteuid",E,E,N,N],[5,"setegid",E,E,N,N],[5,"setgid",E,E,N,N],[5,"setpgid",E,E,N,N],[5,"setsid",E,E,N,N],[5,"setuid",E,E,N,N],[5,"sleep",E,E,N,N],[5,"nanosleep",E,E,N,N],[5,"tcgetpgrp",E,E,N,N],[5,"tcsetpgrp",E,E,N,N],[5,"ttyname",E,E,N,N],[5,"unlink",E,E,N,N],[5,"wait",E,E,N,N],[5,"waitpid",E,E,N,N],[5,"write",E,E,N,N],[5,"pread",E,E,N,N],[5,"pwrite",E,E,N,N],[5,"umask",E,E,N,N],[5,"utime",E,E,N,N],[5,"kill",E,E,N,N],[5,"killpg",E,E,N,N],[5,"mlock",E,E,N,N],[5,"munlock",E,E,N,N],[5,"mlockall",E,E,N,N],[5,"munlockall",E,E,N,N],[5,"mmap",E,E,N,N],[5,"munmap",E,E,N,N],[5,"if_nametoindex",E,E,N,N],[5,"if_indextoname",E,E,N,N],[5,"lstat",E,E,N,N],[5,"fsync",E,E,N,N],[5,"setenv",E,E,N,N],[5,"unsetenv",E,E,N,N],[5,"symlink",E,E,N,N],[5,R[663],E,E,N,N],[5,"ftruncate",E,E,N,N],[5,"signal",E,E,N,N],[5,"getrusage",E,E,N,N],[5,"realpath",E,E,N,N],[5,"flock",E,E,N,N],[5,"times",E,E,N,N],[5,"pthread_self",E,E,N,N],[5,"pthread_join",E,E,N,N],[5,"pthread_exit",E,E,N,N],[5,"pthread_attr_init",E,E,N,N],[5,"pthread_attr_destroy",E,E,N,N],[5,"pthread_attr_setstacksize",E,E,N,N],[5,"pthread_attr_setdetachstate",E,E,N,N],[5,"pthread_detach",E,E,N,N],[5,"sched_yield",E,E,N,N],[5,"pthread_key_create",E,E,N,N],[5,"pthread_key_delete",E,E,N,N],[5,"pthread_getspecific",E,E,N,N],[5,"pthread_setspecific",E,E,N,N],[5,"pthread_mutex_init",E,E,N,N],[5,"pthread_mutex_destroy",E,E,N,N],[5,"pthread_mutex_lock",E,E,N,N],[5,"pthread_mutex_trylock",E,E,N,N],[5,"pthread_mutex_unlock",E,E,N,N],[5,"pthread_mutexattr_init",E,E,N,N],[5,"pthread_mutexattr_destroy",E,E,N,N],[5,"pthread_mutexattr_settype",E,E,N,N],[5,"pthread_cond_init",E,E,N,N],[5,"pthread_cond_wait",E,E,N,N],[5,"pthread_cond_timedwait",E,E,N,N],[5,"pthread_cond_signal",E,E,N,N],[5,"pthread_cond_broadcast",E,E,N,N],[5,"pthread_cond_destroy",E,E,N,N],[5,"pthread_condattr_init",E,E,N,N],[5,"pthread_condattr_destroy",E,E,N,N],[5,"pthread_rwlock_init",E,E,N,N],[5,"pthread_rwlock_destroy",E,E,N,N],[5,"pthread_rwlock_rdlock",E,E,N,N],[5,"pthread_rwlock_tryrdlock",E,E,N,N],[5,"pthread_rwlock_wrlock",E,E,N,N],[5,"pthread_rwlock_trywrlock",E,E,N,N],[5,"pthread_rwlock_unlock",E,E,N,N],[5,"pthread_rwlockattr_init",E,E,N,N],[5,"pthread_rwlockattr_destroy",E,E,N,N],[5,"getsockopt",E,E,N,N],[5,"raise",E,E,N,N],[5,R[557],E,E,N,N],[5,"utimes",E,E,N,N],[5,"dlopen",E,E,N,N],[5,"dlerror",E,E,N,N],[5,"dlsym",E,E,N,N],[5,"dlclose",E,E,N,N],[5,"dladdr",E,E,N,N],[5,"getaddrinfo",E,E,N,N],[5,"freeaddrinfo",E,E,N,N],[5,"gai_strerror",E,E,N,N],[5,"res_init",E,E,N,N],[5,"gmtime_r",E,E,N,N],[5,"localtime_r",E,E,N,N],[5,"mktime",E,E,N,N],[5,"time",E,E,N,N],[5,"gmtime",E,E,N,N],[5,"localtime",E,E,N,N],[5,"difftime",E,E,N,N],[5,"mknod",E,E,N,N],[5,"gethostname",E,E,N,N],[5,"getservbyname",E,E,N,N],[5,"getprotobyname",E,E,N,N],[5,"getprotobynumber",E,E,N,N],[5,"chroot",E,E,N,N],[5,"usleep",E,E,N,N],[5,"send",E,E,N,N],[5,"recv",E,E,N,N],[5,"putenv",E,E,N,N],[5,"poll",E,E,N,N],[5,"select",E,E,N,N],[5,"setlocale",E,E,N,N],[5,"localeconv",E,E,N,N],[5,"sem_wait",E,E,N,N],[5,"sem_trywait",E,E,N,N],[5,"sem_post",E,E,N,N],[5,"statvfs",E,E,N,N],[5,"fstatvfs",E,E,N,N],[5,"readlink",E,E,N,N],[5,"sigemptyset",E,E,N,N],[5,"sigaddset",E,E,N,N],[5,"sigfillset",E,E,N,N],[5,"sigdelset",E,E,N,N],[5,"sigismember",E,E,N,N],[5,"sigprocmask",E,E,N,N],[5,"sigpending",E,E,N,N],[5,"timegm",E,E,N,N],[5,"getsid",E,E,N,N],[5,"sysconf",E,E,N,N],[5,"mkfifo",E,E,N,N],[5,"pselect",E,E,N,N],[5,"fseeko",E,E,N,N],[5,"ftello",E,E,N,N],[5,"tcdrain",E,E,N,N],[5,"cfgetispeed",E,E,N,N],[5,"cfgetospeed",E,E,N,N],[5,"cfsetispeed",E,E,N,N],[5,"cfsetospeed",E,E,N,N],[5,"tcgetattr",E,E,N,N],[5,"tcsetattr",E,E,N,N],[5,"tcflow",E,E,N,N],[5,"tcflush",E,E,N,N],[5,"tcgetsid",E,E,N,N],[5,"tcsendbreak",E,E,N,N],[5,"mkstemp",E,E,N,N],[5,"mkdtemp",E,E,N,N],[5,"tmpnam",E,E,N,N],[5,"openlog",E,E,N,N],[5,"closelog",E,E,N,N],[5,"setlogmask",E,E,N,N],[5,"syslog",E,E,N,N],[5,"nice",E,E,N,N],[5,"grantpt",E,E,N,N],[5,"posix_openpt",E,E,N,N],[5,"ptsname",E,E,N,N],[5,"unlockpt",E,E,N,N],[5,"strcasestr",E,E,N,N],[5,"getline",E,E,N,N],[5,"cfmakeraw",E,E,N,N],[5,"cfsetspeed",E,E,N,N],[5,"sem_destroy",E,E,N,N],[5,"sem_init",E,E,N,N],[5,"fdatasync",E,E,N,N],[5,"mincore",E,E,N,N],[5,"clock_getres",E,E,N,N],[5,"clock_gettime",E,E,N,N],[5,"clock_settime",E,E,N,N],[5,"dirfd",E,E,N,N],[5,"pthread_getattr_np",E,E,N,N],[5,"pthread_attr_getstack",E,E,N,N],[5,"memalign",E,E,N,N],[5,"setgroups",E,E,N,N],[5,"pipe2",E,E,N,N],[5,"statfs",E,E,N,N],[5,R[606],E,E,N,N],[5,"fstatfs",E,E,N,N],[5,"fstatfs64",E,E,N,N],[5,R[558],E,E,N,N],[5,"fstatvfs64",E,E,N,N],[5,"memrchr",E,E,N,N],[5,"posix_fadvise",E,E,N,N],[5,"futimens",E,E,N,N],[5,"utimensat",E,E,N,N],[5,"duplocale",E,E,N,N],[5,"freelocale",E,E,N,N],[5,"newlocale",E,E,N,N],[5,"uselocale",E,E,N,N],[5,"creat64",E,E,N,N],[5,"fstat64",E,E,N,N],[5,"fstatat64",E,E,N,N],[5,"ftruncate64",E,E,N,N],[5,"lseek64",E,E,N,N],[5,"lstat64",E,E,N,N],[5,"mmap64",E,E,N,N],[5,"open64",E,E,N,N],[5,"openat64",E,E,N,N],[5,"pread64",E,E,N,N],[5,"preadv64",E,E,N,N],[5,"pwrite64",E,E,N,N],[5,"pwritev64",E,E,N,N],[5,"readdir64",E,E,N,N],[5,"readdir64_r",E,E,N,N],[5,"stat64",E,E,N,N],[5,"truncate64",E,E,N,N],[5,"mknodat",E,E,N,N],[5,"pthread_condattr_getclock",E,E,N,N],[5,"pthread_condattr_setclock",E,E,N,N],[5,"pthread_condattr_setpshared",E,E,N,N],[5,"accept4",E,E,N,N],[5,"pthread_mutexattr_setpshared",E,E,N,N],[5,"pthread_rwlockattr_getpshared",E,E,N,N],[5,"pthread_rwlockattr_setpshared",E,E,N,N],[5,"ptsname_r",E,E,N,N],[5,"clearenv",E,E,N,N],[5,"waitid",E,E,N,N],[5,"setreuid",E,E,N,N],[5,"setregid",E,E,N,N],[5,"getresuid",E,E,N,N],[5,"getresgid",E,E,N,N],[5,"acct",E,E,N,N],[5,"brk",E,E,N,N],[5,"sbrk",E,E,N,N],[5,"vfork",E,E,N,N],[5,"setresgid",E,E,N,N],[5,"setresuid",E,E,N,N],[5,"wait4",E,E,N,N],[5,"openpty",E,E,N,N],[5,"forkpty",E,E,N,N],[5,"login_tty",E,E,N,N],[5,"execvpe",E,E,N,N],[5,"fexecve",E,E,N,N],[5,"getifaddrs",E,E,N,N],[5,"freeifaddrs",E,E,N,N],[5,"bind",E,E,N,N],[5,"writev",E,E,N,N],[5,"readv",E,E,N,N],[5,"sendmsg",E,E,N,N],[5,"recvmsg",E,E,N,N],[5,"uname",E,E,N,N],[5,"strerror_r",E,E,N,N],[5,"abs",E,E,N,N],[5,"atof",E,E,N,N],[5,"labs",E,E,N,N],[5,"rand",E,E,N,N],[5,"srand",E,E,N,N],[5,"aio_read",E,E,N,N],[5,"aio_write",E,E,N,N],[5,"aio_fsync",E,E,N,N],[5,"aio_error",E,E,N,N],[5,"aio_return",E,E,N,N],[5,"aio_suspend",E,E,N,N],[5,"aio_cancel",E,E,N,N],[5,"lio_listio",E,E,N,N],[5,"lutimes",E,E,N,N],[5,"setpwent",E,E,N,N],[5,"endpwent",E,E,N,N],[5,"getpwent",E,E,N,N],[5,"setgrent",E,E,N,N],[5,"endgrent",E,E,N,N],[5,"getgrent",E,E,N,N],[5,"setspent",E,E,N,N],[5,"endspent",E,E,N,N],[5,"getspent",E,E,N,N],[5,"getspnam",E,E,N,N],[5,"shm_open",E,E,N,N],[5,"shmget",E,E,N,N],[5,"shmat",E,E,N,N],[5,"shmdt",E,E,N,N],[5,"shmctl",E,E,N,N],[5,"ftok",E,E,N,N],[5,"semget",E,E,N,N],[5,"semop",E,E,N,N],[5,"semctl",E,E,N,N],[5,"msgctl",E,E,N,N],[5,"msgget",E,E,N,N],[5,"msgrcv",E,E,N,N],[5,"msgsnd",E,E,N,N],[5,"mprotect",E,E,N,N],[5,"__errno_location",E,E,N,N],[5,"fopen64",E,E,N,N],[5,"freopen64",E,E,N,N],[5,"tmpfile64",E,E,N,N],[5,"fgetpos64",E,E,N,N],[5,"fsetpos64",E,E,N,N],[5,"fseeko64",E,E,N,N],[5,"ftello64",E,E,N,N],[5,"fallocate",E,E,N,N],[5,"fallocate64",E,E,N,N],[5,"posix_fallocate",E,E,N,N],[5,"posix_fallocate64",E,E,N,N],[5,"readahead",E,E,N,N],[5,"getxattr",E,E,N,N],[5,"lgetxattr",E,E,N,N],[5,"fgetxattr",E,E,N,N],[5,"setxattr",E,E,N,N],[5,"lsetxattr",E,E,N,N],[5,"fsetxattr",E,E,N,N],[5,"listxattr",E,E,N,N],[5,"llistxattr",E,E,N,N],[5,"flistxattr",E,E,N,N],[5,"removexattr",E,E,N,N],[5,"lremovexattr",E,E,N,N],[5,"fremovexattr",E,E,N,N],[5,"signalfd",E,E,N,N],[5,"timerfd_create",E,E,N,N],[5,"timerfd_gettime",E,E,N,N],[5,"timerfd_settime",E,E,N,N],[5,"pwritev",E,E,N,N],[5,"preadv",E,E,N,N],[5,"quotactl",E,E,N,N],[5,"mq_open",E,E,N,N],[5,"mq_close",E,E,N,N],[5,"mq_unlink",E,E,N,N],[5,"mq_receive",E,E,N,N],[5,"mq_send",E,E,N,N],[5,"mq_getattr",E,E,N,N],[5,"mq_setattr",E,E,N,N],[5,"epoll_pwait",E,E,N,N],[5,"dup3",E,E,N,N],[5,"mkostemp",E,E,N,N],[5,"mkostemps",E,E,N,N],[5,"sigtimedwait",E,E,N,N],[5,"sigwaitinfo",E,E,N,N],[5,"nl_langinfo_l",E,E,N,N],[5,"getnameinfo",E,E,N,N],[5,"pthread_setschedprio",E,E,N,N],[5,"getloadavg",E,E,N,N],[5,"process_vm_readv",E,E,N,N],[5,"process_vm_writev",E,E,N,N],[5,"reboot",E,E,N,N],[5,"setfsgid",E,E,N,N],[5,"setfsuid",E,E,N,N],[5,"mkfifoat",E,E,N,N],[5,R[559],E,E,N,N],[5,"if_freenameindex",E,E,N,N],[5,"sync_file_range",E,E,N,N],[5,"mremap",E,E,N,N],[5,"glob",E,E,N,N],[5,"globfree",E,E,N,N],[5,"posix_madvise",E,E,N,N],[5,"shm_unlink",E,E,N,N],[5,"seekdir",E,E,N,N],[5,"telldir",E,E,N,N],[5,"madvise",E,E,N,N],[5,"msync",E,E,N,N],[5,"remap_file_pages",E,E,N,N],[5,"recvfrom",E,E,N,N],[5,"mkstemps",E,E,N,N],[5,"futimes",E,E,N,N],[5,"nl_langinfo",E,E,N,N],[5,"getdomainname",E,E,N,N],[5,"setdomainname",E,E,N,N],[5,"vhangup",E,E,N,N],[5,"sync",E,E,N,N],[5,"syscall",E,E,N,N],[5,"sched_getaffinity",E,E,N,N],[5,"sched_setaffinity",E,E,N,N],[5,"epoll_create",E,E,N,N],[5,"epoll_create1",E,E,N,N],[5,"epoll_wait",E,E,N,N],[5,"epoll_ctl",E,E,N,N],[5,"pthread_getschedparam",E,E,N,N],[5,"unshare",E,E,N,N],[5,"umount",E,E,N,N],[5,"sched_get_priority_max",E,E,N,N],[5,"tee",E,E,N,N],[5,"settimeofday",E,E,N,N],[5,"splice",E,E,N,N],[5,"eventfd",E,E,N,N],[5,"sched_rr_get_interval",E,E,N,N],[5,"sem_timedwait",E,E,N,N],[5,"sem_getvalue",E,E,N,N],[5,"sched_setparam",E,E,N,N],[5,"setns",E,E,N,N],[5,"swapoff",E,E,N,N],[5,"vmsplice",E,E,N,N],[5,"mount",E,E,N,N],[5,"personality",E,E,N,N],[5,"prctl",E,E,N,N],[5,"sched_getparam",E,E,N,N],[5,"ppoll",E,E,N,N],[5,"pthread_mutex_timedlock",E,E,N,N],[5,"clone",E,E,N,N],[5,"sched_getscheduler",E,E,N,N],[5,"clock_nanosleep",E,E,N,N],[5,"pthread_attr_getguardsize",E,E,N,N],[5,"sethostname",E,E,N,N],[5,"sched_get_priority_min",E,E,N,N],[5,"pthread_condattr_getpshared",E,E,N,N],[5,"sysinfo",E,E,N,N],[5,"umount2",E,E,N,N],[5,"pthread_setschedparam",E,E,N,N],[5,"swapon",E,E,N,N],[5,"sched_setscheduler",E,E,N,N],[5,"sendfile",E,E,N,N],[5,"sigsuspend",E,E,N,N],[5,"getgrgid_r",E,E,N,N],[5,"sigaltstack",E,E,N,N],[5,"sem_close",E,E,N,N],[5,"getdtablesize",E,E,N,N],[5,"getgrnam_r",E,E,N,N],[5,"initgroups",E,E,N,N],[5,"pthread_sigmask",E,E,N,N],[5,"sem_open",E,E,N,N],[5,"getgrnam",E,E,N,N],[5,"pthread_cancel",E,E,N,N],[5,"pthread_kill",E,E,N,N],[5,"sem_unlink",E,E,N,N],[5,"daemon",E,E,N,N],[5,"getpwnam_r",E,E,N,N],[5,"getpwuid_r",E,E,N,N],[5,"sigwait",E,E,N,N],[5,"pthread_atfork",E,E,N,N],[5,"getgrgid",E,E,N,N],[5,"getgrouplist",E,E,N,N],[5,"pthread_mutexattr_getpshared",E,E,N,N],[5,"popen",E,E,N,N],[5,"faccessat",E,E,N,N],[5,"pthread_create",E,E,N,N],[5,"dl_iterate_phdr",E,E,N,N],[5,"setmntent",E,E,N,N],[5,"getmntent",E,E,N,N],[5,"addmntent",E,E,N,N],[5,"endmntent",E,E,N,N],[5,"hasmntopt",E,E,N,N],[5,"posix_spawn",E,E,N,N],[5,"posix_spawnp",E,E,N,N],[5,"posix_spawnattr_init",E,E,N,N],[5,"posix_spawnattr_destroy",E,E,N,N],[5,"posix_spawnattr_getsigdefault",E,E,N,N],[5,"posix_spawnattr_setsigdefault",E,E,N,N],[5,"posix_spawnattr_getsigmask",E,E,N,N],[5,"posix_spawnattr_setsigmask",E,E,N,N],[5,"posix_spawnattr_getflags",E,E,N,N],[5,"posix_spawnattr_setflags",E,E,N,N],[5,"posix_spawnattr_getpgroup",E,E,N,N],[5,"posix_spawnattr_setpgroup",E,E,N,N],[5,"posix_spawnattr_getschedpolicy",E,E,N,N],[5,"posix_spawnattr_setschedpolicy",E,E,N,N],[5,"posix_spawnattr_getschedparam",E,E,N,N],[5,"posix_spawnattr_setschedparam",E,E,N,N],[5,"posix_spawn_file_actions_init",E,E,N,N],[5,"posix_spawn_file_actions_destroy",E,E,N,N],[5,"posix_spawn_file_actions_addopen",E,E,N,N],[5,"posix_spawn_file_actions_addclose",E,E,N,N],[5,"posix_spawn_file_actions_adddup2",E,E,N,N],[5,"fread_unlocked",E,E,N,N],[5,"inotify_rm_watch",E,E,N,N],[5,"inotify_init",E,E,N,N],[5,"inotify_init1",E,E,N,N],[5,"inotify_add_watch",E,E,N,N],[5,"sendmmsg",E,E,N,N],[5,"recvmmsg",E,E,N,N],[5,"getrlimit64",E,E,N,N],[5,"setrlimit64",E,E,N,N],[5,"getrlimit",E,E,N,N],[5,"setrlimit",E,E,N,N],[5,"prlimit",E,E,N,N],[5,"prlimit64",E,E,N,N],[5,"utmpxname",E,E,N,N],[5,"getutxent",E,E,N,N],[5,"getutxid",E,E,N,N],[5,"getutxline",E,E,N,N],[5,"pututxline",E,E,N,N],[5,"setutxent",E,E,N,N],[5,"endutxent",E,E,N,N],[5,"getpt",E,E,N,N],[5,"mallopt",E,E,N,N],[5,"gettimeofday",E,E,N,N],[5,"statx",E,E,N,N],[5,"ioctl",E,E,N,N],[5,"backtrace",E,E,N,N],[5,"glob64",E,E,N,N],[5,"globfree64",E,E,N,N],[5,"ptrace",E,E,N,N],[5,"pthread_attr_getaffinity_np",E,E,N,N],[5,"pthread_attr_setaffinity_np",E,E,N,N],[5,"getpriority",E,E,N,N],[5,"setpriority",E,E,N,N],[5,"pthread_getaffinity_np",E,E,N,N],[5,"pthread_setaffinity_np",E,E,N,N],[5,"pthread_rwlockattr_getkind_np",E,E,N,N],[5,"pthread_rwlockattr_setkind_np",E,E,N,N],[5,"sched_getcpu",E,E,N,N],[5,R[602],E,E,N,N],[5,"malloc_usable_size",E,E,N,N],[5,"getauxval",E,E,N,N],[5,"getpwent_r",E,E,N,N],[5,"getgrent_r",E,E,N,N],[5,"getcontext",E,E,N,N],[5,"setcontext",E,E,N,N],[5,"makecontext",E,E,N,N],[5,"swapcontext",E,E,N,N],[5,"iopl",E,E,N,N],[5,"ioperm",E,E,N,N],[5,"sysctl",E,E,N,N],[11,"si_addr",E,E,94,[[["self"]]]],[6,"int8_t",E,E,N,N],[6,"int16_t",E,E,N,N],[6,"int32_t",E,E,N,N],[6,"int64_t",E,E,N,N],[6,"uint8_t",E,E,N,N],[6,"uint16_t",E,E,N,N],[6,"uint32_t",E,E,N,N],[6,"uint64_t",E,E,N,N],[6,"c_schar",E,E,N,N],[6,"c_uchar",E,E,N,N],[6,"c_short",E,E,N,N],[6,"c_ushort",E,E,N,N],[6,"c_int",E,E,N,N],[6,"c_uint",E,E,N,N],[6,"c_float",E,E,N,N],[6,"c_double",E,E,N,N],[6,"c_longlong",E,E,N,N],[6,"c_ulonglong",E,E,N,N],[6,"intmax_t",E,E,N,N],[6,"uintmax_t",E,E,N,N],[6,"size_t",E,E,N,N],[6,"ptrdiff_t",E,E,N,N],[6,"intptr_t",E,E,N,N],[6,"uintptr_t",E,E,N,N],[6,"ssize_t",E,E,N,N],[6,"pid_t",E,E,N,N],[6,"uid_t",E,E,N,N],[6,"gid_t",E,E,N,N],[6,"in_addr_t",E,E,N,N],[6,"in_port_t",E,E,N,N],[6,"sighandler_t",E,E,N,N],[6,"cc_t",E,E,N,N],[6,"locale_t",E,E,N,N],[6,"sa_family_t",E,E,N,N],[6,"speed_t",E,E,N,N],[6,"tcflag_t",E,E,N,N],[6,"clockid_t",E,E,N,N],[6,"key_t",E,E,N,N],[6,"id_t",E,E,N,N],[6,"useconds_t",E,E,N,N],[6,"dev_t",E,E,N,N],[6,"socklen_t",E,E,N,N],[6,"mode_t",E,E,N,N],[6,"ino64_t",E,E,N,N],[6,"off64_t",E,E,N,N],[6,"blkcnt64_t",E,E,N,N],[6,"rlim64_t",E,E,N,N],[6,"mqd_t",E,E,N,N],[6,"nfds_t",E,E,N,N],[6,"nl_item",E,E,N,N],[6,"idtype_t",E,E,N,N],[6,"loff_t",E,E,N,N],[6,"pthread_key_t",E,E,N,N],[6,"__u8",E,E,N,N],[6,"__u16",E,E,N,N],[6,"__s16",E,E,N,N],[6,"__u32",E,E,N,N],[6,"__s32",E,E,N,N],[6,"Elf32_Half",E,E,N,N],[6,"Elf32_Word",E,E,N,N],[6,"Elf32_Off",E,E,N,N],[6,"Elf32_Addr",E,E,N,N],[6,"Elf64_Half",E,E,N,N],[6,"Elf64_Word",E,E,N,N],[6,"Elf64_Off",E,E,N,N],[6,"Elf64_Addr",E,E,N,N],[6,"Elf64_Xword",E,E,N,N],[6,"Elf64_Sxword",E,E,N,N],[6,"Elf32_Section",E,E,N,N],[6,"Elf64_Section",E,E,N,N],[6,"pthread_t",E,E,N,N],[6,"__priority_which_t",E,E,N,N],[6,"__rlimit_resource_t",E,E,N,N],[6,"clock_t",E,E,N,N],[6,"time_t",E,E,N,N],[6,"ino_t",E,E,N,N],[6,"off_t",E,E,N,N],[6,"blkcnt_t",E,E,N,N],[6,"__fsword_t",E,E,N,N],[6,"shmatt_t",E,E,N,N],[6,"msgqnum_t",E,E,N,N],[6,"msglen_t",E,E,N,N],[6,"fsblkcnt_t",E,E,N,N],[6,"fsfilcnt_t",E,E,N,N],[6,"rlim_t",E,E,N,N],[6,"c_char",E,E,N,N],[6,"wchar_t",E,E,N,N],[6,"nlink_t",E,E,N,N],[6,"blksize_t",E,E,N,N],[6,"greg_t",E,E,N,N],[6,"suseconds_t",E,E,N,N],[6,"__u64",E,E,N,N],[6,"c_long",E,E,N,N],[6,"c_ulong",E,E,N,N],[17,"INT_MIN",E,E,N,N],[17,"INT_MAX",E,E,N,N],[17,"SIG_DFL",E,E,N,N],[17,"SIG_IGN",E,E,N,N],[17,"SIG_ERR",E,E,N,N],[17,"DT_UNKNOWN",E,E,N,N],[17,"DT_FIFO",E,E,N,N],[17,"DT_CHR",E,E,N,N],[17,"DT_DIR",E,E,N,N],[17,"DT_BLK",E,E,N,N],[17,"DT_REG",E,E,N,N],[17,"DT_LNK",E,E,N,N],[17,"DT_SOCK",E,E,N,N],[17,"FD_CLOEXEC",E,E,N,N],[17,"USRQUOTA",E,E,N,N],[17,"GRPQUOTA",E,E,N,N],[17,"SIGIOT",E,E,N,N],[17,"S_ISUID",E,E,N,N],[17,"S_ISGID",E,E,N,N],[17,"S_ISVTX",E,E,N,N],[17,"IF_NAMESIZE",E,E,N,N],[17,"IFNAMSIZ",E,E,N,N],[17,"LOG_EMERG",E,E,N,N],[17,"LOG_ALERT",E,E,N,N],[17,"LOG_CRIT",E,E,N,N],[17,"LOG_ERR",E,E,N,N],[17,"LOG_WARNING",E,E,N,N],[17,"LOG_NOTICE",E,E,N,N],[17,"LOG_INFO",E,E,N,N],[17,"LOG_DEBUG",E,E,N,N],[17,"LOG_KERN",E,E,N,N],[17,"LOG_USER",E,E,N,N],[17,"LOG_MAIL",E,E,N,N],[17,"LOG_DAEMON",E,E,N,N],[17,"LOG_AUTH",E,E,N,N],[17,"LOG_SYSLOG",E,E,N,N],[17,"LOG_LPR",E,E,N,N],[17,"LOG_NEWS",E,E,N,N],[17,"LOG_UUCP",E,E,N,N],[17,"LOG_LOCAL0",E,E,N,N],[17,"LOG_LOCAL1",E,E,N,N],[17,"LOG_LOCAL2",E,E,N,N],[17,"LOG_LOCAL3",E,E,N,N],[17,"LOG_LOCAL4",E,E,N,N],[17,"LOG_LOCAL5",E,E,N,N],[17,"LOG_LOCAL6",E,E,N,N],[17,"LOG_LOCAL7",E,E,N,N],[17,"LOG_PID",E,E,N,N],[17,"LOG_CONS",E,E,N,N],[17,"LOG_ODELAY",E,E,N,N],[17,"LOG_NDELAY",E,E,N,N],[17,"LOG_NOWAIT",E,E,N,N],[17,"LOG_PRIMASK",E,E,N,N],[17,"LOG_FACMASK",E,E,N,N],[17,"PRIO_PROCESS",E,E,N,N],[17,"PRIO_PGRP",E,E,N,N],[17,"PRIO_USER",E,E,N,N],[17,"PRIO_MIN",E,E,N,N],[17,"PRIO_MAX",E,E,N,N],[17,"IPPROTO_ICMP",E,E,N,N],[17,"IPPROTO_ICMPV6",E,E,N,N],[17,"IPPROTO_TCP",E,E,N,N],[17,"IPPROTO_UDP",E,E,N,N],[17,"IPPROTO_IP",E,E,N,N],[17,"IPPROTO_IPV6",E,E,N,N],[17,"INADDR_LOOPBACK",E,E,N,N],[17,"INADDR_ANY",E,E,N,N],[17,"INADDR_BROADCAST",E,E,N,N],[17,"INADDR_NONE",E,E,N,N],[17,"ARPOP_REQUEST",E,E,N,N],[17,"ARPOP_REPLY",E,E,N,N],[17,"ATF_COM",E,E,N,N],[17,"ATF_PERM",E,E,N,N],[17,"ATF_PUBL",E,E,N,N],[17,"ATF_USETRAILERS",E,E,N,N],[17,"EXIT_FAILURE",E,E,N,N],[17,"EXIT_SUCCESS",E,E,N,N],[17,"RAND_MAX",E,E,N,N],[17,"EOF",E,E,N,N],[17,"SEEK_SET",E,E,N,N],[17,"SEEK_CUR",E,E,N,N],[17,"SEEK_END",E,E,N,N],[17,"_IOFBF",E,E,N,N],[17,"_IONBF",E,E,N,N],[17,"_IOLBF",E,E,N,N],[17,"F_DUPFD",E,E,N,N],[17,"F_GETFD",E,E,N,N],[17,"F_SETFD",E,E,N,N],[17,"F_GETFL",E,E,N,N],[17,"F_SETFL",E,E,N,N],[17,"F_SETLEASE",E,E,N,N],[17,"F_GETLEASE",E,E,N,N],[17,"F_NOTIFY",E,E,N,N],[17,"F_CANCELLK",E,E,N,N],[17,"F_DUPFD_CLOEXEC",E,E,N,N],[17,"F_SETPIPE_SZ",E,E,N,N],[17,"F_GETPIPE_SZ",E,E,N,N],[17,"F_ADD_SEALS",E,E,N,N],[17,"F_GET_SEALS",E,E,N,N],[17,"F_SEAL_SEAL",E,E,N,N],[17,"F_SEAL_SHRINK",E,E,N,N],[17,"F_SEAL_GROW",E,E,N,N],[17,"F_SEAL_WRITE",E,E,N,N],[17,"SIGTRAP",E,E,N,N],[17,"PTHREAD_CREATE_JOINABLE",E,E,N,N],[17,"PTHREAD_CREATE_DETACHED",E,E,N,N],[17,"CLOCK_REALTIME",E,E,N,N],[17,"CLOCK_MONOTONIC",E,E,N,N],[17,"CLOCK_PROCESS_CPUTIME_ID",E,E,N,N],[17,"CLOCK_THREAD_CPUTIME_ID",E,E,N,N],[17,"CLOCK_MONOTONIC_RAW",E,E,N,N],[17,"CLOCK_REALTIME_COARSE",E,E,N,N],[17,"CLOCK_MONOTONIC_COARSE",E,E,N,N],[17,"CLOCK_BOOTTIME",E,E,N,N],[17,"CLOCK_REALTIME_ALARM",E,E,N,N],[17,"CLOCK_BOOTTIME_ALARM",E,E,N,N],[17,"TIMER_ABSTIME",E,E,N,N],[17,"RUSAGE_SELF",E,E,N,N],[17,"O_RDONLY",E,E,N,N],[17,"O_WRONLY",E,E,N,N],[17,"O_RDWR",E,E,N,N],[17,"SOCK_CLOEXEC",E,E,N,N],[17,"S_IFIFO",E,E,N,N],[17,"S_IFCHR",E,E,N,N],[17,"S_IFBLK",E,E,N,N],[17,"S_IFDIR",E,E,N,N],[17,"S_IFREG",E,E,N,N],[17,"S_IFLNK",E,E,N,N],[17,"S_IFSOCK",E,E,N,N],[17,"S_IFMT",E,E,N,N],[17,"S_IRWXU",E,E,N,N],[17,"S_IXUSR",E,E,N,N],[17,"S_IWUSR",E,E,N,N],[17,"S_IRUSR",E,E,N,N],[17,"S_IRWXG",E,E,N,N],[17,"S_IXGRP",E,E,N,N],[17,"S_IWGRP",E,E,N,N],[17,"S_IRGRP",E,E,N,N],[17,"S_IRWXO",E,E,N,N],[17,"S_IXOTH",E,E,N,N],[17,"S_IWOTH",E,E,N,N],[17,"S_IROTH",E,E,N,N],[17,"F_OK",E,E,N,N],[17,"R_OK",E,E,N,N],[17,"W_OK",E,E,N,N],[17,"X_OK",E,E,N,N],[17,"STDIN_FILENO",E,E,N,N],[17,"STDOUT_FILENO",E,E,N,N],[17,"STDERR_FILENO",E,E,N,N],[17,"SIGHUP",E,E,N,N],[17,"SIGINT",E,E,N,N],[17,"SIGQUIT",E,E,N,N],[17,"SIGILL",E,E,N,N],[17,"SIGABRT",E,E,N,N],[17,"SIGFPE",E,E,N,N],[17,"SIGKILL",E,E,N,N],[17,"SIGSEGV",E,E,N,N],[17,"SIGPIPE",E,E,N,N],[17,"SIGALRM",E,E,N,N],[17,"SIGTERM",E,E,N,N],[17,"PROT_NONE",E,E,N,N],[17,"PROT_READ",E,E,N,N],[17,"PROT_WRITE",E,E,N,N],[17,"PROT_EXEC",E,E,N,N],[17,"LC_CTYPE",E,E,N,N],[17,"LC_NUMERIC",E,E,N,N],[17,"LC_TIME",E,E,N,N],[17,"LC_COLLATE",E,E,N,N],[17,"LC_MONETARY",E,E,N,N],[17,"LC_MESSAGES",E,E,N,N],[17,"LC_ALL",E,E,N,N],[17,"LC_CTYPE_MASK",E,E,N,N],[17,"LC_NUMERIC_MASK",E,E,N,N],[17,"LC_TIME_MASK",E,E,N,N],[17,"LC_COLLATE_MASK",E,E,N,N],[17,"LC_MONETARY_MASK",E,E,N,N],[17,"LC_MESSAGES_MASK",E,E,N,N],[17,"MAP_FILE",E,E,N,N],[17,"MAP_SHARED",E,E,N,N],[17,"MAP_PRIVATE",E,E,N,N],[17,"MAP_FIXED",E,E,N,N],[17,"MAP_FAILED",E,E,N,N],[17,"MS_ASYNC",E,E,N,N],[17,"MS_INVALIDATE",E,E,N,N],[17,"MS_SYNC",E,E,N,N],[17,"MS_RDONLY",E,E,N,N],[17,"MS_NOSUID",E,E,N,N],[17,"MS_NODEV",E,E,N,N],[17,"MS_NOEXEC",E,E,N,N],[17,"MS_SYNCHRONOUS",E,E,N,N],[17,"MS_REMOUNT",E,E,N,N],[17,"MS_MANDLOCK",E,E,N,N],[17,"MS_DIRSYNC",E,E,N,N],[17,"MS_NOATIME",E,E,N,N],[17,"MS_NODIRATIME",E,E,N,N],[17,"MS_BIND",E,E,N,N],[17,"MS_MOVE",E,E,N,N],[17,"MS_REC",E,E,N,N],[17,"MS_SILENT",E,E,N,N],[17,"MS_POSIXACL",E,E,N,N],[17,"MS_UNBINDABLE",E,E,N,N],[17,"MS_PRIVATE",E,E,N,N],[17,"MS_SLAVE",E,E,N,N],[17,"MS_SHARED",E,E,N,N],[17,"MS_RELATIME",E,E,N,N],[17,"MS_KERNMOUNT",E,E,N,N],[17,"MS_I_VERSION",E,E,N,N],[17,"MS_STRICTATIME",E,E,N,N],[17,"MS_ACTIVE",E,E,N,N],[17,"MS_MGC_VAL",E,E,N,N],[17,"MS_MGC_MSK",E,E,N,N],[17,"EPERM",E,E,N,N],[17,"ENOENT",E,E,N,N],[17,"ESRCH",E,E,N,N],[17,"EINTR",E,E,N,N],[17,"EIO",E,E,N,N],[17,"ENXIO",E,E,N,N],[17,"E2BIG",E,E,N,N],[17,"ENOEXEC",E,E,N,N],[17,"EBADF",E,E,N,N],[17,"ECHILD",E,E,N,N],[17,"EAGAIN",E,E,N,N],[17,"ENOMEM",E,E,N,N],[17,"EACCES",E,E,N,N],[17,"EFAULT",E,E,N,N],[17,"ENOTBLK",E,E,N,N],[17,"EBUSY",E,E,N,N],[17,"EEXIST",E,E,N,N],[17,"EXDEV",E,E,N,N],[17,"ENODEV",E,E,N,N],[17,"ENOTDIR",E,E,N,N],[17,"EISDIR",E,E,N,N],[17,"EINVAL",E,E,N,N],[17,"ENFILE",E,E,N,N],[17,"EMFILE",E,E,N,N],[17,"ENOTTY",E,E,N,N],[17,"ETXTBSY",E,E,N,N],[17,"EFBIG",E,E,N,N],[17,"ENOSPC",E,E,N,N],[17,"ESPIPE",E,E,N,N],[17,"EROFS",E,E,N,N],[17,"EMLINK",E,E,N,N],[17,"EPIPE",E,E,N,N],[17,"EDOM",E,E,N,N],[17,"ERANGE",E,E,N,N],[17,"EWOULDBLOCK",E,E,N,N],[17,"SCM_RIGHTS",E,E,N,N],[17,"SCM_CREDENTIALS",E,E,N,N],[17,"PROT_GROWSDOWN",E,E,N,N],[17,"PROT_GROWSUP",E,E,N,N],[17,"MAP_TYPE",E,E,N,N],[17,"MADV_NORMAL",E,E,N,N],[17,"MADV_RANDOM",E,E,N,N],[17,"MADV_SEQUENTIAL",E,E,N,N],[17,"MADV_WILLNEED",E,E,N,N],[17,"MADV_DONTNEED",E,E,N,N],[17,"MADV_FREE",E,E,N,N],[17,"MADV_REMOVE",E,E,N,N],[17,"MADV_DONTFORK",E,E,N,N],[17,"MADV_DOFORK",E,E,N,N],[17,"MADV_MERGEABLE",E,E,N,N],[17,"MADV_UNMERGEABLE",E,E,N,N],[17,"MADV_HUGEPAGE",E,E,N,N],[17,"MADV_NOHUGEPAGE",E,E,N,N],[17,"MADV_DONTDUMP",E,E,N,N],[17,"MADV_DODUMP",E,E,N,N],[17,"MADV_HWPOISON",E,E,N,N],[17,"IFF_UP",E,E,N,N],[17,"IFF_BROADCAST",E,E,N,N],[17,"IFF_DEBUG",E,E,N,N],[17,"IFF_LOOPBACK",E,E,N,N],[17,"IFF_POINTOPOINT",E,E,N,N],[17,"IFF_NOTRAILERS",E,E,N,N],[17,"IFF_RUNNING",E,E,N,N],[17,"IFF_NOARP",E,E,N,N],[17,"IFF_PROMISC",E,E,N,N],[17,"IFF_ALLMULTI",E,E,N,N],[17,"IFF_MASTER",E,E,N,N],[17,"IFF_SLAVE",E,E,N,N],[17,"IFF_MULTICAST",E,E,N,N],[17,"IFF_PORTSEL",E,E,N,N],[17,"IFF_AUTOMEDIA",E,E,N,N],[17,"IFF_DYNAMIC",E,E,N,N],[17,"SOL_IP",E,E,N,N],[17,"SOL_TCP",E,E,N,N],[17,"SOL_UDP",E,E,N,N],[17,"SOL_IPV6",E,E,N,N],[17,"SOL_ICMPV6",E,E,N,N],[17,"SOL_RAW",E,E,N,N],[17,"SOL_DECNET",E,E,N,N],[17,"SOL_X25",E,E,N,N],[17,"SOL_PACKET",E,E,N,N],[17,"SOL_ATM",E,E,N,N],[17,"SOL_AAL",E,E,N,N],[17,"SOL_IRDA",E,E,N,N],[17,"SOL_NETBEUI",E,E,N,N],[17,"SOL_LLC",E,E,N,N],[17,"SOL_DCCP",E,E,N,N],[17,"SOL_NETLINK",E,E,N,N],[17,"SOL_TIPC",E,E,N,N],[17,"SOL_BLUETOOTH",E,E,N,N],[17,"SOL_ALG",E,E,N,N],[17,"AF_UNSPEC",E,E,N,N],[17,"AF_UNIX",E,E,N,N],[17,"AF_LOCAL",E,E,N,N],[17,"AF_INET",E,E,N,N],[17,"AF_AX25",E,E,N,N],[17,"AF_IPX",E,E,N,N],[17,"AF_APPLETALK",E,E,N,N],[17,"AF_NETROM",E,E,N,N],[17,"AF_BRIDGE",E,E,N,N],[17,"AF_ATMPVC",E,E,N,N],[17,"AF_X25",E,E,N,N],[17,"AF_INET6",E,E,N,N],[17,"AF_ROSE",E,E,N,N],[17,"AF_DECnet",E,E,N,N],[17,"AF_NETBEUI",E,E,N,N],[17,"AF_SECURITY",E,E,N,N],[17,"AF_KEY",E,E,N,N],[17,"AF_NETLINK",E,E,N,N],[17,"AF_ROUTE",E,E,N,N],[17,"AF_PACKET",E,E,N,N],[17,"AF_ASH",E,E,N,N],[17,"AF_ECONET",E,E,N,N],[17,"AF_ATMSVC",E,E,N,N],[17,"AF_RDS",E,E,N,N],[17,"AF_SNA",E,E,N,N],[17,"AF_IRDA",E,E,N,N],[17,"AF_PPPOX",E,E,N,N],[17,"AF_WANPIPE",E,E,N,N],[17,"AF_LLC",E,E,N,N],[17,"AF_CAN",E,E,N,N],[17,"AF_TIPC",E,E,N,N],[17,"AF_BLUETOOTH",E,E,N,N],[17,"AF_IUCV",E,E,N,N],[17,"AF_RXRPC",E,E,N,N],[17,"AF_ISDN",E,E,N,N],[17,"AF_PHONET",E,E,N,N],[17,"AF_IEEE802154",E,E,N,N],[17,"AF_CAIF",E,E,N,N],[17,"AF_ALG",E,E,N,N],[17,"PF_UNSPEC",E,E,N,N],[17,"PF_UNIX",E,E,N,N],[17,"PF_LOCAL",E,E,N,N],[17,"PF_INET",E,E,N,N],[17,"PF_AX25",E,E,N,N],[17,"PF_IPX",E,E,N,N],[17,"PF_APPLETALK",E,E,N,N],[17,"PF_NETROM",E,E,N,N],[17,"PF_BRIDGE",E,E,N,N],[17,"PF_ATMPVC",E,E,N,N],[17,"PF_X25",E,E,N,N],[17,"PF_INET6",E,E,N,N],[17,"PF_ROSE",E,E,N,N],[17,"PF_DECnet",E,E,N,N],[17,"PF_NETBEUI",E,E,N,N],[17,"PF_SECURITY",E,E,N,N],[17,"PF_KEY",E,E,N,N],[17,"PF_NETLINK",E,E,N,N],[17,"PF_ROUTE",E,E,N,N],[17,"PF_PACKET",E,E,N,N],[17,"PF_ASH",E,E,N,N],[17,"PF_ECONET",E,E,N,N],[17,"PF_ATMSVC",E,E,N,N],[17,"PF_RDS",E,E,N,N],[17,"PF_SNA",E,E,N,N],[17,"PF_IRDA",E,E,N,N],[17,"PF_PPPOX",E,E,N,N],[17,"PF_WANPIPE",E,E,N,N],[17,"PF_LLC",E,E,N,N],[17,"PF_CAN",E,E,N,N],[17,"PF_TIPC",E,E,N,N],[17,"PF_BLUETOOTH",E,E,N,N],[17,"PF_IUCV",E,E,N,N],[17,"PF_RXRPC",E,E,N,N],[17,"PF_ISDN",E,E,N,N],[17,"PF_PHONET",E,E,N,N],[17,"PF_IEEE802154",E,E,N,N],[17,"PF_CAIF",E,E,N,N],[17,"PF_ALG",E,E,N,N],[17,"SOMAXCONN",E,E,N,N],[17,"MSG_OOB",E,E,N,N],[17,"MSG_PEEK",E,E,N,N],[17,"MSG_DONTROUTE",E,E,N,N],[17,"MSG_CTRUNC",E,E,N,N],[17,"MSG_TRUNC",E,E,N,N],[17,"MSG_DONTWAIT",E,E,N,N],[17,"MSG_EOR",E,E,N,N],[17,"MSG_WAITALL",E,E,N,N],[17,"MSG_FIN",E,E,N,N],[17,"MSG_SYN",E,E,N,N],[17,"MSG_CONFIRM",E,E,N,N],[17,"MSG_RST",E,E,N,N],[17,"MSG_ERRQUEUE",E,E,N,N],[17,"MSG_NOSIGNAL",E,E,N,N],[17,"MSG_MORE",E,E,N,N],[17,"MSG_WAITFORONE",E,E,N,N],[17,"MSG_FASTOPEN",E,E,N,N],[17,"MSG_CMSG_CLOEXEC",E,E,N,N],[17,"SCM_TIMESTAMP",E,E,N,N],[17,"SOCK_RAW",E,E,N,N],[17,"SOCK_RDM",E,E,N,N],[17,"IP_MULTICAST_IF",E,E,N,N],[17,"IP_MULTICAST_TTL",E,E,N,N],[17,"IP_MULTICAST_LOOP",E,E,N,N],[17,"IP_TOS",E,E,N,N],[17,"IP_TTL",E,E,N,N],[17,"IP_HDRINCL",E,E,N,N],[17,"IP_PKTINFO",E,E,N,N],[17,"IP_RECVTOS",E,E,N,N],[17,"IP_ADD_MEMBERSHIP",E,E,N,N],[17,"IP_DROP_MEMBERSHIP",E,E,N,N],[17,"IP_TRANSPARENT",E,E,N,N],[17,"IPV6_UNICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_IF",E,E,N,N],[17,"IPV6_MULTICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_LOOP",E,E,N,N],[17,"IPV6_ADD_MEMBERSHIP",E,E,N,N],[17,"IPV6_DROP_MEMBERSHIP",E,E,N,N],[17,"IPV6_V6ONLY",E,E,N,N],[17,"IPV6_RECVPKTINFO",E,E,N,N],[17,"IPV6_PKTINFO",E,E,N,N],[17,"IPV6_RECVTCLASS",E,E,N,N],[17,"IPV6_TCLASS",E,E,N,N],[17,"TCP_NODELAY",E,E,N,N],[17,"TCP_MAXSEG",E,E,N,N],[17,"TCP_CORK",E,E,N,N],[17,"TCP_KEEPIDLE",E,E,N,N],[17,"TCP_KEEPINTVL",E,E,N,N],[17,"TCP_KEEPCNT",E,E,N,N],[17,"TCP_SYNCNT",E,E,N,N],[17,"TCP_LINGER2",E,E,N,N],[17,"TCP_DEFER_ACCEPT",E,E,N,N],[17,"TCP_WINDOW_CLAMP",E,E,N,N],[17,"TCP_INFO",E,E,N,N],[17,"TCP_QUICKACK",E,E,N,N],[17,"TCP_CONGESTION",E,E,N,N],[17,"SO_DEBUG",E,E,N,N],[17,"SHUT_RD",E,E,N,N],[17,"SHUT_WR",E,E,N,N],[17,"SHUT_RDWR",E,E,N,N],[17,"LOCK_SH",E,E,N,N],[17,"LOCK_EX",E,E,N,N],[17,"LOCK_NB",E,E,N,N],[17,"LOCK_UN",E,E,N,N],[17,"SS_ONSTACK",E,E,N,N],[17,"SS_DISABLE",E,E,N,N],[17,"PATH_MAX",E,E,N,N],[17,"FD_SETSIZE",E,E,N,N],[17,"EPOLLIN",E,E,N,N],[17,"EPOLLPRI",E,E,N,N],[17,"EPOLLOUT",E,E,N,N],[17,"EPOLLRDNORM",E,E,N,N],[17,"EPOLLRDBAND",E,E,N,N],[17,"EPOLLWRNORM",E,E,N,N],[17,"EPOLLWRBAND",E,E,N,N],[17,"EPOLLMSG",E,E,N,N],[17,"EPOLLERR",E,E,N,N],[17,"EPOLLHUP",E,E,N,N],[17,"EPOLLET",E,E,N,N],[17,"EPOLL_CTL_ADD",E,E,N,N],[17,"EPOLL_CTL_MOD",E,E,N,N],[17,"EPOLL_CTL_DEL",E,E,N,N],[17,"MNT_DETACH",E,E,N,N],[17,"MNT_EXPIRE",E,E,N,N],[17,"Q_GETFMT",E,E,N,N],[17,"Q_GETINFO",E,E,N,N],[17,"Q_SETINFO",E,E,N,N],[17,"QIF_BLIMITS",E,E,N,N],[17,"QIF_SPACE",E,E,N,N],[17,"QIF_ILIMITS",E,E,N,N],[17,"QIF_INODES",E,E,N,N],[17,"QIF_BTIME",E,E,N,N],[17,"QIF_ITIME",E,E,N,N],[17,"QIF_LIMITS",E,E,N,N],[17,"QIF_USAGE",E,E,N,N],[17,"QIF_TIMES",E,E,N,N],[17,"QIF_ALL",E,E,N,N],[17,"MNT_FORCE",E,E,N,N],[17,"Q_SYNC",E,E,N,N],[17,"Q_QUOTAON",E,E,N,N],[17,"Q_QUOTAOFF",E,E,N,N],[17,"Q_GETQUOTA",E,E,N,N],[17,"Q_SETQUOTA",E,E,N,N],[17,"TCIOFF",E,E,N,N],[17,"TCION",E,E,N,N],[17,"TCOOFF",E,E,N,N],[17,"TCOON",E,E,N,N],[17,"TCIFLUSH",E,E,N,N],[17,"TCOFLUSH",E,E,N,N],[17,"TCIOFLUSH",E,E,N,N],[17,"NL0",E,E,N,N],[17,"NL1",E,E,N,N],[17,"TAB0",E,E,N,N],[17,"CR0",E,E,N,N],[17,"FF0",E,E,N,N],[17,"BS0",E,E,N,N],[17,"VT0",E,E,N,N],[17,"VERASE",E,E,N,N],[17,"VKILL",E,E,N,N],[17,"VINTR",E,E,N,N],[17,"VQUIT",E,E,N,N],[17,"VLNEXT",E,E,N,N],[17,"IGNBRK",E,E,N,N],[17,"BRKINT",E,E,N,N],[17,"IGNPAR",E,E,N,N],[17,"PARMRK",E,E,N,N],[17,"INPCK",E,E,N,N],[17,"ISTRIP",E,E,N,N],[17,"INLCR",E,E,N,N],[17,"IGNCR",E,E,N,N],[17,"ICRNL",E,E,N,N],[17,"IXANY",E,E,N,N],[17,"IMAXBEL",E,E,N,N],[17,"OPOST",E,E,N,N],[17,"CS5",E,E,N,N],[17,"CRTSCTS",E,E,N,N],[17,"ECHO",E,E,N,N],[17,"OCRNL",E,E,N,N],[17,"ONOCR",E,E,N,N],[17,"ONLRET",E,E,N,N],[17,"OFILL",E,E,N,N],[17,"OFDEL",E,E,N,N],[17,"CLONE_VM",E,E,N,N],[17,"CLONE_FS",E,E,N,N],[17,"CLONE_FILES",E,E,N,N],[17,"CLONE_SIGHAND",E,E,N,N],[17,"CLONE_PTRACE",E,E,N,N],[17,"CLONE_VFORK",E,E,N,N],[17,"CLONE_PARENT",E,E,N,N],[17,"CLONE_THREAD",E,E,N,N],[17,"CLONE_NEWNS",E,E,N,N],[17,"CLONE_SYSVSEM",E,E,N,N],[17,"CLONE_SETTLS",E,E,N,N],[17,"CLONE_PARENT_SETTID",E,E,N,N],[17,"CLONE_CHILD_CLEARTID",E,E,N,N],[17,"CLONE_DETACHED",E,E,N,N],[17,"CLONE_UNTRACED",E,E,N,N],[17,"CLONE_CHILD_SETTID",E,E,N,N],[17,"CLONE_NEWUTS",E,E,N,N],[17,"CLONE_NEWIPC",E,E,N,N],[17,"CLONE_NEWUSER",E,E,N,N],[17,"CLONE_NEWPID",E,E,N,N],[17,"CLONE_NEWNET",E,E,N,N],[17,"CLONE_IO",E,E,N,N],[17,"CLONE_NEWCGROUP",E,E,N,N],[17,"WNOHANG",E,E,N,N],[17,"WUNTRACED",E,E,N,N],[17,"WSTOPPED",E,E,N,N],[17,"WEXITED",E,E,N,N],[17,"WCONTINUED",E,E,N,N],[17,"WNOWAIT",E,E,N,N],[17,"PTRACE_O_TRACESYSGOOD",E,E,N,N],[17,"PTRACE_O_TRACEFORK",E,E,N,N],[17,"PTRACE_O_TRACEVFORK",E,E,N,N],[17,"PTRACE_O_TRACECLONE",E,E,N,N],[17,"PTRACE_O_TRACEEXEC",E,E,N,N],[17,"PTRACE_O_TRACEVFORKDONE",E,E,N,N],[17,"PTRACE_O_TRACEEXIT",E,E,N,N],[17,"PTRACE_O_TRACESECCOMP",E,E,N,N],[17,"PTRACE_O_EXITKILL",E,E,N,N],[17,"PTRACE_O_SUSPEND_SECCOMP",E,E,N,N],[17,"PTRACE_O_MASK",E,E,N,N],[17,"PTRACE_EVENT_FORK",E,E,N,N],[17,"PTRACE_EVENT_VFORK",E,E,N,N],[17,"PTRACE_EVENT_CLONE",E,E,N,N],[17,"PTRACE_EVENT_EXEC",E,E,N,N],[17,"PTRACE_EVENT_VFORK_DONE",E,E,N,N],[17,"PTRACE_EVENT_EXIT",E,E,N,N],[17,"PTRACE_EVENT_SECCOMP",E,E,N,N],[17,"__WNOTHREAD",E,E,N,N],[17,"__WALL",E,E,N,N],[17,"__WCLONE",E,E,N,N],[17,"SPLICE_F_MOVE",E,E,N,N],[17,"SPLICE_F_NONBLOCK",E,E,N,N],[17,"SPLICE_F_MORE",E,E,N,N],[17,"SPLICE_F_GIFT",E,E,N,N],[17,"RTLD_LOCAL",E,E,N,N],[17,"RTLD_LAZY",E,E,N,N],[17,"POSIX_FADV_NORMAL",E,E,N,N],[17,"POSIX_FADV_RANDOM",E,E,N,N],[17,"POSIX_FADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_FADV_WILLNEED",E,E,N,N],[17,"AT_FDCWD",E,E,N,N],[17,"AT_SYMLINK_NOFOLLOW",E,E,N,N],[17,"AT_REMOVEDIR",E,E,N,N],[17,"AT_SYMLINK_FOLLOW",E,E,N,N],[17,"AT_NO_AUTOMOUNT",E,E,N,N],[17,"AT_EMPTY_PATH",E,E,N,N],[17,"LOG_CRON",E,E,N,N],[17,"LOG_AUTHPRIV",E,E,N,N],[17,"LOG_FTP",E,E,N,N],[17,"LOG_PERROR",E,E,N,N],[17,"PIPE_BUF",E,E,N,N],[17,"SI_LOAD_SHIFT",E,E,N,N],[17,"SIGEV_SIGNAL",E,E,N,N],[17,"SIGEV_NONE",E,E,N,N],[17,"SIGEV_THREAD",E,E,N,N],[17,"P_ALL",E,E,N,N],[17,"P_PID",E,E,N,N],[17,"P_PGID",E,E,N,N],[17,"UTIME_OMIT",E,E,N,N],[17,"UTIME_NOW",E,E,N,N],[17,"POLLIN",E,E,N,N],[17,"POLLPRI",E,E,N,N],[17,"POLLOUT",E,E,N,N],[17,"POLLERR",E,E,N,N],[17,"POLLHUP",E,E,N,N],[17,"POLLNVAL",E,E,N,N],[17,"POLLRDNORM",E,E,N,N],[17,"POLLRDBAND",E,E,N,N],[17,"IPTOS_LOWDELAY",E,E,N,N],[17,"IPTOS_THROUGHPUT",E,E,N,N],[17,"IPTOS_RELIABILITY",E,E,N,N],[17,"IPTOS_MINCOST",E,E,N,N],[17,"IPTOS_PREC_NETCONTROL",E,E,N,N],[17,"IPTOS_PREC_INTERNETCONTROL",E,E,N,N],[17,"IPTOS_PREC_CRITIC_ECP",E,E,N,N],[17,"IPTOS_PREC_FLASHOVERRIDE",E,E,N,N],[17,"IPTOS_PREC_FLASH",E,E,N,N],[17,"IPTOS_PREC_IMMEDIATE",E,E,N,N],[17,"IPTOS_PREC_PRIORITY",E,E,N,N],[17,"IPTOS_PREC_ROUTINE",E,E,N,N],[17,"IPTOS_ECN_MASK",E,E,N,N],[17,"IPTOS_ECN_ECT1",E,E,N,N],[17,"IPTOS_ECN_ECT0",E,E,N,N],[17,"IPTOS_ECN_CE",E,E,N,N],[17,"IPOPT_COPY",E,E,N,N],[17,"IPOPT_CLASS_MASK",E,E,N,N],[17,"IPOPT_NUMBER_MASK",E,E,N,N],[17,"IPOPT_CONTROL",E,E,N,N],[17,"IPOPT_RESERVED1",E,E,N,N],[17,"IPOPT_MEASUREMENT",E,E,N,N],[17,"IPOPT_RESERVED2",E,E,N,N],[17,"IPOPT_END",E,E,N,N],[17,"IPOPT_NOOP",E,E,N,N],[17,"IPOPT_SEC",E,E,N,N],[17,"IPOPT_LSRR",E,E,N,N],[17,"IPOPT_TIMESTAMP",E,E,N,N],[17,"IPOPT_RR",E,E,N,N],[17,"IPOPT_SID",E,E,N,N],[17,"IPOPT_SSRR",E,E,N,N],[17,"IPOPT_RA",E,E,N,N],[17,"IPVERSION",E,E,N,N],[17,"MAXTTL",E,E,N,N],[17,"IPDEFTTL",E,E,N,N],[17,"IPOPT_OPTVAL",E,E,N,N],[17,"IPOPT_OLEN",E,E,N,N],[17,"IPOPT_OFFSET",E,E,N,N],[17,"IPOPT_MINOFF",E,E,N,N],[17,"MAX_IPOPTLEN",E,E,N,N],[17,"IPOPT_NOP",E,E,N,N],[17,"IPOPT_EOL",E,E,N,N],[17,"IPOPT_TS",E,E,N,N],[17,"IPOPT_TS_TSONLY",E,E,N,N],[17,"IPOPT_TS_TSANDADDR",E,E,N,N],[17,"IPOPT_TS_PRESPEC",E,E,N,N],[17,"ARPOP_RREQUEST",E,E,N,N],[17,"ARPOP_RREPLY",E,E,N,N],[17,"ARPOP_InREQUEST",E,E,N,N],[17,"ARPOP_InREPLY",E,E,N,N],[17,"ARPOP_NAK",E,E,N,N],[17,"ATF_NETMASK",E,E,N,N],[17,"ATF_DONTPUB",E,E,N,N],[17,"ARPHRD_NETROM",E,E,N,N],[17,"ARPHRD_ETHER",E,E,N,N],[17,"ARPHRD_EETHER",E,E,N,N],[17,"ARPHRD_AX25",E,E,N,N],[17,"ARPHRD_PRONET",E,E,N,N],[17,"ARPHRD_CHAOS",E,E,N,N],[17,"ARPHRD_IEEE802",E,E,N,N],[17,"ARPHRD_ARCNET",E,E,N,N],[17,"ARPHRD_APPLETLK",E,E,N,N],[17,"ARPHRD_DLCI",E,E,N,N],[17,"ARPHRD_ATM",E,E,N,N],[17,"ARPHRD_METRICOM",E,E,N,N],[17,"ARPHRD_IEEE1394",E,E,N,N],[17,"ARPHRD_EUI64",E,E,N,N],[17,"ARPHRD_INFINIBAND",E,E,N,N],[17,"ARPHRD_SLIP",E,E,N,N],[17,"ARPHRD_CSLIP",E,E,N,N],[17,"ARPHRD_SLIP6",E,E,N,N],[17,"ARPHRD_CSLIP6",E,E,N,N],[17,"ARPHRD_RSRVD",E,E,N,N],[17,"ARPHRD_ADAPT",E,E,N,N],[17,"ARPHRD_ROSE",E,E,N,N],[17,"ARPHRD_X25",E,E,N,N],[17,"ARPHRD_HWX25",E,E,N,N],[17,"ARPHRD_PPP",E,E,N,N],[17,"ARPHRD_CISCO",E,E,N,N],[17,"ARPHRD_HDLC",E,E,N,N],[17,"ARPHRD_LAPB",E,E,N,N],[17,"ARPHRD_DDCMP",E,E,N,N],[17,"ARPHRD_RAWHDLC",E,E,N,N],[17,"ARPHRD_TUNNEL",E,E,N,N],[17,"ARPHRD_TUNNEL6",E,E,N,N],[17,"ARPHRD_FRAD",E,E,N,N],[17,"ARPHRD_SKIP",E,E,N,N],[17,"ARPHRD_LOOPBACK",E,E,N,N],[17,"ARPHRD_LOCALTLK",E,E,N,N],[17,"ARPHRD_FDDI",E,E,N,N],[17,"ARPHRD_BIF",E,E,N,N],[17,"ARPHRD_SIT",E,E,N,N],[17,"ARPHRD_IPDDP",E,E,N,N],[17,"ARPHRD_IPGRE",E,E,N,N],[17,"ARPHRD_PIMREG",E,E,N,N],[17,"ARPHRD_HIPPI",E,E,N,N],[17,"ARPHRD_ASH",E,E,N,N],[17,"ARPHRD_ECONET",E,E,N,N],[17,"ARPHRD_IRDA",E,E,N,N],[17,"ARPHRD_FCPP",E,E,N,N],[17,"ARPHRD_FCAL",E,E,N,N],[17,"ARPHRD_FCPL",E,E,N,N],[17,"ARPHRD_FCFABRIC",E,E,N,N],[17,"ARPHRD_IEEE802_TR",E,E,N,N],[17,"ARPHRD_IEEE80211",E,E,N,N],[17,"ARPHRD_IEEE80211_PRISM",E,E,N,N],[17,"ARPHRD_IEEE80211_RADIOTAP",E,E,N,N],[17,"ARPHRD_IEEE802154",E,E,N,N],[17,"ARPHRD_VOID",E,E,N,N],[17,"ARPHRD_NONE",E,E,N,N],[17,"ABDAY_1",E,E,N,N],[17,"ABDAY_2",E,E,N,N],[17,"ABDAY_3",E,E,N,N],[17,"ABDAY_4",E,E,N,N],[17,"ABDAY_5",E,E,N,N],[17,"ABDAY_6",E,E,N,N],[17,"ABDAY_7",E,E,N,N],[17,"DAY_1",E,E,N,N],[17,"DAY_2",E,E,N,N],[17,"DAY_3",E,E,N,N],[17,"DAY_4",E,E,N,N],[17,"DAY_5",E,E,N,N],[17,"DAY_6",E,E,N,N],[17,"DAY_7",E,E,N,N],[17,"ABMON_1",E,E,N,N],[17,"ABMON_2",E,E,N,N],[17,"ABMON_3",E,E,N,N],[17,"ABMON_4",E,E,N,N],[17,"ABMON_5",E,E,N,N],[17,"ABMON_6",E,E,N,N],[17,"ABMON_7",E,E,N,N],[17,"ABMON_8",E,E,N,N],[17,"ABMON_9",E,E,N,N],[17,"ABMON_10",E,E,N,N],[17,"ABMON_11",E,E,N,N],[17,"ABMON_12",E,E,N,N],[17,"MON_1",E,E,N,N],[17,"MON_2",E,E,N,N],[17,"MON_3",E,E,N,N],[17,"MON_4",E,E,N,N],[17,"MON_5",E,E,N,N],[17,"MON_6",E,E,N,N],[17,"MON_7",E,E,N,N],[17,"MON_8",E,E,N,N],[17,"MON_9",E,E,N,N],[17,"MON_10",E,E,N,N],[17,"MON_11",E,E,N,N],[17,"MON_12",E,E,N,N],[17,"AM_STR",E,E,N,N],[17,"PM_STR",E,E,N,N],[17,"D_T_FMT",E,E,N,N],[17,"D_FMT",E,E,N,N],[17,"T_FMT",E,E,N,N],[17,"T_FMT_AMPM",E,E,N,N],[17,"ERA",E,E,N,N],[17,"ERA_D_FMT",E,E,N,N],[17,"ALT_DIGITS",E,E,N,N],[17,"ERA_D_T_FMT",E,E,N,N],[17,"ERA_T_FMT",E,E,N,N],[17,"CODESET",E,E,N,N],[17,"CRNCYSTR",E,E,N,N],[17,"RUSAGE_THREAD",E,E,N,N],[17,"RUSAGE_CHILDREN",E,E,N,N],[17,"RADIXCHAR",E,E,N,N],[17,"THOUSEP",E,E,N,N],[17,"YESEXPR",E,E,N,N],[17,"NOEXPR",E,E,N,N],[17,"YESSTR",E,E,N,N],[17,"NOSTR",E,E,N,N],[17,"FILENAME_MAX",E,E,N,N],[17,"L_tmpnam",E,E,N,N],[17,"_PC_LINK_MAX",E,E,N,N],[17,"_PC_MAX_CANON",E,E,N,N],[17,"_PC_MAX_INPUT",E,E,N,N],[17,"_PC_NAME_MAX",E,E,N,N],[17,"_PC_PATH_MAX",E,E,N,N],[17,"_PC_PIPE_BUF",E,E,N,N],[17,"_PC_CHOWN_RESTRICTED",E,E,N,N],[17,"_PC_NO_TRUNC",E,E,N,N],[17,"_PC_VDISABLE",E,E,N,N],[17,"_PC_SYNC_IO",E,E,N,N],[17,"_PC_ASYNC_IO",E,E,N,N],[17,"_PC_PRIO_IO",E,E,N,N],[17,"_PC_SOCK_MAXBUF",E,E,N,N],[17,"_PC_FILESIZEBITS",E,E,N,N],[17,"_PC_REC_INCR_XFER_SIZE",E,E,N,N],[17,"_PC_REC_MAX_XFER_SIZE",E,E,N,N],[17,"_PC_REC_MIN_XFER_SIZE",E,E,N,N],[17,"_PC_REC_XFER_ALIGN",E,E,N,N],[17,"_PC_ALLOC_SIZE_MIN",E,E,N,N],[17,"_PC_SYMLINK_MAX",E,E,N,N],[17,"_PC_2_SYMLINKS",E,E,N,N],[17,"MS_NOUSER",E,E,N,N],[17,"_SC_ARG_MAX",E,E,N,N],[17,"_SC_CHILD_MAX",E,E,N,N],[17,"_SC_CLK_TCK",E,E,N,N],[17,"_SC_NGROUPS_MAX",E,E,N,N],[17,"_SC_OPEN_MAX",E,E,N,N],[17,"_SC_STREAM_MAX",E,E,N,N],[17,"_SC_TZNAME_MAX",E,E,N,N],[17,"_SC_JOB_CONTROL",E,E,N,N],[17,"_SC_SAVED_IDS",E,E,N,N],[17,"_SC_REALTIME_SIGNALS",E,E,N,N],[17,"_SC_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_TIMERS",E,E,N,N],[17,"_SC_ASYNCHRONOUS_IO",E,E,N,N],[17,"_SC_PRIORITIZED_IO",E,E,N,N],[17,"_SC_SYNCHRONIZED_IO",E,E,N,N],[17,"_SC_FSYNC",E,E,N,N],[17,"_SC_MAPPED_FILES",E,E,N,N],[17,"_SC_MEMLOCK",E,E,N,N],[17,"_SC_MEMLOCK_RANGE",E,E,N,N],[17,"_SC_MEMORY_PROTECTION",E,E,N,N],[17,"_SC_MESSAGE_PASSING",E,E,N,N],[17,"_SC_SEMAPHORES",E,E,N,N],[17,"_SC_SHARED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_AIO_LISTIO_MAX",E,E,N,N],[17,"_SC_AIO_MAX",E,E,N,N],[17,"_SC_AIO_PRIO_DELTA_MAX",E,E,N,N],[17,"_SC_DELAYTIMER_MAX",E,E,N,N],[17,"_SC_MQ_OPEN_MAX",E,E,N,N],[17,"_SC_MQ_PRIO_MAX",E,E,N,N],[17,"_SC_VERSION",E,E,N,N],[17,"_SC_PAGESIZE",E,E,N,N],[17,"_SC_PAGE_SIZE",E,E,N,N],[17,"_SC_RTSIG_MAX",E,E,N,N],[17,"_SC_SEM_NSEMS_MAX",E,E,N,N],[17,"_SC_SEM_VALUE_MAX",E,E,N,N],[17,"_SC_SIGQUEUE_MAX",E,E,N,N],[17,"_SC_TIMER_MAX",E,E,N,N],[17,"_SC_BC_BASE_MAX",E,E,N,N],[17,"_SC_BC_DIM_MAX",E,E,N,N],[17,"_SC_BC_SCALE_MAX",E,E,N,N],[17,"_SC_BC_STRING_MAX",E,E,N,N],[17,"_SC_COLL_WEIGHTS_MAX",E,E,N,N],[17,"_SC_EXPR_NEST_MAX",E,E,N,N],[17,"_SC_LINE_MAX",E,E,N,N],[17,"_SC_RE_DUP_MAX",E,E,N,N],[17,"_SC_2_VERSION",E,E,N,N],[17,"_SC_2_C_BIND",E,E,N,N],[17,"_SC_2_C_DEV",E,E,N,N],[17,"_SC_2_FORT_DEV",E,E,N,N],[17,"_SC_2_FORT_RUN",E,E,N,N],[17,"_SC_2_SW_DEV",E,E,N,N],[17,"_SC_2_LOCALEDEF",E,E,N,N],[17,"_SC_UIO_MAXIOV",E,E,N,N],[17,"_SC_IOV_MAX",E,E,N,N],[17,"_SC_THREADS",E,E,N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS",E,E,N,N],[17,"_SC_GETGR_R_SIZE_MAX",E,E,N,N],[17,"_SC_GETPW_R_SIZE_MAX",E,E,N,N],[17,"_SC_LOGIN_NAME_MAX",E,E,N,N],[17,"_SC_TTY_NAME_MAX",E,E,N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS",E,E,N,N],[17,"_SC_THREAD_KEYS_MAX",E,E,N,N],[17,"_SC_THREAD_STACK_MIN",E,E,N,N],[17,"_SC_THREAD_THREADS_MAX",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKADDR",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKSIZE",E,E,N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_THREAD_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_PRIO_PROTECT",E,E,N,N],[17,"_SC_THREAD_PROCESS_SHARED",E,E,N,N],[17,"_SC_NPROCESSORS_CONF",E,E,N,N],[17,"_SC_NPROCESSORS_ONLN",E,E,N,N],[17,"_SC_PHYS_PAGES",E,E,N,N],[17,"_SC_AVPHYS_PAGES",E,E,N,N],[17,"_SC_ATEXIT_MAX",E,E,N,N],[17,"_SC_PASS_MAX",E,E,N,N],[17,"_SC_XOPEN_VERSION",E,E,N,N],[17,"_SC_XOPEN_XCU_VERSION",E,E,N,N],[17,"_SC_XOPEN_UNIX",E,E,N,N],[17,"_SC_XOPEN_CRYPT",E,E,N,N],[17,"_SC_XOPEN_ENH_I18N",E,E,N,N],[17,"_SC_XOPEN_SHM",E,E,N,N],[17,"_SC_2_CHAR_TERM",E,E,N,N],[17,"_SC_2_UPE",E,E,N,N],[17,"_SC_XOPEN_XPG2",E,E,N,N],[17,"_SC_XOPEN_XPG3",E,E,N,N],[17,"_SC_XOPEN_XPG4",E,E,N,N],[17,"_SC_NZERO",E,E,N,N],[17,"_SC_XBS5_ILP32_OFF32",E,E,N,N],[17,"_SC_XBS5_ILP32_OFFBIG",E,E,N,N],[17,"_SC_XBS5_LP64_OFF64",E,E,N,N],[17,"_SC_XBS5_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_XOPEN_LEGACY",E,E,N,N],[17,"_SC_XOPEN_REALTIME",E,E,N,N],[17,"_SC_XOPEN_REALTIME_THREADS",E,E,N,N],[17,"_SC_ADVISORY_INFO",E,E,N,N],[17,"_SC_BARRIERS",E,E,N,N],[17,"_SC_CLOCK_SELECTION",E,E,N,N],[17,"_SC_CPUTIME",E,E,N,N],[17,"_SC_THREAD_CPUTIME",E,E,N,N],[17,"_SC_MONOTONIC_CLOCK",E,E,N,N],[17,"_SC_READER_WRITER_LOCKS",E,E,N,N],[17,"_SC_SPIN_LOCKS",E,E,N,N],[17,"_SC_REGEXP",E,E,N,N],[17,"_SC_SHELL",E,E,N,N],[17,"_SC_SPAWN",E,E,N,N],[17,"_SC_SPORADIC_SERVER",E,E,N,N],[17,"_SC_THREAD_SPORADIC_SERVER",E,E,N,N],[17,"_SC_TIMEOUTS",E,E,N,N],[17,"_SC_TYPED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_2_PBS",E,E,N,N],[17,"_SC_2_PBS_ACCOUNTING",E,E,N,N],[17,"_SC_2_PBS_LOCATE",E,E,N,N],[17,"_SC_2_PBS_MESSAGE",E,E,N,N],[17,"_SC_2_PBS_TRACK",E,E,N,N],[17,"_SC_SYMLOOP_MAX",E,E,N,N],[17,"_SC_STREAMS",E,E,N,N],[17,"_SC_2_PBS_CHECKPOINT",E,E,N,N],[17,"_SC_V6_ILP32_OFF32",E,E,N,N],[17,"_SC_V6_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V6_LP64_OFF64",E,E,N,N],[17,"_SC_V6_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_HOST_NAME_MAX",E,E,N,N],[17,"_SC_TRACE",E,E,N,N],[17,"_SC_TRACE_EVENT_FILTER",E,E,N,N],[17,"_SC_TRACE_INHERIT",E,E,N,N],[17,"_SC_TRACE_LOG",E,E,N,N],[17,"_SC_IPV6",E,E,N,N],[17,"_SC_RAW_SOCKETS",E,E,N,N],[17,"_SC_V7_ILP32_OFF32",E,E,N,N],[17,"_SC_V7_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V7_LP64_OFF64",E,E,N,N],[17,"_SC_V7_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_SS_REPL_MAX",E,E,N,N],[17,"_SC_TRACE_EVENT_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_SYS_MAX",E,E,N,N],[17,"_SC_TRACE_USER_EVENT_MAX",E,E,N,N],[17,"_SC_XOPEN_STREAMS",E,E,N,N],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT",E,E,N,N],[17,"RLIM_SAVED_MAX",E,E,N,N],[17,"RLIM_SAVED_CUR",E,E,N,N],[17,"GLOB_ERR",E,E,N,N],[17,"GLOB_MARK",E,E,N,N],[17,"GLOB_NOSORT",E,E,N,N],[17,"GLOB_DOOFFS",E,E,N,N],[17,"GLOB_NOCHECK",E,E,N,N],[17,"GLOB_APPEND",E,E,N,N],[17,"GLOB_NOESCAPE",E,E,N,N],[17,"GLOB_NOSPACE",E,E,N,N],[17,"GLOB_ABORTED",E,E,N,N],[17,"GLOB_NOMATCH",E,E,N,N],[17,"POSIX_MADV_NORMAL",E,E,N,N],[17,"POSIX_MADV_RANDOM",E,E,N,N],[17,"POSIX_MADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_MADV_WILLNEED",E,E,N,N],[17,"S_IEXEC",E,E,N,N],[17,"S_IWRITE",E,E,N,N],[17,"S_IREAD",E,E,N,N],[17,"F_LOCK",E,E,N,N],[17,"F_TEST",E,E,N,N],[17,"F_TLOCK",E,E,N,N],[17,"F_ULOCK",E,E,N,N],[17,"F_SEAL_FUTURE_WRITE",E,E,N,N],[17,"IFF_LOWER_UP",E,E,N,N],[17,"IFF_DORMANT",E,E,N,N],[17,"IFF_ECHO",E,E,N,N],[17,"IFA_UNSPEC",E,E,N,N],[17,"IFA_ADDRESS",E,E,N,N],[17,"IFA_LOCAL",E,E,N,N],[17,"IFA_LABEL",E,E,N,N],[17,"IFA_BROADCAST",E,E,N,N],[17,"IFA_ANYCAST",E,E,N,N],[17,"IFA_CACHEINFO",E,E,N,N],[17,"IFA_MULTICAST",E,E,N,N],[17,"IFA_F_SECONDARY",E,E,N,N],[17,"IFA_F_TEMPORARY",E,E,N,N],[17,"IFA_F_NODAD",E,E,N,N],[17,"IFA_F_OPTIMISTIC",E,E,N,N],[17,"IFA_F_DADFAILED",E,E,N,N],[17,"IFA_F_HOMEADDRESS",E,E,N,N],[17,"IFA_F_DEPRECATED",E,E,N,N],[17,"IFA_F_TENTATIVE",E,E,N,N],[17,"IFA_F_PERMANENT",E,E,N,N],[17,"IFLA_UNSPEC",E,E,N,N],[17,"IFLA_ADDRESS",E,E,N,N],[17,"IFLA_BROADCAST",E,E,N,N],[17,"IFLA_IFNAME",E,E,N,N],[17,"IFLA_MTU",E,E,N,N],[17,"IFLA_LINK",E,E,N,N],[17,"IFLA_QDISC",E,E,N,N],[17,"IFLA_STATS",E,E,N,N],[17,"IFF_TUN",E,E,N,N],[17,"IFF_TAP",E,E,N,N],[17,"IFF_NO_PI",E,E,N,N],[17,"TUN_READQ_SIZE",E,E,N,N],[17,"TUN_TUN_DEV",E,E,N,N],[17,"TUN_TAP_DEV",E,E,N,N],[17,"TUN_TYPE_MASK",E,E,N,N],[17,"IFF_ONE_QUEUE",E,E,N,N],[17,"IFF_VNET_HDR",E,E,N,N],[17,"IFF_TUN_EXCL",E,E,N,N],[17,"IFF_MULTI_QUEUE",E,E,N,N],[17,"IFF_ATTACH_QUEUE",E,E,N,N],[17,"IFF_DETACH_QUEUE",E,E,N,N],[17,"IFF_PERSIST",E,E,N,N],[17,"IFF_NOFILTER",E,E,N,N],[17,"ST_RDONLY",E,E,N,N],[17,"ST_NOSUID",E,E,N,N],[17,"ST_NODEV",E,E,N,N],[17,"ST_NOEXEC",E,E,N,N],[17,"ST_SYNCHRONOUS",E,E,N,N],[17,"ST_MANDLOCK",E,E,N,N],[17,"ST_WRITE",E,E,N,N],[17,"ST_APPEND",E,E,N,N],[17,"ST_IMMUTABLE",E,E,N,N],[17,"ST_NOATIME",E,E,N,N],[17,"ST_NODIRATIME",E,E,N,N],[17,"RTLD_NEXT",E,E,N,N],[17,"RTLD_DEFAULT",E,E,N,N],[17,"RTLD_NODELETE",E,E,N,N],[17,"RTLD_NOW",E,E,N,N],[17,"TCP_MD5SIG",E,E,N,N],[17,"PTHREAD_MUTEX_INITIALIZER",E,E,N,N],[17,"PTHREAD_COND_INITIALIZER",E,E,N,N],[17,"PTHREAD_RWLOCK_INITIALIZER",E,E,N,N],[17,"PTHREAD_MUTEX_NORMAL",E,E,N,N],[17,"PTHREAD_MUTEX_RECURSIVE",E,E,N,N],[17,"PTHREAD_MUTEX_ERRORCHECK",E,E,N,N],[17,"PTHREAD_MUTEX_DEFAULT",E,E,N,N],[17,"PTHREAD_PROCESS_PRIVATE",E,E,N,N],[17,"PTHREAD_PROCESS_SHARED",E,E,N,N],[17,"__SIZEOF_PTHREAD_COND_T",E,E,N,N],[17,"RENAME_NOREPLACE",E,E,N,N],[17,"RENAME_EXCHANGE",E,E,N,N],[17,"RENAME_WHITEOUT",E,E,N,N],[17,"SCHED_OTHER",E,E,N,N],[17,"SCHED_FIFO",E,E,N,N],[17,"SCHED_RR",E,E,N,N],[17,"SCHED_BATCH",E,E,N,N],[17,"SCHED_IDLE",E,E,N,N],[17,"IPPROTO_HOPOPTS",E,"Hop-by-hop option header",N,N],[17,"IPPROTO_IGMP",E,"group mgmt protocol",N,N],[17,"IPPROTO_IPIP",E,"for compatibility",N,N],[17,"IPPROTO_EGP",E,"exterior gateway protocol",N,N],[17,"IPPROTO_PUP",E,"pup",N,N],[17,"IPPROTO_IDP",E,"xns idp",N,N],[17,"IPPROTO_TP",E,"tp-4 w/ class negotiation",N,N],[17,"IPPROTO_DCCP",E,"DCCP",N,N],[17,"IPPROTO_ROUTING",E,"IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT",E,"IP6 fragmentation header",N,N],[17,"IPPROTO_RSVP",E,"resource reservation",N,N],[17,"IPPROTO_GRE",E,"General Routing Encap.",N,N],[17,"IPPROTO_ESP",E,"IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH",E,"IP6 Auth Header",N,N],[17,"IPPROTO_NONE",E,"IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS",E,"IP6 destination option",N,N],[17,"IPPROTO_MTP",E,E,N,N],[17,"IPPROTO_BEETPH",E,E,N,N],[17,"IPPROTO_ENCAP",E,"encapsulation header",N,N],[17,"IPPROTO_PIM",E,"Protocol indep. multicast",N,N],[17,"IPPROTO_COMP",E,"IP Payload Comp. Protocol",N,N],[17,"IPPROTO_SCTP",E,"SCTP",N,N],[17,"IPPROTO_MH",E,E,N,N],[17,"IPPROTO_UDPLITE",E,E,N,N],[17,"IPPROTO_MPLS",E,E,N,N],[17,"IPPROTO_RAW",E,"raw IP packet",N,N],[17,"IPPROTO_MAX",E,E,N,N],[17,"AF_IB",E,E,N,N],[17,"AF_MPLS",E,E,N,N],[17,"AF_NFC",E,E,N,N],[17,"AF_VSOCK",E,E,N,N],[17,"AF_XDP",E,E,N,N],[17,"PF_IB",E,E,N,N],[17,"PF_MPLS",E,E,N,N],[17,"PF_NFC",E,E,N,N],[17,"PF_VSOCK",E,E,N,N],[17,"PF_XDP",E,E,N,N],[17,"IPC_PRIVATE",E,E,N,N],[17,"IPC_CREAT",E,E,N,N],[17,"IPC_EXCL",E,E,N,N],[17,"IPC_NOWAIT",E,E,N,N],[17,"IPC_RMID",E,E,N,N],[17,"IPC_SET",E,E,N,N],[17,"IPC_STAT",E,E,N,N],[17,"IPC_INFO",E,E,N,N],[17,"MSG_STAT",E,E,N,N],[17,"MSG_INFO",E,E,N,N],[17,"MSG_NOERROR",E,E,N,N],[17,"MSG_EXCEPT",E,E,N,N],[17,"MSG_COPY",E,E,N,N],[17,"SHM_R",E,E,N,N],[17,"SHM_W",E,E,N,N],[17,"SHM_RDONLY",E,E,N,N],[17,"SHM_RND",E,E,N,N],[17,"SHM_REMAP",E,E,N,N],[17,"SHM_EXEC",E,E,N,N],[17,"SHM_LOCK",E,E,N,N],[17,"SHM_UNLOCK",E,E,N,N],[17,"SHM_HUGETLB",E,E,N,N],[17,"SHM_NORESERVE",E,E,N,N],[17,"EPOLLRDHUP",E,E,N,N],[17,"EPOLLEXCLUSIVE",E,E,N,N],[17,"EPOLLONESHOT",E,E,N,N],[17,"QFMT_VFS_OLD",E,E,N,N],[17,"QFMT_VFS_V0",E,E,N,N],[17,"QFMT_VFS_V1",E,E,N,N],[17,"EFD_SEMAPHORE",E,E,N,N],[17,"LOG_NFACILITIES",E,E,N,N],[17,"SEM_FAILED",E,E,N,N],[17,"RB_AUTOBOOT",E,E,N,N],[17,"RB_HALT_SYSTEM",E,E,N,N],[17,"RB_ENABLE_CAD",E,E,N,N],[17,"RB_DISABLE_CAD",E,E,N,N],[17,"RB_POWER_OFF",E,E,N,N],[17,"RB_SW_SUSPEND",E,E,N,N],[17,"RB_KEXEC",E,E,N,N],[17,"AI_PASSIVE",E,E,N,N],[17,"AI_CANONNAME",E,E,N,N],[17,"AI_NUMERICHOST",E,E,N,N],[17,"AI_V4MAPPED",E,E,N,N],[17,"AI_ALL",E,E,N,N],[17,"AI_ADDRCONFIG",E,E,N,N],[17,"AI_NUMERICSERV",E,E,N,N],[17,"EAI_BADFLAGS",E,E,N,N],[17,"EAI_NONAME",E,E,N,N],[17,"EAI_AGAIN",E,E,N,N],[17,"EAI_FAIL",E,E,N,N],[17,"EAI_NODATA",E,E,N,N],[17,"EAI_FAMILY",E,E,N,N],[17,"EAI_SOCKTYPE",E,E,N,N],[17,"EAI_SERVICE",E,E,N,N],[17,"EAI_MEMORY",E,E,N,N],[17,"EAI_SYSTEM",E,E,N,N],[17,"EAI_OVERFLOW",E,E,N,N],[17,"NI_NUMERICHOST",E,E,N,N],[17,"NI_NUMERICSERV",E,E,N,N],[17,"NI_NOFQDN",E,E,N,N],[17,"NI_NAMEREQD",E,E,N,N],[17,"NI_DGRAM",E,E,N,N],[17,"SYNC_FILE_RANGE_WAIT_BEFORE",E,E,N,N],[17,"SYNC_FILE_RANGE_WRITE",E,E,N,N],[17,"SYNC_FILE_RANGE_WAIT_AFTER",E,E,N,N],[17,"AIO_CANCELED",E,E,N,N],[17,"AIO_NOTCANCELED",E,E,N,N],[17,"AIO_ALLDONE",E,E,N,N],[17,"LIO_READ",E,E,N,N],[17,"LIO_WRITE",E,E,N,N],[17,"LIO_NOP",E,E,N,N],[17,"LIO_WAIT",E,E,N,N],[17,"LIO_NOWAIT",E,E,N,N],[17,"MREMAP_MAYMOVE",E,E,N,N],[17,"MREMAP_FIXED",E,E,N,N],[17,"PR_SET_PDEATHSIG",E,E,N,N],[17,"PR_GET_PDEATHSIG",E,E,N,N],[17,"PR_GET_DUMPABLE",E,E,N,N],[17,"PR_SET_DUMPABLE",E,E,N,N],[17,"PR_GET_UNALIGN",E,E,N,N],[17,"PR_SET_UNALIGN",E,E,N,N],[17,"PR_UNALIGN_NOPRINT",E,E,N,N],[17,"PR_UNALIGN_SIGBUS",E,E,N,N],[17,"PR_GET_KEEPCAPS",E,E,N,N],[17,"PR_SET_KEEPCAPS",E,E,N,N],[17,"PR_GET_FPEMU",E,E,N,N],[17,"PR_SET_FPEMU",E,E,N,N],[17,"PR_FPEMU_NOPRINT",E,E,N,N],[17,"PR_FPEMU_SIGFPE",E,E,N,N],[17,"PR_GET_FPEXC",E,E,N,N],[17,"PR_SET_FPEXC",E,E,N,N],[17,"PR_FP_EXC_SW_ENABLE",E,E,N,N],[17,"PR_FP_EXC_DIV",E,E,N,N],[17,"PR_FP_EXC_OVF",E,E,N,N],[17,"PR_FP_EXC_UND",E,E,N,N],[17,"PR_FP_EXC_RES",E,E,N,N],[17,"PR_FP_EXC_INV",E,E,N,N],[17,"PR_FP_EXC_DISABLED",E,E,N,N],[17,"PR_FP_EXC_NONRECOV",E,E,N,N],[17,"PR_FP_EXC_ASYNC",E,E,N,N],[17,"PR_FP_EXC_PRECISE",E,E,N,N],[17,"PR_GET_TIMING",E,E,N,N],[17,"PR_SET_TIMING",E,E,N,N],[17,"PR_TIMING_STATISTICAL",E,E,N,N],[17,"PR_TIMING_TIMESTAMP",E,E,N,N],[17,"PR_SET_NAME",E,E,N,N],[17,"PR_GET_NAME",E,E,N,N],[17,"PR_GET_ENDIAN",E,E,N,N],[17,"PR_SET_ENDIAN",E,E,N,N],[17,"PR_ENDIAN_BIG",E,E,N,N],[17,"PR_ENDIAN_LITTLE",E,E,N,N],[17,"PR_ENDIAN_PPC_LITTLE",E,E,N,N],[17,"PR_GET_SECCOMP",E,E,N,N],[17,"PR_SET_SECCOMP",E,E,N,N],[17,"PR_CAPBSET_READ",E,E,N,N],[17,"PR_CAPBSET_DROP",E,E,N,N],[17,"PR_GET_TSC",E,E,N,N],[17,"PR_SET_TSC",E,E,N,N],[17,"PR_TSC_ENABLE",E,E,N,N],[17,"PR_TSC_SIGSEGV",E,E,N,N],[17,"PR_GET_SECUREBITS",E,E,N,N],[17,"PR_SET_SECUREBITS",E,E,N,N],[17,"PR_SET_TIMERSLACK",E,E,N,N],[17,"PR_GET_TIMERSLACK",E,E,N,N],[17,"PR_TASK_PERF_EVENTS_DISABLE",E,E,N,N],[17,"PR_TASK_PERF_EVENTS_ENABLE",E,E,N,N],[17,"PR_MCE_KILL",E,E,N,N],[17,"PR_MCE_KILL_CLEAR",E,E,N,N],[17,"PR_MCE_KILL_SET",E,E,N,N],[17,"PR_MCE_KILL_LATE",E,E,N,N],[17,"PR_MCE_KILL_EARLY",E,E,N,N],[17,"PR_MCE_KILL_DEFAULT",E,E,N,N],[17,"PR_MCE_KILL_GET",E,E,N,N],[17,"PR_SET_MM",E,E,N,N],[17,"PR_SET_MM_START_CODE",E,E,N,N],[17,"PR_SET_MM_END_CODE",E,E,N,N],[17,"PR_SET_MM_START_DATA",E,E,N,N],[17,"PR_SET_MM_END_DATA",E,E,N,N],[17,"PR_SET_MM_START_STACK",E,E,N,N],[17,"PR_SET_MM_START_BRK",E,E,N,N],[17,"PR_SET_MM_BRK",E,E,N,N],[17,"PR_SET_MM_ARG_START",E,E,N,N],[17,"PR_SET_MM_ARG_END",E,E,N,N],[17,"PR_SET_MM_ENV_START",E,E,N,N],[17,"PR_SET_MM_ENV_END",E,E,N,N],[17,"PR_SET_MM_AUXV",E,E,N,N],[17,"PR_SET_MM_EXE_FILE",E,E,N,N],[17,"PR_SET_MM_MAP",E,E,N,N],[17,"PR_SET_MM_MAP_SIZE",E,E,N,N],[17,"PR_SET_PTRACER",E,E,N,N],[17,"PR_SET_CHILD_SUBREAPER",E,E,N,N],[17,"PR_GET_CHILD_SUBREAPER",E,E,N,N],[17,"PR_SET_NO_NEW_PRIVS",E,E,N,N],[17,"PR_GET_NO_NEW_PRIVS",E,E,N,N],[17,"PR_GET_TID_ADDRESS",E,E,N,N],[17,"PR_SET_THP_DISABLE",E,E,N,N],[17,"PR_GET_THP_DISABLE",E,E,N,N],[17,"PR_MPX_ENABLE_MANAGEMENT",E,E,N,N],[17,"PR_MPX_DISABLE_MANAGEMENT",E,E,N,N],[17,"PR_SET_FP_MODE",E,E,N,N],[17,"PR_GET_FP_MODE",E,E,N,N],[17,"PR_FP_MODE_FR",E,E,N,N],[17,"PR_FP_MODE_FRE",E,E,N,N],[17,"PR_CAP_AMBIENT",E,E,N,N],[17,"PR_CAP_AMBIENT_IS_SET",E,E,N,N],[17,"PR_CAP_AMBIENT_RAISE",E,E,N,N],[17,"PR_CAP_AMBIENT_LOWER",E,E,N,N],[17,"PR_CAP_AMBIENT_CLEAR_ALL",E,E,N,N],[17,"GRND_NONBLOCK",E,E,N,N],[17,"GRND_RANDOM",E,E,N,N],[17,"SECCOMP_MODE_DISABLED",E,E,N,N],[17,"SECCOMP_MODE_STRICT",E,E,N,N],[17,"SECCOMP_MODE_FILTER",E,E,N,N],[17,"ITIMER_REAL",E,E,N,N],[17,"ITIMER_VIRTUAL",E,E,N,N],[17,"ITIMER_PROF",E,E,N,N],[17,"TFD_CLOEXEC",E,E,N,N],[17,"TFD_NONBLOCK",E,E,N,N],[17,"TFD_TIMER_ABSTIME",E,E,N,N],[17,"XATTR_CREATE",E,E,N,N],[17,"XATTR_REPLACE",E,E,N,N],[17,"_POSIX_VDISABLE",E,E,N,N],[17,"FALLOC_FL_KEEP_SIZE",E,E,N,N],[17,"FALLOC_FL_PUNCH_HOLE",E,E,N,N],[17,"FALLOC_FL_COLLAPSE_RANGE",E,E,N,N],[17,"FALLOC_FL_ZERO_RANGE",E,E,N,N],[17,"FALLOC_FL_INSERT_RANGE",E,E,N,N],[17,"FALLOC_FL_UNSHARE_RANGE",E,E,N,N],[17,"ENOATTR",E,E,N,N],[17,"SO_ORIGINAL_DST",E,E,N,N],[17,"IP_ORIGDSTADDR",E,E,N,N],[17,"IP_RECVORIGDSTADDR",E,E,N,N],[17,"IPV6_ORIGDSTADDR",E,E,N,N],[17,"IPV6_RECVORIGDSTADDR",E,E,N,N],[17,"IPV6_FLOWINFO",E,E,N,N],[17,"IPV6_FLOWLABEL_MGR",E,E,N,N],[17,"IPV6_FLOWINFO_SEND",E,E,N,N],[17,"IPV6_FLOWINFO_FLOWLABEL",E,E,N,N],[17,"IPV6_FLOWINFO_PRIORITY",E,E,N,N],[17,"IUTF8",E,E,N,N],[17,"CMSPAR",E,E,N,N],[17,"MFD_CLOEXEC",E,E,N,N],[17,"MFD_ALLOW_SEALING",E,E,N,N],[17,"MFD_HUGETLB",E,E,N,N],[17,"PT_NULL",E,E,N,N],[17,"PT_LOAD",E,E,N,N],[17,"PT_DYNAMIC",E,E,N,N],[17,"PT_INTERP",E,E,N,N],[17,"PT_NOTE",E,E,N,N],[17,"PT_SHLIB",E,E,N,N],[17,"PT_PHDR",E,E,N,N],[17,"PT_TLS",E,E,N,N],[17,"PT_NUM",E,E,N,N],[17,"PT_LOOS",E,E,N,N],[17,"PT_GNU_EH_FRAME",E,E,N,N],[17,"PT_GNU_STACK",E,E,N,N],[17,"PT_GNU_RELRO",E,E,N,N],[17,"ETH_ALEN",E,E,N,N],[17,"ETH_HLEN",E,E,N,N],[17,"ETH_ZLEN",E,E,N,N],[17,"ETH_DATA_LEN",E,E,N,N],[17,"ETH_FRAME_LEN",E,E,N,N],[17,"ETH_FCS_LEN",E,E,N,N],[17,"ETH_P_LOOP",E,E,N,N],[17,"ETH_P_PUP",E,E,N,N],[17,"ETH_P_PUPAT",E,E,N,N],[17,"ETH_P_IP",E,E,N,N],[17,"ETH_P_X25",E,E,N,N],[17,"ETH_P_ARP",E,E,N,N],[17,"ETH_P_BPQ",E,E,N,N],[17,"ETH_P_IEEEPUP",E,E,N,N],[17,"ETH_P_IEEEPUPAT",E,E,N,N],[17,"ETH_P_BATMAN",E,E,N,N],[17,"ETH_P_DEC",E,E,N,N],[17,"ETH_P_DNA_DL",E,E,N,N],[17,"ETH_P_DNA_RC",E,E,N,N],[17,"ETH_P_DNA_RT",E,E,N,N],[17,"ETH_P_LAT",E,E,N,N],[17,"ETH_P_DIAG",E,E,N,N],[17,"ETH_P_CUST",E,E,N,N],[17,"ETH_P_SCA",E,E,N,N],[17,"ETH_P_TEB",E,E,N,N],[17,"ETH_P_RARP",E,E,N,N],[17,"ETH_P_ATALK",E,E,N,N],[17,"ETH_P_AARP",E,E,N,N],[17,"ETH_P_8021Q",E,E,N,N],[17,"ETH_P_IPX",E,E,N,N],[17,"ETH_P_IPV6",E,E,N,N],[17,"ETH_P_PAUSE",E,E,N,N],[17,"ETH_P_SLOW",E,E,N,N],[17,"ETH_P_WCCP",E,E,N,N],[17,"ETH_P_MPLS_UC",E,E,N,N],[17,"ETH_P_MPLS_MC",E,E,N,N],[17,"ETH_P_ATMMPOA",E,E,N,N],[17,"ETH_P_PPP_DISC",E,E,N,N],[17,"ETH_P_PPP_SES",E,E,N,N],[17,"ETH_P_LINK_CTL",E,E,N,N],[17,"ETH_P_ATMFATE",E,E,N,N],[17,"ETH_P_PAE",E,E,N,N],[17,"ETH_P_AOE",E,E,N,N],[17,"ETH_P_8021AD",E,E,N,N],[17,"ETH_P_802_EX1",E,E,N,N],[17,"ETH_P_TIPC",E,E,N,N],[17,"ETH_P_MACSEC",E,E,N,N],[17,"ETH_P_8021AH",E,E,N,N],[17,"ETH_P_MVRP",E,E,N,N],[17,"ETH_P_1588",E,E,N,N],[17,"ETH_P_PRP",E,E,N,N],[17,"ETH_P_FCOE",E,E,N,N],[17,"ETH_P_TDLS",E,E,N,N],[17,"ETH_P_FIP",E,E,N,N],[17,"ETH_P_80221",E,E,N,N],[17,"ETH_P_LOOPBACK",E,E,N,N],[17,"ETH_P_QINQ1",E,E,N,N],[17,"ETH_P_QINQ2",E,E,N,N],[17,"ETH_P_QINQ3",E,E,N,N],[17,"ETH_P_EDSA",E,E,N,N],[17,"ETH_P_AF_IUCV",E,E,N,N],[17,"ETH_P_802_3_MIN",E,E,N,N],[17,"ETH_P_802_3",E,E,N,N],[17,"ETH_P_AX25",E,E,N,N],[17,"ETH_P_ALL",E,E,N,N],[17,"ETH_P_802_2",E,E,N,N],[17,"ETH_P_SNAP",E,E,N,N],[17,"ETH_P_DDCMP",E,E,N,N],[17,"ETH_P_WAN_PPP",E,E,N,N],[17,"ETH_P_PPP_MP",E,E,N,N],[17,"ETH_P_LOCALTALK",E,E,N,N],[17,"ETH_P_CANFD",E,E,N,N],[17,"ETH_P_PPPTALK",E,E,N,N],[17,"ETH_P_TR_802_2",E,E,N,N],[17,"ETH_P_MOBITEX",E,E,N,N],[17,"ETH_P_CONTROL",E,E,N,N],[17,"ETH_P_IRDA",E,E,N,N],[17,"ETH_P_ECONET",E,E,N,N],[17,"ETH_P_HDLC",E,E,N,N],[17,"ETH_P_ARCNET",E,E,N,N],[17,"ETH_P_DSA",E,E,N,N],[17,"ETH_P_TRAILER",E,E,N,N],[17,"ETH_P_PHONET",E,E,N,N],[17,"ETH_P_IEEE802154",E,E,N,N],[17,"ETH_P_CAIF",E,E,N,N],[17,"POSIX_SPAWN_RESETIDS",E,E,N,N],[17,"POSIX_SPAWN_SETPGROUP",E,E,N,N],[17,"POSIX_SPAWN_SETSIGDEF",E,E,N,N],[17,"POSIX_SPAWN_SETSIGMASK",E,E,N,N],[17,"POSIX_SPAWN_SETSCHEDPARAM",E,E,N,N],[17,"POSIX_SPAWN_SETSCHEDULER",E,E,N,N],[17,"NLMSG_NOOP",E,E,N,N],[17,"NLMSG_ERROR",E,E,N,N],[17,"NLMSG_DONE",E,E,N,N],[17,"NLMSG_OVERRUN",E,E,N,N],[17,"NLMSG_MIN_TYPE",E,E,N,N],[17,"GENL_NAMSIZ",E,E,N,N],[17,"GENL_MIN_ID",E,E,N,N],[17,"GENL_MAX_ID",E,E,N,N],[17,"GENL_ADMIN_PERM",E,E,N,N],[17,"GENL_CMD_CAP_DO",E,E,N,N],[17,"GENL_CMD_CAP_DUMP",E,E,N,N],[17,"GENL_CMD_CAP_HASPOL",E,E,N,N],[17,"GENL_ID_CTRL",E,E,N,N],[17,"CTRL_CMD_UNSPEC",E,E,N,N],[17,"CTRL_CMD_NEWFAMILY",E,E,N,N],[17,"CTRL_CMD_DELFAMILY",E,E,N,N],[17,"CTRL_CMD_GETFAMILY",E,E,N,N],[17,"CTRL_CMD_NEWOPS",E,E,N,N],[17,"CTRL_CMD_DELOPS",E,E,N,N],[17,"CTRL_CMD_GETOPS",E,E,N,N],[17,"CTRL_CMD_NEWMCAST_GRP",E,E,N,N],[17,"CTRL_CMD_DELMCAST_GRP",E,E,N,N],[17,"CTRL_CMD_GETMCAST_GRP",E,E,N,N],[17,"CTRL_ATTR_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_FAMILY_ID",E,E,N,N],[17,"CTRL_ATTR_FAMILY_NAME",E,E,N,N],[17,"CTRL_ATTR_VERSION",E,E,N,N],[17,"CTRL_ATTR_HDRSIZE",E,E,N,N],[17,"CTRL_ATTR_MAXATTR",E,E,N,N],[17,"CTRL_ATTR_OPS",E,E,N,N],[17,"CTRL_ATTR_MCAST_GROUPS",E,E,N,N],[17,"CTRL_ATTR_OP_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_OP_ID",E,E,N,N],[17,"CTRL_ATTR_OP_FLAGS",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_NAME",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_ID",E,E,N,N],[17,"PACKET_ADD_MEMBERSHIP",E,E,N,N],[17,"PACKET_DROP_MEMBERSHIP",E,E,N,N],[17,"PACKET_MR_MULTICAST",E,E,N,N],[17,"PACKET_MR_PROMISC",E,E,N,N],[17,"PACKET_MR_ALLMULTI",E,E,N,N],[17,"PACKET_MR_UNICAST",E,E,N,N],[17,"NF_DROP",E,E,N,N],[17,"NF_ACCEPT",E,E,N,N],[17,"NF_STOLEN",E,E,N,N],[17,"NF_QUEUE",E,E,N,N],[17,"NF_REPEAT",E,E,N,N],[17,"NF_STOP",E,E,N,N],[17,"NF_MAX_VERDICT",E,E,N,N],[17,"NF_VERDICT_MASK",E,E,N,N],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS",E,E,N,N],[17,"NF_VERDICT_QMASK",E,E,N,N],[17,"NF_VERDICT_QBITS",E,E,N,N],[17,"NF_VERDICT_BITS",E,E,N,N],[17,"NF_INET_PRE_ROUTING",E,E,N,N],[17,"NF_INET_LOCAL_IN",E,E,N,N],[17,"NF_INET_FORWARD",E,E,N,N],[17,"NF_INET_LOCAL_OUT",E,E,N,N],[17,"NF_INET_POST_ROUTING",E,E,N,N],[17,"NF_INET_NUMHOOKS",E,E,N,N],[17,"NFPROTO_UNSPEC",E,E,N,N],[17,"NFPROTO_IPV4",E,E,N,N],[17,"NFPROTO_ARP",E,E,N,N],[17,"NFPROTO_BRIDGE",E,E,N,N],[17,"NFPROTO_IPV6",E,E,N,N],[17,"NFPROTO_DECNET",E,E,N,N],[17,"NFPROTO_NUMPROTO",E,E,N,N],[17,"NF_IP_PRE_ROUTING",E,E,N,N],[17,"NF_IP_LOCAL_IN",E,E,N,N],[17,"NF_IP_FORWARD",E,E,N,N],[17,"NF_IP_LOCAL_OUT",E,E,N,N],[17,"NF_IP_POST_ROUTING",E,E,N,N],[17,"NF_IP_NUMHOOKS",E,E,N,N],[17,"NF_IP_PRI_FIRST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_DEFRAG",E,E,N,N],[17,"NF_IP_PRI_RAW",E,E,N,N],[17,"NF_IP_PRI_SELINUX_FIRST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK",E,E,N,N],[17,"NF_IP_PRI_MANGLE",E,E,N,N],[17,"NF_IP_PRI_NAT_DST",E,E,N,N],[17,"NF_IP_PRI_FILTER",E,E,N,N],[17,"NF_IP_PRI_SECURITY",E,E,N,N],[17,"NF_IP_PRI_NAT_SRC",E,E,N,N],[17,"NF_IP_PRI_SELINUX_LAST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_HELPER",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_CONFIRM",E,E,N,N],[17,"NF_IP_PRI_LAST",E,E,N,N],[17,"NF_IP6_PRE_ROUTING",E,E,N,N],[17,"NF_IP6_LOCAL_IN",E,E,N,N],[17,"NF_IP6_FORWARD",E,E,N,N],[17,"NF_IP6_LOCAL_OUT",E,E,N,N],[17,"NF_IP6_POST_ROUTING",E,E,N,N],[17,"NF_IP6_NUMHOOKS",E,E,N,N],[17,"NF_IP6_PRI_FIRST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG",E,E,N,N],[17,"NF_IP6_PRI_RAW",E,E,N,N],[17,"NF_IP6_PRI_SELINUX_FIRST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK",E,E,N,N],[17,"NF_IP6_PRI_MANGLE",E,E,N,N],[17,"NF_IP6_PRI_NAT_DST",E,E,N,N],[17,"NF_IP6_PRI_FILTER",E,E,N,N],[17,"NF_IP6_PRI_SECURITY",E,E,N,N],[17,"NF_IP6_PRI_NAT_SRC",E,E,N,N],[17,"NF_IP6_PRI_SELINUX_LAST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK_HELPER",E,E,N,N],[17,"NF_IP6_PRI_LAST",E,E,N,N],[17,"SIOCADDRT",E,E,N,N],[17,"SIOCDELRT",E,E,N,N],[17,"SIOCGIFNAME",E,E,N,N],[17,"SIOCSIFLINK",E,E,N,N],[17,"SIOCGIFCONF",E,E,N,N],[17,"SIOCGIFFLAGS",E,E,N,N],[17,"SIOCSIFFLAGS",E,E,N,N],[17,"SIOCGIFADDR",E,E,N,N],[17,"SIOCSIFADDR",E,E,N,N],[17,"SIOCGIFDSTADDR",E,E,N,N],[17,"SIOCSIFDSTADDR",E,E,N,N],[17,"SIOCGIFBRDADDR",E,E,N,N],[17,"SIOCSIFBRDADDR",E,E,N,N],[17,"SIOCGIFNETMASK",E,E,N,N],[17,"SIOCSIFNETMASK",E,E,N,N],[17,"SIOCGIFMETRIC",E,E,N,N],[17,"SIOCSIFMETRIC",E,E,N,N],[17,"SIOCGIFMEM",E,E,N,N],[17,"SIOCSIFMEM",E,E,N,N],[17,"SIOCGIFMTU",E,E,N,N],[17,"SIOCSIFMTU",E,E,N,N],[17,"SIOCSIFHWADDR",E,E,N,N],[17,"SIOCGIFENCAP",E,E,N,N],[17,"SIOCSIFENCAP",E,E,N,N],[17,"SIOCGIFHWADDR",E,E,N,N],[17,"SIOCGIFSLAVE",E,E,N,N],[17,"SIOCSIFSLAVE",E,E,N,N],[17,"SIOCADDMULTI",E,E,N,N],[17,"SIOCDELMULTI",E,E,N,N],[17,"SIOCDARP",E,E,N,N],[17,"SIOCGARP",E,E,N,N],[17,"SIOCSARP",E,E,N,N],[17,"SIOCDRARP",E,E,N,N],[17,"SIOCGRARP",E,E,N,N],[17,"SIOCSRARP",E,E,N,N],[17,"SIOCGIFMAP",E,E,N,N],[17,"SIOCSIFMAP",E,E,N,N],[17,"IPTOS_TOS_MASK",E,E,N,N],[17,"IPTOS_PREC_MASK",E,E,N,N],[17,"IPTOS_ECN_NOT_ECT",E,E,N,N],[17,"RTF_UP",E,E,N,N],[17,"RTF_GATEWAY",E,E,N,N],[17,"RTF_HOST",E,E,N,N],[17,"RTF_REINSTATE",E,E,N,N],[17,"RTF_DYNAMIC",E,E,N,N],[17,"RTF_MODIFIED",E,E,N,N],[17,"RTF_MTU",E,E,N,N],[17,"RTF_MSS",E,E,N,N],[17,"RTF_WINDOW",E,E,N,N],[17,"RTF_IRTT",E,E,N,N],[17,"RTF_REJECT",E,E,N,N],[17,"RTF_STATIC",E,E,N,N],[17,"RTF_XRESOLVE",E,E,N,N],[17,"RTF_NOFORWARD",E,E,N,N],[17,"RTF_THROW",E,E,N,N],[17,"RTF_NOPMTUDISC",E,E,N,N],[17,"RTF_DEFAULT",E,E,N,N],[17,"RTF_ALLONLINK",E,E,N,N],[17,"RTF_ADDRCONF",E,E,N,N],[17,"RTF_LINKRT",E,E,N,N],[17,"RTF_NONEXTHOP",E,E,N,N],[17,"RTF_CACHE",E,E,N,N],[17,"RTF_FLOW",E,E,N,N],[17,"RTF_POLICY",E,E,N,N],[17,"RTCF_VALVE",E,E,N,N],[17,"RTCF_MASQ",E,E,N,N],[17,"RTCF_NAT",E,E,N,N],[17,"RTCF_DOREDIRECT",E,E,N,N],[17,"RTCF_LOG",E,E,N,N],[17,"RTCF_DIRECTSRC",E,E,N,N],[17,"RTF_LOCAL",E,E,N,N],[17,"RTF_INTERFACE",E,E,N,N],[17,"RTF_MULTICAST",E,E,N,N],[17,"RTF_BROADCAST",E,E,N,N],[17,"RTF_NAT",E,E,N,N],[17,"RTF_ADDRCLASSMASK",E,E,N,N],[17,"RT_CLASS_UNSPEC",E,E,N,N],[17,"RT_CLASS_DEFAULT",E,E,N,N],[17,"RT_CLASS_MAIN",E,E,N,N],[17,"RT_CLASS_LOCAL",E,E,N,N],[17,"RT_CLASS_MAX",E,E,N,N],[17,"NUD_NONE",E,E,N,N],[17,"NUD_INCOMPLETE",E,E,N,N],[17,"NUD_REACHABLE",E,E,N,N],[17,"NUD_STALE",E,E,N,N],[17,"NUD_DELAY",E,E,N,N],[17,"NUD_PROBE",E,E,N,N],[17,"NUD_FAILED",E,E,N,N],[17,"NUD_NOARP",E,E,N,N],[17,"NUD_PERMANENT",E,E,N,N],[17,"NTF_USE",E,E,N,N],[17,"NTF_SELF",E,E,N,N],[17,"NTF_MASTER",E,E,N,N],[17,"NTF_PROXY",E,E,N,N],[17,"NTF_ROUTER",E,E,N,N],[17,"NDA_UNSPEC",E,E,N,N],[17,"NDA_DST",E,E,N,N],[17,"NDA_LLADDR",E,E,N,N],[17,"NDA_CACHEINFO",E,E,N,N],[17,"NDA_PROBES",E,E,N,N],[17,"NDA_VLAN",E,E,N,N],[17,"NDA_PORT",E,E,N,N],[17,"NDA_VNI",E,E,N,N],[17,"NDA_IFINDEX",E,E,N,N],[17,"TCA_UNSPEC",E,E,N,N],[17,"TCA_KIND",E,E,N,N],[17,"TCA_OPTIONS",E,E,N,N],[17,"TCA_STATS",E,E,N,N],[17,"TCA_XSTATS",E,E,N,N],[17,"TCA_RATE",E,E,N,N],[17,"TCA_FCNT",E,E,N,N],[17,"TCA_STATS2",E,E,N,N],[17,"TCA_STAB",E,E,N,N],[17,"RTM_F_NOTIFY",E,E,N,N],[17,"RTM_F_CLONED",E,E,N,N],[17,"RTM_F_EQUALIZE",E,E,N,N],[17,"RTM_F_PREFIX",E,E,N,N],[17,"RTA_UNSPEC",E,E,N,N],[17,"RTA_DST",E,E,N,N],[17,"RTA_SRC",E,E,N,N],[17,"RTA_IIF",E,E,N,N],[17,"RTA_OIF",E,E,N,N],[17,"RTA_GATEWAY",E,E,N,N],[17,"RTA_PRIORITY",E,E,N,N],[17,"RTA_PREFSRC",E,E,N,N],[17,"RTA_METRICS",E,E,N,N],[17,"RTA_MULTIPATH",E,E,N,N],[17,"RTA_PROTOINFO",E,E,N,N],[17,"RTA_FLOW",E,E,N,N],[17,"RTA_CACHEINFO",E,E,N,N],[17,"RTA_SESSION",E,E,N,N],[17,"RTA_MP_ALGO",E,E,N,N],[17,"RTA_TABLE",E,E,N,N],[17,"RTA_MARK",E,E,N,N],[17,"RTA_MFC_STATS",E,E,N,N],[17,"RTN_UNSPEC",E,E,N,N],[17,"RTN_UNICAST",E,E,N,N],[17,"RTN_LOCAL",E,E,N,N],[17,"RTN_BROADCAST",E,E,N,N],[17,"RTN_ANYCAST",E,E,N,N],[17,"RTN_MULTICAST",E,E,N,N],[17,"RTN_BLACKHOLE",E,E,N,N],[17,"RTN_UNREACHABLE",E,E,N,N],[17,"RTN_PROHIBIT",E,E,N,N],[17,"RTN_THROW",E,E,N,N],[17,"RTN_NAT",E,E,N,N],[17,"RTN_XRESOLVE",E,E,N,N],[17,"RTPROT_UNSPEC",E,E,N,N],[17,"RTPROT_REDIRECT",E,E,N,N],[17,"RTPROT_KERNEL",E,E,N,N],[17,"RTPROT_BOOT",E,E,N,N],[17,"RTPROT_STATIC",E,E,N,N],[17,"RT_SCOPE_UNIVERSE",E,E,N,N],[17,"RT_SCOPE_SITE",E,E,N,N],[17,"RT_SCOPE_LINK",E,E,N,N],[17,"RT_SCOPE_HOST",E,E,N,N],[17,"RT_SCOPE_NOWHERE",E,E,N,N],[17,"RT_TABLE_UNSPEC",E,E,N,N],[17,"RT_TABLE_COMPAT",E,E,N,N],[17,"RT_TABLE_DEFAULT",E,E,N,N],[17,"RT_TABLE_MAIN",E,E,N,N],[17,"RT_TABLE_LOCAL",E,E,N,N],[17,"RTMSG_OVERRUN",E,E,N,N],[17,"RTMSG_NEWDEVICE",E,E,N,N],[17,"RTMSG_DELDEVICE",E,E,N,N],[17,"RTMSG_NEWROUTE",E,E,N,N],[17,"RTMSG_DELROUTE",E,E,N,N],[17,"RTMSG_NEWRULE",E,E,N,N],[17,"RTMSG_DELRULE",E,E,N,N],[17,"RTMSG_CONTROL",E,E,N,N],[17,"RTMSG_AR_FAILED",E,E,N,N],[17,"MAX_ADDR_LEN",E,E,N,N],[17,"ARPD_UPDATE",E,E,N,N],[17,"ARPD_LOOKUP",E,E,N,N],[17,"ARPD_FLUSH",E,E,N,N],[17,"ATF_MAGIC",E,E,N,N],[17,"SO_TIMESTAMPING",E,E,N,N],[17,"SCM_TIMESTAMPING",E,E,N,N],[17,"MODULE_INIT_IGNORE_MODVERSIONS",E,E,N,N],[17,"MODULE_INIT_IGNORE_VERMAGIC",E,E,N,N],[17,"SOF_TIMESTAMPING_TX_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_TX_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RX_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RX_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_SYS_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RAW_HARDWARE",E,E,N,N],[17,"ALG_SET_KEY",E,E,N,N],[17,"ALG_SET_IV",E,E,N,N],[17,"ALG_SET_OP",E,E,N,N],[17,"ALG_SET_AEAD_ASSOCLEN",E,E,N,N],[17,"ALG_SET_AEAD_AUTHSIZE",E,E,N,N],[17,"ALG_OP_DECRYPT",E,E,N,N],[17,"ALG_OP_ENCRYPT",E,E,N,N],[17,"IN_ACCESS",E,E,N,N],[17,"IN_MODIFY",E,E,N,N],[17,"IN_ATTRIB",E,E,N,N],[17,"IN_CLOSE_WRITE",E,E,N,N],[17,"IN_CLOSE_NOWRITE",E,E,N,N],[17,"IN_CLOSE",E,E,N,N],[17,"IN_OPEN",E,E,N,N],[17,"IN_MOVED_FROM",E,E,N,N],[17,"IN_MOVED_TO",E,E,N,N],[17,"IN_MOVE",E,E,N,N],[17,"IN_CREATE",E,E,N,N],[17,"IN_DELETE",E,E,N,N],[17,"IN_DELETE_SELF",E,E,N,N],[17,"IN_MOVE_SELF",E,E,N,N],[17,"IN_UNMOUNT",E,E,N,N],[17,"IN_Q_OVERFLOW",E,E,N,N],[17,"IN_IGNORED",E,E,N,N],[17,"IN_ONLYDIR",E,E,N,N],[17,"IN_DONT_FOLLOW",E,E,N,N],[17,"IN_ISDIR",E,E,N,N],[17,"IN_ONESHOT",E,E,N,N],[17,"IN_ALL_EVENTS",E,E,N,N],[17,"IN_CLOEXEC",E,E,N,N],[17,"IN_NONBLOCK",E,E,N,N],[17,"FUTEX_WAIT",E,E,N,N],[17,"FUTEX_WAKE",E,E,N,N],[17,"FUTEX_FD",E,E,N,N],[17,"FUTEX_REQUEUE",E,E,N,N],[17,"FUTEX_CMP_REQUEUE",E,E,N,N],[17,"FUTEX_WAKE_OP",E,E,N,N],[17,"FUTEX_LOCK_PI",E,E,N,N],[17,"FUTEX_UNLOCK_PI",E,E,N,N],[17,"FUTEX_TRYLOCK_PI",E,E,N,N],[17,"FUTEX_WAIT_BITSET",E,E,N,N],[17,"FUTEX_WAKE_BITSET",E,E,N,N],[17,"FUTEX_WAIT_REQUEUE_PI",E,E,N,N],[17,"FUTEX_CMP_REQUEUE_PI",E,E,N,N],[17,"FUTEX_PRIVATE_FLAG",E,E,N,N],[17,"FUTEX_CLOCK_REALTIME",E,E,N,N],[17,"FUTEX_CMD_MASK",E,E,N,N],[17,"RLIMIT_CPU",E,E,N,N],[17,"RLIMIT_FSIZE",E,E,N,N],[17,"RLIMIT_DATA",E,E,N,N],[17,"RLIMIT_STACK",E,E,N,N],[17,"RLIMIT_CORE",E,E,N,N],[17,"RLIMIT_LOCKS",E,E,N,N],[17,"RLIMIT_SIGPENDING",E,E,N,N],[17,"RLIMIT_MSGQUEUE",E,E,N,N],[17,"RLIMIT_NICE",E,E,N,N],[17,"RLIMIT_RTPRIO",E,E,N,N],[17,"MADV_SOFT_OFFLINE",E,E,N,N],[17,"MS_RMT_MASK",E,E,N,N],[17,"__UT_LINESIZE",E,E,N,N],[17,"__UT_NAMESIZE",E,E,N,N],[17,"__UT_HOSTSIZE",E,E,N,N],[17,"EMPTY",E,E,N,N],[17,"RUN_LVL",E,E,N,N],[17,"BOOT_TIME",E,E,N,N],[17,"NEW_TIME",E,E,N,N],[17,"OLD_TIME",E,E,N,N],[17,"INIT_PROCESS",E,E,N,N],[17,"LOGIN_PROCESS",E,E,N,N],[17,"USER_PROCESS",E,E,N,N],[17,"DEAD_PROCESS",E,E,N,N],[17,"ACCOUNTING",E,E,N,N],[17,"RLIMIT_RSS",E,E,N,N],[17,"RLIMIT_AS",E,E,N,N],[17,"RLIMIT_MEMLOCK",E,E,N,N],[17,"RLIM_INFINITY",E,E,N,N],[17,"RLIMIT_RTTIME",E,E,N,N],[17,"RLIMIT_NLIMITS",E,E,N,N],[17,"SOCK_NONBLOCK",E,E,N,N],[17,"SOL_RXRPC",E,E,N,N],[17,"SOL_PPPOL2TP",E,E,N,N],[17,"SOL_PNPIPE",E,E,N,N],[17,"SOL_RDS",E,E,N,N],[17,"SOL_IUCV",E,E,N,N],[17,"SOL_CAIF",E,E,N,N],[17,"SOL_NFC",E,E,N,N],[17,"SOL_XDP",E,E,N,N],[17,"MSG_TRYHARD",E,E,N,N],[17,"LC_PAPER",E,E,N,N],[17,"LC_NAME",E,E,N,N],[17,"LC_ADDRESS",E,E,N,N],[17,"LC_TELEPHONE",E,E,N,N],[17,"LC_MEASUREMENT",E,E,N,N],[17,"LC_IDENTIFICATION",E,E,N,N],[17,"LC_PAPER_MASK",E,E,N,N],[17,"LC_NAME_MASK",E,E,N,N],[17,"LC_ADDRESS_MASK",E,E,N,N],[17,"LC_TELEPHONE_MASK",E,E,N,N],[17,"LC_MEASUREMENT_MASK",E,E,N,N],[17,"LC_IDENTIFICATION_MASK",E,E,N,N],[17,"LC_ALL_MASK",E,E,N,N],[17,"MAP_ANON",E,E,N,N],[17,"MAP_ANONYMOUS",E,E,N,N],[17,"MAP_DENYWRITE",E,E,N,N],[17,"MAP_EXECUTABLE",E,E,N,N],[17,"MAP_POPULATE",E,E,N,N],[17,"MAP_NONBLOCK",E,E,N,N],[17,"MAP_STACK",E,E,N,N],[17,"MAP_SHARED_VALIDATE",E,E,N,N],[17,"MAP_FIXED_NOREPLACE",E,E,N,N],[17,"ENOTSUP",E,E,N,N],[17,"EUCLEAN",E,E,N,N],[17,"ENOTNAM",E,E,N,N],[17,"ENAVAIL",E,E,N,N],[17,"EISNAM",E,E,N,N],[17,"EREMOTEIO",E,E,N,N],[17,"SOCK_STREAM",E,E,N,N],[17,"SOCK_DGRAM",E,E,N,N],[17,"SOCK_SEQPACKET",E,E,N,N],[17,"SOCK_DCCP",E,E,N,N],[17,"SOCK_PACKET",E,E,N,N],[17,"TCP_COOKIE_TRANSACTIONS",E,E,N,N],[17,"TCP_THIN_LINEAR_TIMEOUTS",E,E,N,N],[17,"TCP_THIN_DUPACK",E,E,N,N],[17,"TCP_USER_TIMEOUT",E,E,N,N],[17,"TCP_REPAIR",E,E,N,N],[17,"TCP_REPAIR_QUEUE",E,E,N,N],[17,"TCP_QUEUE_SEQ",E,E,N,N],[17,"TCP_REPAIR_OPTIONS",E,E,N,N],[17,"TCP_FASTOPEN",E,E,N,N],[17,"TCP_TIMESTAMP",E,E,N,N],[17,"DCCP_SOCKOPT_PACKET_SIZE",E,E,N,N],[17,"DCCP_SOCKOPT_SERVICE",E,E,N,N],[17,"DCCP_SOCKOPT_CHANGE_L",E,E,N,N],[17,"DCCP_SOCKOPT_CHANGE_R",E,E,N,N],[17,"DCCP_SOCKOPT_GET_CUR_MPS",E,E,N,N],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT",E,E,N,N],[17,"DCCP_SOCKOPT_SEND_CSCOV",E,E,N,N],[17,"DCCP_SOCKOPT_RECV_CSCOV",E,E,N,N],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS",E,E,N,N],[17,"DCCP_SOCKOPT_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_TX_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_RX_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_QPOLICY_ID",E,E,N,N],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN",E,E,N,N],[17,"DCCP_SOCKOPT_CCID_RX_INFO",E,E,N,N],[17,"DCCP_SOCKOPT_CCID_TX_INFO",E,E,N,N],[17,"DCCP_SERVICE_LIST_MAX_LEN",E,"maximum number of services provided on the same listening…",N,N],[17,"SIGTTIN",E,E,N,N],[17,"SIGTTOU",E,E,N,N],[17,"SIGXCPU",E,E,N,N],[17,"SIGXFSZ",E,E,N,N],[17,"SIGVTALRM",E,E,N,N],[17,"SIGPROF",E,E,N,N],[17,"SIGWINCH",E,E,N,N],[17,"SIGEV_THREAD_ID",E,E,N,N],[17,"BUFSIZ",E,E,N,N],[17,"TMP_MAX",E,E,N,N],[17,"FOPEN_MAX",E,E,N,N],[17,"POSIX_FADV_DONTNEED",E,E,N,N],[17,"POSIX_FADV_NOREUSE",E,E,N,N],[17,"POSIX_MADV_DONTNEED",E,E,N,N],[17,"_SC_EQUIV_CLASS_MAX",E,E,N,N],[17,"_SC_CHARCLASS_NAME_MAX",E,E,N,N],[17,"_SC_PII",E,E,N,N],[17,"_SC_PII_XTI",E,E,N,N],[17,"_SC_PII_SOCKET",E,E,N,N],[17,"_SC_PII_INTERNET",E,E,N,N],[17,"_SC_PII_OSI",E,E,N,N],[17,"_SC_POLL",E,E,N,N],[17,"_SC_SELECT",E,E,N,N],[17,"_SC_PII_INTERNET_STREAM",E,E,N,N],[17,"_SC_PII_INTERNET_DGRAM",E,E,N,N],[17,"_SC_PII_OSI_COTS",E,E,N,N],[17,"_SC_PII_OSI_CLTS",E,E,N,N],[17,"_SC_PII_OSI_M",E,E,N,N],[17,"_SC_T_IOV_MAX",E,E,N,N],[17,"_SC_2_C_VERSION",E,E,N,N],[17,"_SC_CHAR_BIT",E,E,N,N],[17,"_SC_CHAR_MAX",E,E,N,N],[17,"_SC_CHAR_MIN",E,E,N,N],[17,"_SC_INT_MAX",E,E,N,N],[17,"_SC_INT_MIN",E,E,N,N],[17,"_SC_LONG_BIT",E,E,N,N],[17,"_SC_WORD_BIT",E,E,N,N],[17,"_SC_MB_LEN_MAX",E,E,N,N],[17,"_SC_SSIZE_MAX",E,E,N,N],[17,"_SC_SCHAR_MAX",E,E,N,N],[17,"_SC_SCHAR_MIN",E,E,N,N],[17,"_SC_SHRT_MAX",E,E,N,N],[17,"_SC_SHRT_MIN",E,E,N,N],[17,"_SC_UCHAR_MAX",E,E,N,N],[17,"_SC_UINT_MAX",E,E,N,N],[17,"_SC_ULONG_MAX",E,E,N,N],[17,"_SC_USHRT_MAX",E,E,N,N],[17,"_SC_NL_ARGMAX",E,E,N,N],[17,"_SC_NL_LANGMAX",E,E,N,N],[17,"_SC_NL_MSGMAX",E,E,N,N],[17,"_SC_NL_NMAX",E,E,N,N],[17,"_SC_NL_SETMAX",E,E,N,N],[17,"_SC_NL_TEXTMAX",E,E,N,N],[17,"_SC_BASE",E,E,N,N],[17,"_SC_C_LANG_SUPPORT",E,E,N,N],[17,"_SC_C_LANG_SUPPORT_R",E,E,N,N],[17,"_SC_DEVICE_IO",E,E,N,N],[17,"_SC_DEVICE_SPECIFIC",E,E,N,N],[17,"_SC_DEVICE_SPECIFIC_R",E,E,N,N],[17,"_SC_FD_MGMT",E,E,N,N],[17,"_SC_FIFO",E,E,N,N],[17,"_SC_PIPE",E,E,N,N],[17,"_SC_FILE_ATTRIBUTES",E,E,N,N],[17,"_SC_FILE_LOCKING",E,E,N,N],[17,"_SC_FILE_SYSTEM",E,E,N,N],[17,"_SC_MULTI_PROCESS",E,E,N,N],[17,"_SC_SINGLE_PROCESS",E,E,N,N],[17,"_SC_NETWORKING",E,E,N,N],[17,"_SC_REGEX_VERSION",E,E,N,N],[17,"_SC_SIGNALS",E,E,N,N],[17,"_SC_SYSTEM_DATABASE",E,E,N,N],[17,"_SC_SYSTEM_DATABASE_R",E,E,N,N],[17,"_SC_USER_GROUPS",E,E,N,N],[17,"_SC_USER_GROUPS_R",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL2_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL2_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL2_CACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL3_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL3_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL3_CACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL4_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL4_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL4_CACHE_LINESIZE",E,E,N,N],[17,"O_ACCMODE",E,E,N,N],[17,"ST_RELATIME",E,E,N,N],[17,"NI_MAXHOST",E,E,N,N],[17,"ADFS_SUPER_MAGIC",E,E,N,N],[17,"AFFS_SUPER_MAGIC",E,E,N,N],[17,"CODA_SUPER_MAGIC",E,E,N,N],[17,"CRAMFS_MAGIC",E,E,N,N],[17,"EFS_SUPER_MAGIC",E,E,N,N],[17,"EXT2_SUPER_MAGIC",E,E,N,N],[17,"EXT3_SUPER_MAGIC",E,E,N,N],[17,"EXT4_SUPER_MAGIC",E,E,N,N],[17,"HPFS_SUPER_MAGIC",E,E,N,N],[17,"HUGETLBFS_MAGIC",E,E,N,N],[17,"ISOFS_SUPER_MAGIC",E,E,N,N],[17,"JFFS2_SUPER_MAGIC",E,E,N,N],[17,"MINIX_SUPER_MAGIC",E,E,N,N],[17,"MINIX_SUPER_MAGIC2",E,E,N,N],[17,"MINIX2_SUPER_MAGIC",E,E,N,N],[17,"MINIX2_SUPER_MAGIC2",E,E,N,N],[17,"MSDOS_SUPER_MAGIC",E,E,N,N],[17,"NCP_SUPER_MAGIC",E,E,N,N],[17,"NFS_SUPER_MAGIC",E,E,N,N],[17,"OPENPROM_SUPER_MAGIC",E,E,N,N],[17,"PROC_SUPER_MAGIC",E,E,N,N],[17,"QNX4_SUPER_MAGIC",E,E,N,N],[17,"REISERFS_SUPER_MAGIC",E,E,N,N],[17,"SMB_SUPER_MAGIC",E,E,N,N],[17,"TMPFS_MAGIC",E,E,N,N],[17,"USBDEVICE_SUPER_MAGIC",E,E,N,N],[17,"VEOF",E,E,N,N],[17,"CPU_SETSIZE",E,E,N,N],[17,"PTRACE_TRACEME",E,E,N,N],[17,"PTRACE_PEEKTEXT",E,E,N,N],[17,"PTRACE_PEEKDATA",E,E,N,N],[17,"PTRACE_PEEKUSER",E,E,N,N],[17,"PTRACE_POKETEXT",E,E,N,N],[17,"PTRACE_POKEDATA",E,E,N,N],[17,"PTRACE_POKEUSER",E,E,N,N],[17,"PTRACE_CONT",E,E,N,N],[17,"PTRACE_KILL",E,E,N,N],[17,"PTRACE_SINGLESTEP",E,E,N,N],[17,"PTRACE_ATTACH",E,E,N,N],[17,"PTRACE_SYSCALL",E,E,N,N],[17,"PTRACE_SETOPTIONS",E,E,N,N],[17,"PTRACE_GETEVENTMSG",E,E,N,N],[17,"PTRACE_GETSIGINFO",E,E,N,N],[17,"PTRACE_SETSIGINFO",E,E,N,N],[17,"PTRACE_GETREGSET",E,E,N,N],[17,"PTRACE_SETREGSET",E,E,N,N],[17,"PTRACE_SEIZE",E,E,N,N],[17,"PTRACE_INTERRUPT",E,E,N,N],[17,"PTRACE_LISTEN",E,E,N,N],[17,"PTRACE_PEEKSIGINFO",E,E,N,N],[17,"EPOLLWAKEUP",E,E,N,N],[17,"MAP_HUGETLB",E,E,N,N],[17,"SEEK_DATA",E,E,N,N],[17,"SEEK_HOLE",E,E,N,N],[17,"TCSANOW",E,E,N,N],[17,"TCSADRAIN",E,E,N,N],[17,"TCSAFLUSH",E,E,N,N],[17,"TIOCLINUX",E,E,N,N],[17,"TIOCGSERIAL",E,E,N,N],[17,"RTLD_DEEPBIND",E,E,N,N],[17,"RTLD_GLOBAL",E,E,N,N],[17,"RTLD_NOLOAD",E,E,N,N],[17,"LINUX_REBOOT_MAGIC1",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2A",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2B",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2C",E,E,N,N],[17,"LINUX_REBOOT_CMD_RESTART",E,E,N,N],[17,"LINUX_REBOOT_CMD_HALT",E,E,N,N],[17,"LINUX_REBOOT_CMD_CAD_ON",E,E,N,N],[17,"LINUX_REBOOT_CMD_CAD_OFF",E,E,N,N],[17,"LINUX_REBOOT_CMD_POWER_OFF",E,E,N,N],[17,"LINUX_REBOOT_CMD_RESTART2",E,E,N,N],[17,"LINUX_REBOOT_CMD_SW_SUSPEND",E,E,N,N],[17,"LINUX_REBOOT_CMD_KEXEC",E,E,N,N],[17,"TCA_PAD",E,E,N,N],[17,"TCA_DUMP_INVISIBLE",E,E,N,N],[17,"TCA_CHAIN",E,E,N,N],[17,"TCA_HW_OFFLOAD",E,E,N,N],[17,"RTM_F_LOOKUP_TABLE",E,E,N,N],[17,"RTM_F_FIB_MATCH",E,E,N,N],[17,"RTA_VIA",E,E,N,N],[17,"RTA_NEWDST",E,E,N,N],[17,"RTA_PREF",E,E,N,N],[17,"RTA_ENCAP_TYPE",E,E,N,N],[17,"RTA_ENCAP",E,E,N,N],[17,"RTA_EXPIRES",E,E,N,N],[17,"RTA_PAD",E,E,N,N],[17,"RTA_UID",E,E,N,N],[17,"RTA_TTL_PROPAGATE",E,E,N,N],[17,"NTF_EXT_LEARNED",E,E,N,N],[17,"NTF_OFFLOADED",E,E,N,N],[17,"NDA_MASTER",E,E,N,N],[17,"NDA_LINK_NETNSID",E,E,N,N],[17,"NDA_SRC_VNI",E,E,N,N],[17,"IFA_FLAGS",E,E,N,N],[17,"IFA_F_MANAGETEMPADDR",E,E,N,N],[17,"IFA_F_NOPREFIXROUTE",E,E,N,N],[17,"IFA_F_MCAUTOJOIN",E,E,N,N],[17,"IFA_F_STABLE_PRIVACY",E,E,N,N],[17,"NETLINK_ROUTE",E,E,N,N],[17,"NETLINK_UNUSED",E,E,N,N],[17,"NETLINK_USERSOCK",E,E,N,N],[17,"NETLINK_FIREWALL",E,E,N,N],[17,"NETLINK_SOCK_DIAG",E,E,N,N],[17,"NETLINK_NFLOG",E,E,N,N],[17,"NETLINK_XFRM",E,E,N,N],[17,"NETLINK_SELINUX",E,E,N,N],[17,"NETLINK_ISCSI",E,E,N,N],[17,"NETLINK_AUDIT",E,E,N,N],[17,"NETLINK_FIB_LOOKUP",E,E,N,N],[17,"NETLINK_CONNECTOR",E,E,N,N],[17,"NETLINK_NETFILTER",E,E,N,N],[17,"NETLINK_IP6_FW",E,E,N,N],[17,"NETLINK_DNRTMSG",E,E,N,N],[17,"NETLINK_KOBJECT_UEVENT",E,E,N,N],[17,"NETLINK_GENERIC",E,E,N,N],[17,"NETLINK_SCSITRANSPORT",E,E,N,N],[17,"NETLINK_ECRYPTFS",E,E,N,N],[17,"NETLINK_RDMA",E,E,N,N],[17,"NETLINK_CRYPTO",E,E,N,N],[17,"NETLINK_INET_DIAG",E,E,N,N],[17,"MAX_LINKS",E,E,N,N],[17,"NLM_F_REQUEST",E,E,N,N],[17,"NLM_F_MULTI",E,E,N,N],[17,"NLM_F_ACK",E,E,N,N],[17,"NLM_F_ECHO",E,E,N,N],[17,"NLM_F_DUMP_INTR",E,E,N,N],[17,"NLM_F_DUMP_FILTERED",E,E,N,N],[17,"NLM_F_ROOT",E,E,N,N],[17,"NLM_F_MATCH",E,E,N,N],[17,"NLM_F_ATOMIC",E,E,N,N],[17,"NLM_F_DUMP",E,E,N,N],[17,"NLM_F_REPLACE",E,E,N,N],[17,"NLM_F_EXCL",E,E,N,N],[17,"NLM_F_CREATE",E,E,N,N],[17,"NLM_F_APPEND",E,E,N,N],[17,"NETLINK_ADD_MEMBERSHIP",E,E,N,N],[17,"NETLINK_DROP_MEMBERSHIP",E,E,N,N],[17,"NETLINK_PKTINFO",E,E,N,N],[17,"NETLINK_BROADCAST_ERROR",E,E,N,N],[17,"NETLINK_NO_ENOBUFS",E,E,N,N],[17,"NETLINK_RX_RING",E,E,N,N],[17,"NETLINK_TX_RING",E,E,N,N],[17,"NETLINK_LISTEN_ALL_NSID",E,E,N,N],[17,"NETLINK_LIST_MEMBERSHIPS",E,E,N,N],[17,"NETLINK_CAP_ACK",E,E,N,N],[17,"NLA_F_NESTED",E,E,N,N],[17,"NLA_F_NET_BYTEORDER",E,E,N,N],[17,"NLA_TYPE_MASK",E,E,N,N],[17,"NLA_ALIGNTO",E,E,N,N],[17,"GENL_UNS_ADMIN_PERM",E,E,N,N],[17,"GENL_ID_VFS_DQUOT",E,E,N,N],[17,"GENL_ID_PMCRAID",E,E,N,N],[17,"TIOCM_LE",E,E,N,N],[17,"TIOCM_DTR",E,E,N,N],[17,"TIOCM_RTS",E,E,N,N],[17,"TIOCM_ST",E,E,N,N],[17,"TIOCM_SR",E,E,N,N],[17,"TIOCM_CTS",E,E,N,N],[17,"TIOCM_CAR",E,E,N,N],[17,"TIOCM_RNG",E,E,N,N],[17,"TIOCM_DSR",E,E,N,N],[17,"TIOCM_CD",E,E,N,N],[17,"TIOCM_RI",E,E,N,N],[17,"NF_NETDEV_INGRESS",E,E,N,N],[17,"NF_NETDEV_NUMHOOKS",E,E,N,N],[17,"NFPROTO_INET",E,E,N,N],[17,"NFPROTO_NETDEV",E,E,N,N],[17,"NFT_TABLE_MAXNAMELEN",E,E,N,N],[17,"NFT_CHAIN_MAXNAMELEN",E,E,N,N],[17,"NFT_SET_MAXNAMELEN",E,E,N,N],[17,"NFT_OBJ_MAXNAMELEN",E,E,N,N],[17,"NFT_USERDATA_MAXLEN",E,E,N,N],[17,"NFT_REG_VERDICT",E,E,N,N],[17,"NFT_REG_1",E,E,N,N],[17,"NFT_REG_2",E,E,N,N],[17,"NFT_REG_3",E,E,N,N],[17,"NFT_REG_4",E,E,N,N],[17,"__NFT_REG_MAX",E,E,N,N],[17,"NFT_REG32_00",E,E,N,N],[17,"NFT_REG32_01",E,E,N,N],[17,"NFT_REG32_02",E,E,N,N],[17,"NFT_REG32_03",E,E,N,N],[17,"NFT_REG32_04",E,E,N,N],[17,"NFT_REG32_05",E,E,N,N],[17,"NFT_REG32_06",E,E,N,N],[17,"NFT_REG32_07",E,E,N,N],[17,"NFT_REG32_08",E,E,N,N],[17,"NFT_REG32_09",E,E,N,N],[17,"NFT_REG32_10",E,E,N,N],[17,"NFT_REG32_11",E,E,N,N],[17,"NFT_REG32_12",E,E,N,N],[17,"NFT_REG32_13",E,E,N,N],[17,"NFT_REG32_14",E,E,N,N],[17,"NFT_REG32_15",E,E,N,N],[17,"NFT_REG_SIZE",E,E,N,N],[17,"NFT_REG32_SIZE",E,E,N,N],[17,"NFT_CONTINUE",E,E,N,N],[17,"NFT_BREAK",E,E,N,N],[17,"NFT_JUMP",E,E,N,N],[17,"NFT_GOTO",E,E,N,N],[17,"NFT_RETURN",E,E,N,N],[17,"NFT_MSG_NEWTABLE",E,E,N,N],[17,"NFT_MSG_GETTABLE",E,E,N,N],[17,"NFT_MSG_DELTABLE",E,E,N,N],[17,"NFT_MSG_NEWCHAIN",E,E,N,N],[17,"NFT_MSG_GETCHAIN",E,E,N,N],[17,"NFT_MSG_DELCHAIN",E,E,N,N],[17,"NFT_MSG_NEWRULE",E,E,N,N],[17,"NFT_MSG_GETRULE",E,E,N,N],[17,"NFT_MSG_DELRULE",E,E,N,N],[17,"NFT_MSG_NEWSET",E,E,N,N],[17,"NFT_MSG_GETSET",E,E,N,N],[17,"NFT_MSG_DELSET",E,E,N,N],[17,"NFT_MSG_NEWSETELEM",E,E,N,N],[17,"NFT_MSG_GETSETELEM",E,E,N,N],[17,"NFT_MSG_DELSETELEM",E,E,N,N],[17,"NFT_MSG_NEWGEN",E,E,N,N],[17,"NFT_MSG_GETGEN",E,E,N,N],[17,"NFT_MSG_TRACE",E,E,N,N],[17,"NFT_MSG_NEWOBJ",E,E,N,N],[17,"NFT_MSG_GETOBJ",E,E,N,N],[17,"NFT_MSG_DELOBJ",E,E,N,N],[17,"NFT_MSG_GETOBJ_RESET",E,E,N,N],[17,"NFT_MSG_MAX",E,E,N,N],[17,"NFT_SET_ANONYMOUS",E,E,N,N],[17,"NFT_SET_CONSTANT",E,E,N,N],[17,"NFT_SET_INTERVAL",E,E,N,N],[17,"NFT_SET_MAP",E,E,N,N],[17,"NFT_SET_TIMEOUT",E,E,N,N],[17,"NFT_SET_EVAL",E,E,N,N],[17,"NFT_SET_POL_PERFORMANCE",E,E,N,N],[17,"NFT_SET_POL_MEMORY",E,E,N,N],[17,"NFT_SET_ELEM_INTERVAL_END",E,E,N,N],[17,"NFT_DATA_VALUE",E,E,N,N],[17,"NFT_DATA_VERDICT",E,E,N,N],[17,"NFT_DATA_RESERVED_MASK",E,E,N,N],[17,"NFT_DATA_VALUE_MAXLEN",E,E,N,N],[17,"NFT_BYTEORDER_NTOH",E,E,N,N],[17,"NFT_BYTEORDER_HTON",E,E,N,N],[17,"NFT_CMP_EQ",E,E,N,N],[17,"NFT_CMP_NEQ",E,E,N,N],[17,"NFT_CMP_LT",E,E,N,N],[17,"NFT_CMP_LTE",E,E,N,N],[17,"NFT_CMP_GT",E,E,N,N],[17,"NFT_CMP_GTE",E,E,N,N],[17,"NFT_RANGE_EQ",E,E,N,N],[17,"NFT_RANGE_NEQ",E,E,N,N],[17,"NFT_LOOKUP_F_INV",E,E,N,N],[17,"NFT_DYNSET_OP_ADD",E,E,N,N],[17,"NFT_DYNSET_OP_UPDATE",E,E,N,N],[17,"NFT_DYNSET_F_INV",E,E,N,N],[17,"NFT_PAYLOAD_LL_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_NETWORK_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_TRANSPORT_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_CSUM_NONE",E,E,N,N],[17,"NFT_PAYLOAD_CSUM_INET",E,E,N,N],[17,"NFT_META_LEN",E,E,N,N],[17,"NFT_META_PROTOCOL",E,E,N,N],[17,"NFT_META_PRIORITY",E,E,N,N],[17,"NFT_META_MARK",E,E,N,N],[17,"NFT_META_IIF",E,E,N,N],[17,"NFT_META_OIF",E,E,N,N],[17,"NFT_META_IIFNAME",E,E,N,N],[17,"NFT_META_OIFNAME",E,E,N,N],[17,"NFT_META_IIFTYPE",E,E,N,N],[17,"NFT_META_OIFTYPE",E,E,N,N],[17,"NFT_META_SKUID",E,E,N,N],[17,"NFT_META_SKGID",E,E,N,N],[17,"NFT_META_NFTRACE",E,E,N,N],[17,"NFT_META_RTCLASSID",E,E,N,N],[17,"NFT_META_SECMARK",E,E,N,N],[17,"NFT_META_NFPROTO",E,E,N,N],[17,"NFT_META_L4PROTO",E,E,N,N],[17,"NFT_META_BRI_IIFNAME",E,E,N,N],[17,"NFT_META_BRI_OIFNAME",E,E,N,N],[17,"NFT_META_PKTTYPE",E,E,N,N],[17,"NFT_META_CPU",E,E,N,N],[17,"NFT_META_IIFGROUP",E,E,N,N],[17,"NFT_META_OIFGROUP",E,E,N,N],[17,"NFT_META_CGROUP",E,E,N,N],[17,"NFT_META_PRANDOM",E,E,N,N],[17,"NFT_CT_STATE",E,E,N,N],[17,"NFT_CT_DIRECTION",E,E,N,N],[17,"NFT_CT_STATUS",E,E,N,N],[17,"NFT_CT_MARK",E,E,N,N],[17,"NFT_CT_SECMARK",E,E,N,N],[17,"NFT_CT_EXPIRATION",E,E,N,N],[17,"NFT_CT_HELPER",E,E,N,N],[17,"NFT_CT_L3PROTOCOL",E,E,N,N],[17,"NFT_CT_SRC",E,E,N,N],[17,"NFT_CT_DST",E,E,N,N],[17,"NFT_CT_PROTOCOL",E,E,N,N],[17,"NFT_CT_PROTO_SRC",E,E,N,N],[17,"NFT_CT_PROTO_DST",E,E,N,N],[17,"NFT_CT_LABELS",E,E,N,N],[17,"NFT_CT_PKTS",E,E,N,N],[17,"NFT_CT_BYTES",E,E,N,N],[17,"NFT_LIMIT_PKTS",E,E,N,N],[17,"NFT_LIMIT_PKT_BYTES",E,E,N,N],[17,"NFT_LIMIT_F_INV",E,E,N,N],[17,"NFT_QUEUE_FLAG_BYPASS",E,E,N,N],[17,"NFT_QUEUE_FLAG_CPU_FANOUT",E,E,N,N],[17,"NFT_QUEUE_FLAG_MASK",E,E,N,N],[17,"NFT_QUOTA_F_INV",E,E,N,N],[17,"NFT_REJECT_ICMP_UNREACH",E,E,N,N],[17,"NFT_REJECT_TCP_RST",E,E,N,N],[17,"NFT_REJECT_ICMPX_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_NO_ROUTE",E,E,N,N],[17,"NFT_REJECT_ICMPX_PORT_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_HOST_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED",E,E,N,N],[17,"NFT_NAT_SNAT",E,E,N,N],[17,"NFT_NAT_DNAT",E,E,N,N],[17,"NFT_TRACETYPE_UNSPEC",E,E,N,N],[17,"NFT_TRACETYPE_POLICY",E,E,N,N],[17,"NFT_TRACETYPE_RETURN",E,E,N,N],[17,"NFT_TRACETYPE_RULE",E,E,N,N],[17,"NFT_NG_INCREMENTAL",E,E,N,N],[17,"NFT_NG_RANDOM",E,E,N,N],[17,"M_MXFAST",E,E,N,N],[17,"M_NLBLKS",E,E,N,N],[17,"M_GRAIN",E,E,N,N],[17,"M_KEEP",E,E,N,N],[17,"M_TRIM_THRESHOLD",E,E,N,N],[17,"M_TOP_PAD",E,E,N,N],[17,"M_MMAP_THRESHOLD",E,E,N,N],[17,"M_MMAP_MAX",E,E,N,N],[17,"M_CHECK_ACTION",E,E,N,N],[17,"M_PERTURB",E,E,N,N],[17,"M_ARENA_TEST",E,E,N,N],[17,"M_ARENA_MAX",E,E,N,N],[17,"AT_STATX_SYNC_TYPE",E,E,N,N],[17,"AT_STATX_SYNC_AS_STAT",E,E,N,N],[17,"AT_STATX_FORCE_SYNC",E,E,N,N],[17,"AT_STATX_DONT_SYNC",E,E,N,N],[17,"STATX_TYPE",E,E,N,N],[17,"STATX_MODE",E,E,N,N],[17,"STATX_NLINK",E,E,N,N],[17,"STATX_UID",E,E,N,N],[17,"STATX_GID",E,E,N,N],[17,"STATX_ATIME",E,E,N,N],[17,"STATX_MTIME",E,E,N,N],[17,"STATX_CTIME",E,E,N,N],[17,"STATX_INO",E,E,N,N],[17,"STATX_SIZE",E,E,N,N],[17,"STATX_BLOCKS",E,E,N,N],[17,"STATX_BASIC_STATS",E,E,N,N],[17,"STATX_BTIME",E,E,N,N],[17,"STATX_ALL",E,E,N,N],[17,"STATX__RESERVED",E,E,N,N],[17,"STATX_ATTR_COMPRESSED",E,E,N,N],[17,"STATX_ATTR_IMMUTABLE",E,E,N,N],[17,"STATX_ATTR_APPEND",E,E,N,N],[17,"STATX_ATTR_NODUMP",E,E,N,N],[17,"STATX_ATTR_ENCRYPTED",E,E,N,N],[17,"STATX_ATTR_AUTOMOUNT",E,E,N,N],[17,"PTHREAD_STACK_MIN",E,E,N,N],[17,"PTHREAD_MUTEX_ADAPTIVE_NP",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T",E,E,N,N],[17,"O_LARGEFILE",E,E,N,N],[17,"TIOCGSOFTCAR",E,E,N,N],[17,"TIOCSSOFTCAR",E,E,N,N],[17,"TIOCGRS485",E,E,N,N],[17,"TIOCSRS485",E,E,N,N],[17,"RLIMIT_NOFILE",E,E,N,N],[17,"RLIMIT_NPROC",E,E,N,N],[17,"O_APPEND",E,E,N,N],[17,"O_CREAT",E,E,N,N],[17,"O_EXCL",E,E,N,N],[17,"O_NOCTTY",E,E,N,N],[17,"O_NONBLOCK",E,E,N,N],[17,"O_SYNC",E,E,N,N],[17,"O_RSYNC",E,E,N,N],[17,"O_DSYNC",E,E,N,N],[17,"O_FSYNC",E,E,N,N],[17,"O_NOATIME",E,E,N,N],[17,"O_PATH",E,E,N,N],[17,"O_TMPFILE",E,E,N,N],[17,"MAP_GROWSDOWN",E,E,N,N],[17,"EDEADLK",E,E,N,N],[17,"ENAMETOOLONG",E,E,N,N],[17,"ENOLCK",E,E,N,N],[17,"ENOSYS",E,E,N,N],[17,"ENOTEMPTY",E,E,N,N],[17,"ELOOP",E,E,N,N],[17,"ENOMSG",E,E,N,N],[17,"EIDRM",E,E,N,N],[17,"ECHRNG",E,E,N,N],[17,"EL2NSYNC",E,E,N,N],[17,"EL3HLT",E,E,N,N],[17,"EL3RST",E,E,N,N],[17,"ELNRNG",E,E,N,N],[17,"EUNATCH",E,E,N,N],[17,"ENOCSI",E,E,N,N],[17,"EL2HLT",E,E,N,N],[17,"EBADE",E,E,N,N],[17,"EBADR",E,E,N,N],[17,"EXFULL",E,E,N,N],[17,"ENOANO",E,E,N,N],[17,"EBADRQC",E,E,N,N],[17,"EBADSLT",E,E,N,N],[17,"EMULTIHOP",E,E,N,N],[17,"EOVERFLOW",E,E,N,N],[17,"ENOTUNIQ",E,E,N,N],[17,"EBADFD",E,E,N,N],[17,"EBADMSG",E,E,N,N],[17,"EREMCHG",E,E,N,N],[17,"ELIBACC",E,E,N,N],[17,"ELIBBAD",E,E,N,N],[17,"ELIBSCN",E,E,N,N],[17,"ELIBMAX",E,E,N,N],[17,"ELIBEXEC",E,E,N,N],[17,"EILSEQ",E,E,N,N],[17,"ERESTART",E,E,N,N],[17,"ESTRPIPE",E,E,N,N],[17,"EUSERS",E,E,N,N],[17,"ENOTSOCK",E,E,N,N],[17,"EDESTADDRREQ",E,E,N,N],[17,"EMSGSIZE",E,E,N,N],[17,"EPROTOTYPE",E,E,N,N],[17,"ENOPROTOOPT",E,E,N,N],[17,"EPROTONOSUPPORT",E,E,N,N],[17,"ESOCKTNOSUPPORT",E,E,N,N],[17,"EOPNOTSUPP",E,E,N,N],[17,"EPFNOSUPPORT",E,E,N,N],[17,"EAFNOSUPPORT",E,E,N,N],[17,"EADDRINUSE",E,E,N,N],[17,"EADDRNOTAVAIL",E,E,N,N],[17,"ENETDOWN",E,E,N,N],[17,"ENETUNREACH",E,E,N,N],[17,"ENETRESET",E,E,N,N],[17,"ECONNABORTED",E,E,N,N],[17,"ECONNRESET",E,E,N,N],[17,"ENOBUFS",E,E,N,N],[17,"EISCONN",E,E,N,N],[17,"ENOTCONN",E,E,N,N],[17,"ESHUTDOWN",E,E,N,N],[17,"ETOOMANYREFS",E,E,N,N],[17,"ETIMEDOUT",E,E,N,N],[17,"ECONNREFUSED",E,E,N,N],[17,"EHOSTDOWN",E,E,N,N],[17,"EHOSTUNREACH",E,E,N,N],[17,"EALREADY",E,E,N,N],[17,"EINPROGRESS",E,E,N,N],[17,"ESTALE",E,E,N,N],[17,"EDQUOT",E,E,N,N],[17,"ENOMEDIUM",E,E,N,N],[17,"EMEDIUMTYPE",E,E,N,N],[17,"ECANCELED",E,E,N,N],[17,"ENOKEY",E,E,N,N],[17,"EKEYEXPIRED",E,E,N,N],[17,"EKEYREVOKED",E,E,N,N],[17,"EKEYREJECTED",E,E,N,N],[17,"EOWNERDEAD",E,E,N,N],[17,"ENOTRECOVERABLE",E,E,N,N],[17,"EHWPOISON",E,E,N,N],[17,"ERFKILL",E,E,N,N],[17,"SOL_SOCKET",E,E,N,N],[17,"SO_REUSEADDR",E,E,N,N],[17,"SO_TYPE",E,E,N,N],[17,"SO_ERROR",E,E,N,N],[17,"SO_DONTROUTE",E,E,N,N],[17,"SO_BROADCAST",E,E,N,N],[17,"SO_SNDBUF",E,E,N,N],[17,"SO_RCVBUF",E,E,N,N],[17,"SO_SNDBUFFORCE",E,E,N,N],[17,"SO_RCVBUFFORCE",E,E,N,N],[17,"SO_KEEPALIVE",E,E,N,N],[17,"SO_OOBINLINE",E,E,N,N],[17,"SO_NO_CHECK",E,E,N,N],[17,"SO_PRIORITY",E,E,N,N],[17,"SO_LINGER",E,E,N,N],[17,"SO_BSDCOMPAT",E,E,N,N],[17,"SO_REUSEPORT",E,E,N,N],[17,"SO_PASSCRED",E,E,N,N],[17,"SO_PEERCRED",E,E,N,N],[17,"SO_RCVLOWAT",E,E,N,N],[17,"SO_SNDLOWAT",E,E,N,N],[17,"SO_RCVTIMEO",E,E,N,N],[17,"SO_SNDTIMEO",E,E,N,N],[17,"SO_SECURITY_AUTHENTICATION",E,E,N,N],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT",E,E,N,N],[17,"SO_SECURITY_ENCRYPTION_NETWORK",E,E,N,N],[17,"SO_BINDTODEVICE",E,E,N,N],[17,"SO_ATTACH_FILTER",E,E,N,N],[17,"SO_DETACH_FILTER",E,E,N,N],[17,"SO_GET_FILTER",E,E,N,N],[17,"SO_PEERNAME",E,E,N,N],[17,"SO_TIMESTAMP",E,E,N,N],[17,"SO_ACCEPTCONN",E,E,N,N],[17,"SO_PEERSEC",E,E,N,N],[17,"SO_PASSSEC",E,E,N,N],[17,"SO_TIMESTAMPNS",E,E,N,N],[17,"SCM_TIMESTAMPNS",E,E,N,N],[17,"SO_MARK",E,E,N,N],[17,"SO_PROTOCOL",E,E,N,N],[17,"SO_DOMAIN",E,E,N,N],[17,"SO_RXQ_OVFL",E,E,N,N],[17,"SO_WIFI_STATUS",E,E,N,N],[17,"SCM_WIFI_STATUS",E,E,N,N],[17,"SO_PEEK_OFF",E,E,N,N],[17,"SO_NOFCS",E,E,N,N],[17,"SO_LOCK_FILTER",E,E,N,N],[17,"SO_SELECT_ERR_QUEUE",E,E,N,N],[17,"SO_BUSY_POLL",E,E,N,N],[17,"SO_MAX_PACING_RATE",E,E,N,N],[17,"SO_BPF_EXTENSIONS",E,E,N,N],[17,"SO_INCOMING_CPU",E,E,N,N],[17,"SO_ATTACH_BPF",E,E,N,N],[17,"SO_DETACH_BPF",E,E,N,N],[17,"SA_ONSTACK",E,E,N,N],[17,"SA_SIGINFO",E,E,N,N],[17,"SA_NOCLDWAIT",E,E,N,N],[17,"SIGCHLD",E,E,N,N],[17,"SIGBUS",E,E,N,N],[17,"SIGUSR1",E,E,N,N],[17,"SIGUSR2",E,E,N,N],[17,"SIGCONT",E,E,N,N],[17,"SIGSTOP",E,E,N,N],[17,"SIGTSTP",E,E,N,N],[17,"SIGURG",E,E,N,N],[17,"SIGIO",E,E,N,N],[17,"SIGSYS",E,E,N,N],[17,"SIGSTKFLT",E,E,N,N],[17,"SIGUNUSED",E,E,N,N],[17,"SIGPOLL",E,E,N,N],[17,"SIGPWR",E,E,N,N],[17,"SIG_SETMASK",E,E,N,N],[17,"SIG_BLOCK",E,E,N,N],[17,"SIG_UNBLOCK",E,E,N,N],[17,"POLLWRNORM",E,E,N,N],[17,"POLLWRBAND",E,E,N,N],[17,"O_ASYNC",E,E,N,N],[17,"O_NDELAY",E,E,N,N],[17,"PTRACE_DETACH",E,E,N,N],[17,"EFD_NONBLOCK",E,E,N,N],[17,"F_GETLK",E,E,N,N],[17,"F_GETOWN",E,E,N,N],[17,"F_SETOWN",E,E,N,N],[17,"F_SETLK",E,E,N,N],[17,"F_SETLKW",E,E,N,N],[17,"F_RDLCK",E,E,N,N],[17,"F_WRLCK",E,E,N,N],[17,"F_UNLCK",E,E,N,N],[17,"SFD_NONBLOCK",E,E,N,N],[17,"TIOCEXCL",E,E,N,N],[17,"TIOCNXCL",E,E,N,N],[17,"TIOCSCTTY",E,E,N,N],[17,"TIOCSTI",E,E,N,N],[17,"TIOCMGET",E,E,N,N],[17,"TIOCMBIS",E,E,N,N],[17,"TIOCMBIC",E,E,N,N],[17,"TIOCMSET",E,E,N,N],[17,"TIOCCONS",E,E,N,N],[17,"SFD_CLOEXEC",E,E,N,N],[17,"NCCS",E,E,N,N],[17,"O_TRUNC",E,E,N,N],[17,"O_CLOEXEC",E,E,N,N],[17,"EBFONT",E,E,N,N],[17,"ENOSTR",E,E,N,N],[17,"ENODATA",E,E,N,N],[17,"ETIME",E,E,N,N],[17,"ENOSR",E,E,N,N],[17,"ENONET",E,E,N,N],[17,"ENOPKG",E,E,N,N],[17,"EREMOTE",E,E,N,N],[17,"ENOLINK",E,E,N,N],[17,"EADV",E,E,N,N],[17,"ESRMNT",E,E,N,N],[17,"ECOMM",E,E,N,N],[17,"EPROTO",E,E,N,N],[17,"EDOTDOT",E,E,N,N],[17,"SA_NODEFER",E,E,N,N],[17,"SA_RESETHAND",E,E,N,N],[17,"SA_RESTART",E,E,N,N],[17,"SA_NOCLDSTOP",E,E,N,N],[17,"EPOLL_CLOEXEC",E,E,N,N],[17,"EFD_CLOEXEC",E,E,N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T",E,E,N,N],[17,"O_DIRECT",E,E,N,N],[17,"O_DIRECTORY",E,E,N,N],[17,"O_NOFOLLOW",E,E,N,N],[17,"MAP_LOCKED",E,E,N,N],[17,"MAP_NORESERVE",E,E,N,N],[17,"MAP_32BIT",E,E,N,N],[17,"EDEADLOCK",E,E,N,N],[17,"FIOCLEX",E,E,N,N],[17,"FIONBIO",E,E,N,N],[17,"PTRACE_GETFPREGS",E,E,N,N],[17,"PTRACE_SETFPREGS",E,E,N,N],[17,"PTRACE_GETFPXREGS",E,E,N,N],[17,"PTRACE_SETFPXREGS",E,E,N,N],[17,"PTRACE_GETREGS",E,E,N,N],[17,"PTRACE_SETREGS",E,E,N,N],[17,"PTRACE_PEEKSIGINFO_SHARED",E,E,N,N],[17,"MCL_CURRENT",E,E,N,N],[17,"MCL_FUTURE",E,E,N,N],[17,"SIGSTKSZ",E,E,N,N],[17,"MINSIGSTKSZ",E,E,N,N],[17,"CBAUD",E,E,N,N],[17,"TAB1",E,E,N,N],[17,"TAB2",E,E,N,N],[17,"TAB3",E,E,N,N],[17,"CR1",E,E,N,N],[17,"CR2",E,E,N,N],[17,"CR3",E,E,N,N],[17,"FF1",E,E,N,N],[17,"BS1",E,E,N,N],[17,"VT1",E,E,N,N],[17,"VWERASE",E,E,N,N],[17,"VREPRINT",E,E,N,N],[17,"VSUSP",E,E,N,N],[17,"VSTART",E,E,N,N],[17,"VSTOP",E,E,N,N],[17,"VDISCARD",E,E,N,N],[17,"VTIME",E,E,N,N],[17,"IXON",E,E,N,N],[17,"IXOFF",E,E,N,N],[17,"ONLCR",E,E,N,N],[17,"CSIZE",E,E,N,N],[17,"CS6",E,E,N,N],[17,"CS7",E,E,N,N],[17,"CS8",E,E,N,N],[17,"CSTOPB",E,E,N,N],[17,"CREAD",E,E,N,N],[17,"PARENB",E,E,N,N],[17,"PARODD",E,E,N,N],[17,"HUPCL",E,E,N,N],[17,"CLOCAL",E,E,N,N],[17,"ECHOKE",E,E,N,N],[17,"ECHOE",E,E,N,N],[17,"ECHOK",E,E,N,N],[17,"ECHONL",E,E,N,N],[17,"ECHOPRT",E,E,N,N],[17,"ECHOCTL",E,E,N,N],[17,"ISIG",E,E,N,N],[17,"ICANON",E,E,N,N],[17,"PENDIN",E,E,N,N],[17,"NOFLSH",E,E,N,N],[17,"CIBAUD",E,E,N,N],[17,"CBAUDEX",E,E,N,N],[17,"VSWTC",E,E,N,N],[17,"OLCUC",E,E,N,N],[17,"NLDLY",E,E,N,N],[17,"CRDLY",E,E,N,N],[17,"TABDLY",E,E,N,N],[17,"BSDLY",E,E,N,N],[17,"FFDLY",E,E,N,N],[17,"VTDLY",E,E,N,N],[17,"XTABS",E,E,N,N],[17,"B0",E,E,N,N],[17,"B50",E,E,N,N],[17,"B75",E,E,N,N],[17,"B110",E,E,N,N],[17,"B134",E,E,N,N],[17,"B150",E,E,N,N],[17,"B200",E,E,N,N],[17,"B300",E,E,N,N],[17,"B600",E,E,N,N],[17,"B1200",E,E,N,N],[17,"B1800",E,E,N,N],[17,"B2400",E,E,N,N],[17,"B4800",E,E,N,N],[17,"B9600",E,E,N,N],[17,"B19200",E,E,N,N],[17,"B38400",E,E,N,N],[17,"EXTA",E,E,N,N],[17,"EXTB",E,E,N,N],[17,"BOTHER",E,E,N,N],[17,"B57600",E,E,N,N],[17,"B115200",E,E,N,N],[17,"B230400",E,E,N,N],[17,"B460800",E,E,N,N],[17,"B500000",E,E,N,N],[17,"B576000",E,E,N,N],[17,"B921600",E,E,N,N],[17,"B1000000",E,E,N,N],[17,"B1152000",E,E,N,N],[17,"B1500000",E,E,N,N],[17,"B2000000",E,E,N,N],[17,"B2500000",E,E,N,N],[17,"B3000000",E,E,N,N],[17,"B3500000",E,E,N,N],[17,"B4000000",E,E,N,N],[17,"VEOL",E,E,N,N],[17,"VEOL2",E,E,N,N],[17,"VMIN",E,E,N,N],[17,"IEXTEN",E,E,N,N],[17,"TOSTOP",E,E,N,N],[17,"FLUSHO",E,E,N,N],[17,"EXTPROC",E,E,N,N],[17,"TCGETS",E,E,N,N],[17,"TCSETS",E,E,N,N],[17,"TCSETSW",E,E,N,N],[17,"TCSETSF",E,E,N,N],[17,"TCGETA",E,E,N,N],[17,"TCSETA",E,E,N,N],[17,"TCSETAW",E,E,N,N],[17,"TCSETAF",E,E,N,N],[17,"TCSBRK",E,E,N,N],[17,"TCXONC",E,E,N,N],[17,"TCFLSH",E,E,N,N],[17,"TIOCINQ",E,E,N,N],[17,"TIOCGPGRP",E,E,N,N],[17,"TIOCSPGRP",E,E,N,N],[17,"TIOCOUTQ",E,E,N,N],[17,"TIOCGWINSZ",E,E,N,N],[17,"TIOCSWINSZ",E,E,N,N],[17,"FIONREAD",E,E,N,N],[17,"R15",E,E,N,N],[17,"R14",E,E,N,N],[17,"R13",E,E,N,N],[17,"R12",E,E,N,N],[17,"RBP",E,E,N,N],[17,"RBX",E,E,N,N],[17,"R11",E,E,N,N],[17,"R10",E,E,N,N],[17,"R9",E,E,N,N],[17,"R8",E,E,N,N],[17,"RAX",E,E,N,N],[17,"RCX",E,E,N,N],[17,"RDX",E,E,N,N],[17,"RSI",E,E,N,N],[17,"RDI",E,E,N,N],[17,"ORIG_RAX",E,E,N,N],[17,"RIP",E,E,N,N],[17,"CS",E,E,N,N],[17,"EFLAGS",E,E,N,N],[17,"RSP",E,E,N,N],[17,"SS",E,E,N,N],[17,"FS_BASE",E,E,N,N],[17,"GS_BASE",E,E,N,N],[17,"DS",E,E,N,N],[17,"ES",E,E,N,N],[17,"FS",E,E,N,N],[17,"GS",E,E,N,N],[17,"REG_R8",E,E,N,N],[17,"REG_R9",E,E,N,N],[17,"REG_R10",E,E,N,N],[17,"REG_R11",E,E,N,N],[17,"REG_R12",E,E,N,N],[17,"REG_R13",E,E,N,N],[17,"REG_R14",E,E,N,N],[17,"REG_R15",E,E,N,N],[17,"REG_RDI",E,E,N,N],[17,"REG_RSI",E,E,N,N],[17,"REG_RBP",E,E,N,N],[17,"REG_RBX",E,E,N,N],[17,"REG_RDX",E,E,N,N],[17,"REG_RAX",E,E,N,N],[17,"REG_RCX",E,E,N,N],[17,"REG_RSP",E,E,N,N],[17,"REG_RIP",E,E,N,N],[17,"REG_EFL",E,E,N,N],[17,"REG_CSGSFS",E,E,N,N],[17,"REG_ERR",E,E,N,N],[17,"REG_TRAPNO",E,E,N,N],[17,"REG_OLDMASK",E,E,N,N],[17,"REG_CR2",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T",E,E,N,N],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"SYS_read",E,E,N,N],[17,"SYS_write",E,E,N,N],[17,"SYS_open",E,E,N,N],[17,"SYS_close",E,E,N,N],[17,"SYS_stat",E,E,N,N],[17,"SYS_fstat",E,E,N,N],[17,"SYS_lstat",E,E,N,N],[17,"SYS_poll",E,E,N,N],[17,"SYS_lseek",E,E,N,N],[17,"SYS_mmap",E,E,N,N],[17,"SYS_mprotect",E,E,N,N],[17,"SYS_munmap",E,E,N,N],[17,"SYS_brk",E,E,N,N],[17,"SYS_rt_sigaction",E,E,N,N],[17,"SYS_rt_sigprocmask",E,E,N,N],[17,"SYS_rt_sigreturn",E,E,N,N],[17,"SYS_ioctl",E,E,N,N],[17,"SYS_pread64",E,E,N,N],[17,"SYS_pwrite64",E,E,N,N],[17,"SYS_readv",E,E,N,N],[17,"SYS_writev",E,E,N,N],[17,"SYS_access",E,E,N,N],[17,"SYS_pipe",E,E,N,N],[17,"SYS_select",E,E,N,N],[17,"SYS_sched_yield",E,E,N,N],[17,"SYS_mremap",E,E,N,N],[17,"SYS_msync",E,E,N,N],[17,"SYS_mincore",E,E,N,N],[17,"SYS_madvise",E,E,N,N],[17,"SYS_shmget",E,E,N,N],[17,"SYS_shmat",E,E,N,N],[17,"SYS_shmctl",E,E,N,N],[17,"SYS_dup",E,E,N,N],[17,"SYS_dup2",E,E,N,N],[17,"SYS_pause",E,E,N,N],[17,"SYS_nanosleep",E,E,N,N],[17,"SYS_getitimer",E,E,N,N],[17,"SYS_alarm",E,E,N,N],[17,"SYS_setitimer",E,E,N,N],[17,"SYS_getpid",E,E,N,N],[17,"SYS_sendfile",E,E,N,N],[17,"SYS_socket",E,E,N,N],[17,"SYS_connect",E,E,N,N],[17,"SYS_accept",E,E,N,N],[17,"SYS_sendto",E,E,N,N],[17,"SYS_recvfrom",E,E,N,N],[17,"SYS_sendmsg",E,E,N,N],[17,"SYS_recvmsg",E,E,N,N],[17,"SYS_shutdown",E,E,N,N],[17,"SYS_bind",E,E,N,N],[17,"SYS_listen",E,E,N,N],[17,"SYS_getsockname",E,E,N,N],[17,"SYS_getpeername",E,E,N,N],[17,"SYS_socketpair",E,E,N,N],[17,"SYS_setsockopt",E,E,N,N],[17,"SYS_getsockopt",E,E,N,N],[17,"SYS_clone",E,E,N,N],[17,"SYS_fork",E,E,N,N],[17,"SYS_vfork",E,E,N,N],[17,"SYS_execve",E,E,N,N],[17,"SYS_exit",E,E,N,N],[17,"SYS_wait4",E,E,N,N],[17,"SYS_kill",E,E,N,N],[17,"SYS_uname",E,E,N,N],[17,"SYS_semget",E,E,N,N],[17,"SYS_semop",E,E,N,N],[17,"SYS_semctl",E,E,N,N],[17,"SYS_shmdt",E,E,N,N],[17,"SYS_msgget",E,E,N,N],[17,"SYS_msgsnd",E,E,N,N],[17,"SYS_msgrcv",E,E,N,N],[17,"SYS_msgctl",E,E,N,N],[17,"SYS_fcntl",E,E,N,N],[17,"SYS_flock",E,E,N,N],[17,"SYS_fsync",E,E,N,N],[17,"SYS_fdatasync",E,E,N,N],[17,"SYS_truncate",E,E,N,N],[17,"SYS_ftruncate",E,E,N,N],[17,"SYS_getdents",E,E,N,N],[17,"SYS_getcwd",E,E,N,N],[17,"SYS_chdir",E,E,N,N],[17,"SYS_fchdir",E,E,N,N],[17,"SYS_rename",E,E,N,N],[17,"SYS_mkdir",E,E,N,N],[17,"SYS_rmdir",E,E,N,N],[17,"SYS_creat",E,E,N,N],[17,"SYS_link",E,E,N,N],[17,"SYS_unlink",E,E,N,N],[17,"SYS_symlink",E,E,N,N],[17,"SYS_readlink",E,E,N,N],[17,"SYS_chmod",E,E,N,N],[17,"SYS_fchmod",E,E,N,N],[17,"SYS_chown",E,E,N,N],[17,"SYS_fchown",E,E,N,N],[17,"SYS_lchown",E,E,N,N],[17,"SYS_umask",E,E,N,N],[17,"SYS_gettimeofday",E,E,N,N],[17,"SYS_getrlimit",E,E,N,N],[17,"SYS_getrusage",E,E,N,N],[17,"SYS_sysinfo",E,E,N,N],[17,"SYS_times",E,E,N,N],[17,"SYS_ptrace",E,E,N,N],[17,"SYS_getuid",E,E,N,N],[17,"SYS_syslog",E,E,N,N],[17,"SYS_getgid",E,E,N,N],[17,"SYS_setuid",E,E,N,N],[17,"SYS_setgid",E,E,N,N],[17,"SYS_geteuid",E,E,N,N],[17,"SYS_getegid",E,E,N,N],[17,"SYS_setpgid",E,E,N,N],[17,"SYS_getppid",E,E,N,N],[17,"SYS_getpgrp",E,E,N,N],[17,"SYS_setsid",E,E,N,N],[17,"SYS_setreuid",E,E,N,N],[17,"SYS_setregid",E,E,N,N],[17,"SYS_getgroups",E,E,N,N],[17,"SYS_setgroups",E,E,N,N],[17,"SYS_setresuid",E,E,N,N],[17,"SYS_getresuid",E,E,N,N],[17,"SYS_setresgid",E,E,N,N],[17,"SYS_getresgid",E,E,N,N],[17,"SYS_getpgid",E,E,N,N],[17,"SYS_setfsuid",E,E,N,N],[17,"SYS_setfsgid",E,E,N,N],[17,"SYS_getsid",E,E,N,N],[17,"SYS_capget",E,E,N,N],[17,"SYS_capset",E,E,N,N],[17,"SYS_rt_sigpending",E,E,N,N],[17,"SYS_rt_sigtimedwait",E,E,N,N],[17,"SYS_rt_sigqueueinfo",E,E,N,N],[17,"SYS_rt_sigsuspend",E,E,N,N],[17,"SYS_sigaltstack",E,E,N,N],[17,"SYS_utime",E,E,N,N],[17,"SYS_mknod",E,E,N,N],[17,"SYS_uselib",E,E,N,N],[17,"SYS_personality",E,E,N,N],[17,"SYS_ustat",E,E,N,N],[17,"SYS_statfs",E,E,N,N],[17,"SYS_fstatfs",E,E,N,N],[17,"SYS_sysfs",E,E,N,N],[17,"SYS_getpriority",E,E,N,N],[17,"SYS_setpriority",E,E,N,N],[17,"SYS_sched_setparam",E,E,N,N],[17,"SYS_sched_getparam",E,E,N,N],[17,"SYS_sched_setscheduler",E,E,N,N],[17,"SYS_sched_getscheduler",E,E,N,N],[17,"SYS_sched_get_priority_max",E,E,N,N],[17,"SYS_sched_get_priority_min",E,E,N,N],[17,"SYS_sched_rr_get_interval",E,E,N,N],[17,"SYS_mlock",E,E,N,N],[17,"SYS_munlock",E,E,N,N],[17,"SYS_mlockall",E,E,N,N],[17,"SYS_munlockall",E,E,N,N],[17,"SYS_vhangup",E,E,N,N],[17,"SYS_modify_ldt",E,E,N,N],[17,"SYS_pivot_root",E,E,N,N],[17,"SYS__sysctl",E,E,N,N],[17,"SYS_prctl",E,E,N,N],[17,"SYS_arch_prctl",E,E,N,N],[17,"SYS_adjtimex",E,E,N,N],[17,"SYS_setrlimit",E,E,N,N],[17,"SYS_chroot",E,E,N,N],[17,"SYS_sync",E,E,N,N],[17,"SYS_acct",E,E,N,N],[17,"SYS_settimeofday",E,E,N,N],[17,"SYS_mount",E,E,N,N],[17,"SYS_umount2",E,E,N,N],[17,"SYS_swapon",E,E,N,N],[17,"SYS_swapoff",E,E,N,N],[17,"SYS_reboot",E,E,N,N],[17,"SYS_sethostname",E,E,N,N],[17,"SYS_setdomainname",E,E,N,N],[17,"SYS_iopl",E,E,N,N],[17,"SYS_ioperm",E,E,N,N],[17,"SYS_create_module",E,E,N,N],[17,"SYS_init_module",E,E,N,N],[17,"SYS_delete_module",E,E,N,N],[17,"SYS_get_kernel_syms",E,E,N,N],[17,"SYS_query_module",E,E,N,N],[17,"SYS_quotactl",E,E,N,N],[17,"SYS_nfsservctl",E,E,N,N],[17,"SYS_getpmsg",E,E,N,N],[17,"SYS_putpmsg",E,E,N,N],[17,"SYS_afs_syscall",E,E,N,N],[17,"SYS_tuxcall",E,E,N,N],[17,"SYS_security",E,E,N,N],[17,"SYS_gettid",E,E,N,N],[17,"SYS_readahead",E,E,N,N],[17,"SYS_setxattr",E,E,N,N],[17,"SYS_lsetxattr",E,E,N,N],[17,"SYS_fsetxattr",E,E,N,N],[17,"SYS_getxattr",E,E,N,N],[17,"SYS_lgetxattr",E,E,N,N],[17,"SYS_fgetxattr",E,E,N,N],[17,"SYS_listxattr",E,E,N,N],[17,"SYS_llistxattr",E,E,N,N],[17,"SYS_flistxattr",E,E,N,N],[17,"SYS_removexattr",E,E,N,N],[17,"SYS_lremovexattr",E,E,N,N],[17,"SYS_fremovexattr",E,E,N,N],[17,"SYS_tkill",E,E,N,N],[17,"SYS_time",E,E,N,N],[17,"SYS_futex",E,E,N,N],[17,"SYS_sched_setaffinity",E,E,N,N],[17,"SYS_sched_getaffinity",E,E,N,N],[17,"SYS_set_thread_area",E,E,N,N],[17,"SYS_io_setup",E,E,N,N],[17,"SYS_io_destroy",E,E,N,N],[17,"SYS_io_getevents",E,E,N,N],[17,"SYS_io_submit",E,E,N,N],[17,"SYS_io_cancel",E,E,N,N],[17,"SYS_get_thread_area",E,E,N,N],[17,"SYS_lookup_dcookie",E,E,N,N],[17,"SYS_epoll_create",E,E,N,N],[17,"SYS_epoll_ctl_old",E,E,N,N],[17,"SYS_epoll_wait_old",E,E,N,N],[17,"SYS_remap_file_pages",E,E,N,N],[17,"SYS_getdents64",E,E,N,N],[17,"SYS_set_tid_address",E,E,N,N],[17,"SYS_restart_syscall",E,E,N,N],[17,"SYS_semtimedop",E,E,N,N],[17,"SYS_fadvise64",E,E,N,N],[17,"SYS_timer_create",E,E,N,N],[17,"SYS_timer_settime",E,E,N,N],[17,"SYS_timer_gettime",E,E,N,N],[17,"SYS_timer_getoverrun",E,E,N,N],[17,"SYS_timer_delete",E,E,N,N],[17,"SYS_clock_settime",E,E,N,N],[17,"SYS_clock_gettime",E,E,N,N],[17,"SYS_clock_getres",E,E,N,N],[17,"SYS_clock_nanosleep",E,E,N,N],[17,"SYS_exit_group",E,E,N,N],[17,"SYS_epoll_wait",E,E,N,N],[17,"SYS_epoll_ctl",E,E,N,N],[17,"SYS_tgkill",E,E,N,N],[17,"SYS_utimes",E,E,N,N],[17,"SYS_vserver",E,E,N,N],[17,"SYS_mbind",E,E,N,N],[17,"SYS_set_mempolicy",E,E,N,N],[17,"SYS_get_mempolicy",E,E,N,N],[17,"SYS_mq_open",E,E,N,N],[17,"SYS_mq_unlink",E,E,N,N],[17,"SYS_mq_timedsend",E,E,N,N],[17,"SYS_mq_timedreceive",E,E,N,N],[17,"SYS_mq_notify",E,E,N,N],[17,"SYS_mq_getsetattr",E,E,N,N],[17,"SYS_kexec_load",E,E,N,N],[17,"SYS_waitid",E,E,N,N],[17,"SYS_add_key",E,E,N,N],[17,"SYS_request_key",E,E,N,N],[17,"SYS_keyctl",E,E,N,N],[17,"SYS_ioprio_set",E,E,N,N],[17,"SYS_ioprio_get",E,E,N,N],[17,"SYS_inotify_init",E,E,N,N],[17,"SYS_inotify_add_watch",E,E,N,N],[17,"SYS_inotify_rm_watch",E,E,N,N],[17,"SYS_migrate_pages",E,E,N,N],[17,"SYS_openat",E,E,N,N],[17,"SYS_mkdirat",E,E,N,N],[17,"SYS_mknodat",E,E,N,N],[17,"SYS_fchownat",E,E,N,N],[17,"SYS_futimesat",E,E,N,N],[17,"SYS_newfstatat",E,E,N,N],[17,"SYS_unlinkat",E,E,N,N],[17,"SYS_renameat",E,E,N,N],[17,"SYS_linkat",E,E,N,N],[17,"SYS_symlinkat",E,E,N,N],[17,"SYS_readlinkat",E,E,N,N],[17,"SYS_fchmodat",E,E,N,N],[17,"SYS_faccessat",E,E,N,N],[17,"SYS_pselect6",E,E,N,N],[17,"SYS_ppoll",E,E,N,N],[17,"SYS_unshare",E,E,N,N],[17,"SYS_set_robust_list",E,E,N,N],[17,"SYS_get_robust_list",E,E,N,N],[17,"SYS_splice",E,E,N,N],[17,"SYS_tee",E,E,N,N],[17,"SYS_sync_file_range",E,E,N,N],[17,"SYS_vmsplice",E,E,N,N],[17,"SYS_move_pages",E,E,N,N],[17,"SYS_utimensat",E,E,N,N],[17,"SYS_epoll_pwait",E,E,N,N],[17,"SYS_signalfd",E,E,N,N],[17,"SYS_timerfd_create",E,E,N,N],[17,"SYS_eventfd",E,E,N,N],[17,"SYS_fallocate",E,E,N,N],[17,"SYS_timerfd_settime",E,E,N,N],[17,"SYS_timerfd_gettime",E,E,N,N],[17,"SYS_accept4",E,E,N,N],[17,"SYS_signalfd4",E,E,N,N],[17,"SYS_eventfd2",E,E,N,N],[17,"SYS_epoll_create1",E,E,N,N],[17,"SYS_dup3",E,E,N,N],[17,"SYS_pipe2",E,E,N,N],[17,"SYS_inotify_init1",E,E,N,N],[17,"SYS_preadv",E,E,N,N],[17,"SYS_pwritev",E,E,N,N],[17,"SYS_rt_tgsigqueueinfo",E,E,N,N],[17,"SYS_perf_event_open",E,E,N,N],[17,"SYS_recvmmsg",E,E,N,N],[17,"SYS_fanotify_init",E,E,N,N],[17,"SYS_fanotify_mark",E,E,N,N],[17,"SYS_prlimit64",E,E,N,N],[17,"SYS_name_to_handle_at",E,E,N,N],[17,"SYS_open_by_handle_at",E,E,N,N],[17,"SYS_clock_adjtime",E,E,N,N],[17,"SYS_syncfs",E,E,N,N],[17,"SYS_sendmmsg",E,E,N,N],[17,"SYS_setns",E,E,N,N],[17,"SYS_getcpu",E,E,N,N],[17,"SYS_process_vm_readv",E,E,N,N],[17,"SYS_process_vm_writev",E,E,N,N],[17,"SYS_kcmp",E,E,N,N],[17,"SYS_finit_module",E,E,N,N],[17,"SYS_sched_setattr",E,E,N,N],[17,"SYS_sched_getattr",E,E,N,N],[17,"SYS_renameat2",E,E,N,N],[17,"SYS_seccomp",E,E,N,N],[17,"SYS_getrandom",E,E,N,N],[17,"SYS_memfd_create",E,E,N,N],[17,"SYS_kexec_file_load",E,E,N,N],[17,"SYS_bpf",E,E,N,N],[17,"SYS_execveat",E,E,N,N],[17,"SYS_userfaultfd",E,E,N,N],[17,"SYS_membarrier",E,E,N,N],[17,"SYS_mlock2",E,E,N,N],[17,"SYS_copy_file_range",E,E,N,N],[17,"SYS_preadv2",E,E,N,N],[17,"SYS_pwritev2",E,E,N,N],[17,"SYS_pkey_mprotect",E,E,N,N],[17,"SYS_pkey_alloc",E,E,N,N],[17,"SYS_pkey_free",E,E,N,N],[17,"SYS_statx",E,E,N,N],[11,"from",E,E,129,[[[T]],[T]]],[11,R[8],E,E,129,[[[U]],[R[2]]]],[11,R[9],E,E,129,[[],[R[2]]]],[11,"into",E,E,129,[[],[U]]],[11,R[29],E,E,129,[[["self"]],[T]]],[11,R[10],E,E,129,[[["self"]],[T]]],[11,R[15],E,E,129,[[["self"]],[R[30]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"into",E,E,2,[[],[U]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"into",E,E,3,[[],[U]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,"into",E,E,4,[[],[U]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[30]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,"into",E,E,5,[[],[U]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[30]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,"into",E,E,6,[[],[U]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[30]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,"into",E,E,7,[[],[U]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[30]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,"into",E,E,8,[[],[U]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[R[30]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,"into",E,E,9,[[],[U]]],[11,R[29],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"]],[R[30]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,"into",E,E,10,[[],[U]]],[11,R[29],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[15],E,E,10,[[["self"]],[R[30]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[8],E,E,11,[[[U]],[R[2]]]],[11,R[9],E,E,11,[[],[R[2]]]],[11,"into",E,E,11,[[],[U]]],[11,R[29],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[15],E,E,11,[[["self"]],[R[30]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[8],E,E,12,[[[U]],[R[2]]]],[11,R[9],E,E,12,[[],[R[2]]]],[11,"into",E,E,12,[[],[U]]],[11,R[29],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[15],E,E,12,[[["self"]],[R[30]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[8],E,E,13,[[[U]],[R[2]]]],[11,R[9],E,E,13,[[],[R[2]]]],[11,"into",E,E,13,[[],[U]]],[11,R[29],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[15],E,E,13,[[["self"]],[R[30]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[8],E,E,14,[[[U]],[R[2]]]],[11,R[9],E,E,14,[[],[R[2]]]],[11,"into",E,E,14,[[],[U]]],[11,R[29],E,E,14,[[["self"]],[T]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[15],E,E,14,[[["self"]],[R[30]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[8],E,E,15,[[[U]],[R[2]]]],[11,R[9],E,E,15,[[],[R[2]]]],[11,"into",E,E,15,[[],[U]]],[11,R[29],E,E,15,[[["self"]],[T]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[15],E,E,15,[[["self"]],[R[30]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[8],E,E,16,[[[U]],[R[2]]]],[11,R[9],E,E,16,[[],[R[2]]]],[11,"into",E,E,16,[[],[U]]],[11,R[29],E,E,16,[[["self"]],[T]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[15],E,E,16,[[["self"]],[R[30]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[8],E,E,17,[[[U]],[R[2]]]],[11,R[9],E,E,17,[[],[R[2]]]],[11,"into",E,E,17,[[],[U]]],[11,R[29],E,E,17,[[["self"]],[T]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[15],E,E,17,[[["self"]],[R[30]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[8],E,E,18,[[[U]],[R[2]]]],[11,R[9],E,E,18,[[],[R[2]]]],[11,"into",E,E,18,[[],[U]]],[11,R[29],E,E,18,[[["self"]],[T]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[15],E,E,18,[[["self"]],[R[30]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[8],E,E,19,[[[U]],[R[2]]]],[11,R[9],E,E,19,[[],[R[2]]]],[11,"into",E,E,19,[[],[U]]],[11,R[29],E,E,19,[[["self"]],[T]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[15],E,E,19,[[["self"]],[R[30]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[8],E,E,20,[[[U]],[R[2]]]],[11,R[9],E,E,20,[[],[R[2]]]],[11,"into",E,E,20,[[],[U]]],[11,R[29],E,E,20,[[["self"]],[T]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[15],E,E,20,[[["self"]],[R[30]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[8],E,E,21,[[[U]],[R[2]]]],[11,R[9],E,E,21,[[],[R[2]]]],[11,"into",E,E,21,[[],[U]]],[11,R[29],E,E,21,[[["self"]],[T]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[15],E,E,21,[[["self"]],[R[30]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[8],E,E,22,[[[U]],[R[2]]]],[11,R[9],E,E,22,[[],[R[2]]]],[11,"into",E,E,22,[[],[U]]],[11,R[29],E,E,22,[[["self"]],[T]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[15],E,E,22,[[["self"]],[R[30]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[8],E,E,23,[[[U]],[R[2]]]],[11,R[9],E,E,23,[[],[R[2]]]],[11,"into",E,E,23,[[],[U]]],[11,R[29],E,E,23,[[["self"]],[T]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[15],E,E,23,[[["self"]],[R[30]]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[8],E,E,130,[[[U]],[R[2]]]],[11,R[9],E,E,130,[[],[R[2]]]],[11,"into",E,E,130,[[],[U]]],[11,R[29],E,E,130,[[["self"]],[T]]],[11,R[10],E,E,130,[[["self"]],[T]]],[11,R[15],E,E,130,[[["self"]],[R[30]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[8],E,E,24,[[[U]],[R[2]]]],[11,R[9],E,E,24,[[],[R[2]]]],[11,"into",E,E,24,[[],[U]]],[11,R[29],E,E,24,[[["self"]],[T]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[15],E,E,24,[[["self"]],[R[30]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[8],E,E,25,[[[U]],[R[2]]]],[11,R[9],E,E,25,[[],[R[2]]]],[11,"into",E,E,25,[[],[U]]],[11,R[29],E,E,25,[[["self"]],[T]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[15],E,E,25,[[["self"]],[R[30]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[8],E,E,26,[[[U]],[R[2]]]],[11,R[9],E,E,26,[[],[R[2]]]],[11,"into",E,E,26,[[],[U]]],[11,R[29],E,E,26,[[["self"]],[T]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[15],E,E,26,[[["self"]],[R[30]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[8],E,E,27,[[[U]],[R[2]]]],[11,R[9],E,E,27,[[],[R[2]]]],[11,"into",E,E,27,[[],[U]]],[11,R[29],E,E,27,[[["self"]],[T]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[15],E,E,27,[[["self"]],[R[30]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[8],E,E,28,[[[U]],[R[2]]]],[11,R[9],E,E,28,[[],[R[2]]]],[11,"into",E,E,28,[[],[U]]],[11,R[29],E,E,28,[[["self"]],[T]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[15],E,E,28,[[["self"]],[R[30]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[8],E,E,29,[[[U]],[R[2]]]],[11,R[9],E,E,29,[[],[R[2]]]],[11,"into",E,E,29,[[],[U]]],[11,R[29],E,E,29,[[["self"]],[T]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[15],E,E,29,[[["self"]],[R[30]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[8],E,E,30,[[[U]],[R[2]]]],[11,R[9],E,E,30,[[],[R[2]]]],[11,"into",E,E,30,[[],[U]]],[11,R[29],E,E,30,[[["self"]],[T]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[15],E,E,30,[[["self"]],[R[30]]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[8],E,E,131,[[[U]],[R[2]]]],[11,R[9],E,E,131,[[],[R[2]]]],[11,"into",E,E,131,[[],[U]]],[11,R[29],E,E,131,[[["self"]],[T]]],[11,R[10],E,E,131,[[["self"]],[T]]],[11,R[15],E,E,131,[[["self"]],[R[30]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[8],E,E,31,[[[U]],[R[2]]]],[11,R[9],E,E,31,[[],[R[2]]]],[11,"into",E,E,31,[[],[U]]],[11,R[29],E,E,31,[[["self"]],[T]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[15],E,E,31,[[["self"]],[R[30]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[8],E,E,32,[[[U]],[R[2]]]],[11,R[9],E,E,32,[[],[R[2]]]],[11,"into",E,E,32,[[],[U]]],[11,R[29],E,E,32,[[["self"]],[T]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[15],E,E,32,[[["self"]],[R[30]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[8],E,E,33,[[[U]],[R[2]]]],[11,R[9],E,E,33,[[],[R[2]]]],[11,"into",E,E,33,[[],[U]]],[11,R[29],E,E,33,[[["self"]],[T]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[15],E,E,33,[[["self"]],[R[30]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[8],E,E,34,[[[U]],[R[2]]]],[11,R[9],E,E,34,[[],[R[2]]]],[11,"into",E,E,34,[[],[U]]],[11,R[29],E,E,34,[[["self"]],[T]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[15],E,E,34,[[["self"]],[R[30]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[8],E,E,35,[[[U]],[R[2]]]],[11,R[9],E,E,35,[[],[R[2]]]],[11,"into",E,E,35,[[],[U]]],[11,R[29],E,E,35,[[["self"]],[T]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[15],E,E,35,[[["self"]],[R[30]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[8],E,E,36,[[[U]],[R[2]]]],[11,R[9],E,E,36,[[],[R[2]]]],[11,"into",E,E,36,[[],[U]]],[11,R[29],E,E,36,[[["self"]],[T]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[15],E,E,36,[[["self"]],[R[30]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[8],E,E,37,[[[U]],[R[2]]]],[11,R[9],E,E,37,[[],[R[2]]]],[11,"into",E,E,37,[[],[U]]],[11,R[29],E,E,37,[[["self"]],[T]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[15],E,E,37,[[["self"]],[R[30]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[8],E,E,38,[[[U]],[R[2]]]],[11,R[9],E,E,38,[[],[R[2]]]],[11,"into",E,E,38,[[],[U]]],[11,R[29],E,E,38,[[["self"]],[T]]],[11,R[10],E,E,38,[[["self"]],[T]]],[11,R[15],E,E,38,[[["self"]],[R[30]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[8],E,E,39,[[[U]],[R[2]]]],[11,R[9],E,E,39,[[],[R[2]]]],[11,"into",E,E,39,[[],[U]]],[11,R[29],E,E,39,[[["self"]],[T]]],[11,R[10],E,E,39,[[["self"]],[T]]],[11,R[15],E,E,39,[[["self"]],[R[30]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[8],E,E,40,[[[U]],[R[2]]]],[11,R[9],E,E,40,[[],[R[2]]]],[11,"into",E,E,40,[[],[U]]],[11,R[29],E,E,40,[[["self"]],[T]]],[11,R[10],E,E,40,[[["self"]],[T]]],[11,R[15],E,E,40,[[["self"]],[R[30]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[8],E,E,41,[[[U]],[R[2]]]],[11,R[9],E,E,41,[[],[R[2]]]],[11,"into",E,E,41,[[],[U]]],[11,R[29],E,E,41,[[["self"]],[T]]],[11,R[10],E,E,41,[[["self"]],[T]]],[11,R[15],E,E,41,[[["self"]],[R[30]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[8],E,E,42,[[[U]],[R[2]]]],[11,R[9],E,E,42,[[],[R[2]]]],[11,"into",E,E,42,[[],[U]]],[11,R[29],E,E,42,[[["self"]],[T]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[15],E,E,42,[[["self"]],[R[30]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[8],E,E,43,[[[U]],[R[2]]]],[11,R[9],E,E,43,[[],[R[2]]]],[11,"into",E,E,43,[[],[U]]],[11,R[29],E,E,43,[[["self"]],[T]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[15],E,E,43,[[["self"]],[R[30]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[8],E,E,44,[[[U]],[R[2]]]],[11,R[9],E,E,44,[[],[R[2]]]],[11,"into",E,E,44,[[],[U]]],[11,R[29],E,E,44,[[["self"]],[T]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[15],E,E,44,[[["self"]],[R[30]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[8],E,E,45,[[[U]],[R[2]]]],[11,R[9],E,E,45,[[],[R[2]]]],[11,"into",E,E,45,[[],[U]]],[11,R[29],E,E,45,[[["self"]],[T]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[15],E,E,45,[[["self"]],[R[30]]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[8],E,E,132,[[[U]],[R[2]]]],[11,R[9],E,E,132,[[],[R[2]]]],[11,"into",E,E,132,[[],[U]]],[11,R[29],E,E,132,[[["self"]],[T]]],[11,R[10],E,E,132,[[["self"]],[T]]],[11,R[15],E,E,132,[[["self"]],[R[30]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[8],E,E,46,[[[U]],[R[2]]]],[11,R[9],E,E,46,[[],[R[2]]]],[11,"into",E,E,46,[[],[U]]],[11,R[29],E,E,46,[[["self"]],[T]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[15],E,E,46,[[["self"]],[R[30]]]],[11,"from",E,E,133,[[[T]],[T]]],[11,R[8],E,E,133,[[[U]],[R[2]]]],[11,R[9],E,E,133,[[],[R[2]]]],[11,"into",E,E,133,[[],[U]]],[11,R[29],E,E,133,[[["self"]],[T]]],[11,R[10],E,E,133,[[["self"]],[T]]],[11,R[15],E,E,133,[[["self"]],[R[30]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[8],E,E,47,[[[U]],[R[2]]]],[11,R[9],E,E,47,[[],[R[2]]]],[11,"into",E,E,47,[[],[U]]],[11,R[29],E,E,47,[[["self"]],[T]]],[11,R[10],E,E,47,[[["self"]],[T]]],[11,R[15],E,E,47,[[["self"]],[R[30]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[8],E,E,48,[[[U]],[R[2]]]],[11,R[9],E,E,48,[[],[R[2]]]],[11,"into",E,E,48,[[],[U]]],[11,R[29],E,E,48,[[["self"]],[T]]],[11,R[10],E,E,48,[[["self"]],[T]]],[11,R[15],E,E,48,[[["self"]],[R[30]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[8],E,E,49,[[[U]],[R[2]]]],[11,R[9],E,E,49,[[],[R[2]]]],[11,"into",E,E,49,[[],[U]]],[11,R[29],E,E,49,[[["self"]],[T]]],[11,R[10],E,E,49,[[["self"]],[T]]],[11,R[15],E,E,49,[[["self"]],[R[30]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[8],E,E,50,[[[U]],[R[2]]]],[11,R[9],E,E,50,[[],[R[2]]]],[11,"into",E,E,50,[[],[U]]],[11,R[29],E,E,50,[[["self"]],[T]]],[11,R[10],E,E,50,[[["self"]],[T]]],[11,R[15],E,E,50,[[["self"]],[R[30]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[8],E,E,51,[[[U]],[R[2]]]],[11,R[9],E,E,51,[[],[R[2]]]],[11,"into",E,E,51,[[],[U]]],[11,R[29],E,E,51,[[["self"]],[T]]],[11,R[10],E,E,51,[[["self"]],[T]]],[11,R[15],E,E,51,[[["self"]],[R[30]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[8],E,E,52,[[[U]],[R[2]]]],[11,R[9],E,E,52,[[],[R[2]]]],[11,"into",E,E,52,[[],[U]]],[11,R[29],E,E,52,[[["self"]],[T]]],[11,R[10],E,E,52,[[["self"]],[T]]],[11,R[15],E,E,52,[[["self"]],[R[30]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[8],E,E,53,[[[U]],[R[2]]]],[11,R[9],E,E,53,[[],[R[2]]]],[11,"into",E,E,53,[[],[U]]],[11,R[29],E,E,53,[[["self"]],[T]]],[11,R[10],E,E,53,[[["self"]],[T]]],[11,R[15],E,E,53,[[["self"]],[R[30]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[8],E,E,54,[[[U]],[R[2]]]],[11,R[9],E,E,54,[[],[R[2]]]],[11,"into",E,E,54,[[],[U]]],[11,R[29],E,E,54,[[["self"]],[T]]],[11,R[10],E,E,54,[[["self"]],[T]]],[11,R[15],E,E,54,[[["self"]],[R[30]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[8],E,E,55,[[[U]],[R[2]]]],[11,R[9],E,E,55,[[],[R[2]]]],[11,"into",E,E,55,[[],[U]]],[11,R[29],E,E,55,[[["self"]],[T]]],[11,R[10],E,E,55,[[["self"]],[T]]],[11,R[15],E,E,55,[[["self"]],[R[30]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[8],E,E,56,[[[U]],[R[2]]]],[11,R[9],E,E,56,[[],[R[2]]]],[11,"into",E,E,56,[[],[U]]],[11,R[29],E,E,56,[[["self"]],[T]]],[11,R[10],E,E,56,[[["self"]],[T]]],[11,R[15],E,E,56,[[["self"]],[R[30]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[8],E,E,57,[[[U]],[R[2]]]],[11,R[9],E,E,57,[[],[R[2]]]],[11,"into",E,E,57,[[],[U]]],[11,R[29],E,E,57,[[["self"]],[T]]],[11,R[10],E,E,57,[[["self"]],[T]]],[11,R[15],E,E,57,[[["self"]],[R[30]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[8],E,E,58,[[[U]],[R[2]]]],[11,R[9],E,E,58,[[],[R[2]]]],[11,"into",E,E,58,[[],[U]]],[11,R[29],E,E,58,[[["self"]],[T]]],[11,R[10],E,E,58,[[["self"]],[T]]],[11,R[15],E,E,58,[[["self"]],[R[30]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[8],E,E,59,[[[U]],[R[2]]]],[11,R[9],E,E,59,[[],[R[2]]]],[11,"into",E,E,59,[[],[U]]],[11,R[29],E,E,59,[[["self"]],[T]]],[11,R[10],E,E,59,[[["self"]],[T]]],[11,R[15],E,E,59,[[["self"]],[R[30]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[8],E,E,60,[[[U]],[R[2]]]],[11,R[9],E,E,60,[[],[R[2]]]],[11,"into",E,E,60,[[],[U]]],[11,R[29],E,E,60,[[["self"]],[T]]],[11,R[10],E,E,60,[[["self"]],[T]]],[11,R[15],E,E,60,[[["self"]],[R[30]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[8],E,E,61,[[[U]],[R[2]]]],[11,R[9],E,E,61,[[],[R[2]]]],[11,"into",E,E,61,[[],[U]]],[11,R[29],E,E,61,[[["self"]],[T]]],[11,R[10],E,E,61,[[["self"]],[T]]],[11,R[15],E,E,61,[[["self"]],[R[30]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[8],E,E,62,[[[U]],[R[2]]]],[11,R[9],E,E,62,[[],[R[2]]]],[11,"into",E,E,62,[[],[U]]],[11,R[29],E,E,62,[[["self"]],[T]]],[11,R[10],E,E,62,[[["self"]],[T]]],[11,R[15],E,E,62,[[["self"]],[R[30]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[8],E,E,63,[[[U]],[R[2]]]],[11,R[9],E,E,63,[[],[R[2]]]],[11,"into",E,E,63,[[],[U]]],[11,R[29],E,E,63,[[["self"]],[T]]],[11,R[10],E,E,63,[[["self"]],[T]]],[11,R[15],E,E,63,[[["self"]],[R[30]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[8],E,E,64,[[[U]],[R[2]]]],[11,R[9],E,E,64,[[],[R[2]]]],[11,"into",E,E,64,[[],[U]]],[11,R[29],E,E,64,[[["self"]],[T]]],[11,R[10],E,E,64,[[["self"]],[T]]],[11,R[15],E,E,64,[[["self"]],[R[30]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[8],E,E,65,[[[U]],[R[2]]]],[11,R[9],E,E,65,[[],[R[2]]]],[11,"into",E,E,65,[[],[U]]],[11,R[29],E,E,65,[[["self"]],[T]]],[11,R[10],E,E,65,[[["self"]],[T]]],[11,R[15],E,E,65,[[["self"]],[R[30]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[8],E,E,66,[[[U]],[R[2]]]],[11,R[9],E,E,66,[[],[R[2]]]],[11,"into",E,E,66,[[],[U]]],[11,R[29],E,E,66,[[["self"]],[T]]],[11,R[10],E,E,66,[[["self"]],[T]]],[11,R[15],E,E,66,[[["self"]],[R[30]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[8],E,E,67,[[[U]],[R[2]]]],[11,R[9],E,E,67,[[],[R[2]]]],[11,"into",E,E,67,[[],[U]]],[11,R[29],E,E,67,[[["self"]],[T]]],[11,R[10],E,E,67,[[["self"]],[T]]],[11,R[15],E,E,67,[[["self"]],[R[30]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[8],E,E,68,[[[U]],[R[2]]]],[11,R[9],E,E,68,[[],[R[2]]]],[11,"into",E,E,68,[[],[U]]],[11,R[29],E,E,68,[[["self"]],[T]]],[11,R[10],E,E,68,[[["self"]],[T]]],[11,R[15],E,E,68,[[["self"]],[R[30]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[8],E,E,69,[[[U]],[R[2]]]],[11,R[9],E,E,69,[[],[R[2]]]],[11,"into",E,E,69,[[],[U]]],[11,R[29],E,E,69,[[["self"]],[T]]],[11,R[10],E,E,69,[[["self"]],[T]]],[11,R[15],E,E,69,[[["self"]],[R[30]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[8],E,E,70,[[[U]],[R[2]]]],[11,R[9],E,E,70,[[],[R[2]]]],[11,"into",E,E,70,[[],[U]]],[11,R[29],E,E,70,[[["self"]],[T]]],[11,R[10],E,E,70,[[["self"]],[T]]],[11,R[15],E,E,70,[[["self"]],[R[30]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[8],E,E,71,[[[U]],[R[2]]]],[11,R[9],E,E,71,[[],[R[2]]]],[11,"into",E,E,71,[[],[U]]],[11,R[29],E,E,71,[[["self"]],[T]]],[11,R[10],E,E,71,[[["self"]],[T]]],[11,R[15],E,E,71,[[["self"]],[R[30]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[8],E,E,72,[[[U]],[R[2]]]],[11,R[9],E,E,72,[[],[R[2]]]],[11,"into",E,E,72,[[],[U]]],[11,R[29],E,E,72,[[["self"]],[T]]],[11,R[10],E,E,72,[[["self"]],[T]]],[11,R[15],E,E,72,[[["self"]],[R[30]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[8],E,E,73,[[[U]],[R[2]]]],[11,R[9],E,E,73,[[],[R[2]]]],[11,"into",E,E,73,[[],[U]]],[11,R[29],E,E,73,[[["self"]],[T]]],[11,R[10],E,E,73,[[["self"]],[T]]],[11,R[15],E,E,73,[[["self"]],[R[30]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[8],E,E,74,[[[U]],[R[2]]]],[11,R[9],E,E,74,[[],[R[2]]]],[11,"into",E,E,74,[[],[U]]],[11,R[29],E,E,74,[[["self"]],[T]]],[11,R[10],E,E,74,[[["self"]],[T]]],[11,R[15],E,E,74,[[["self"]],[R[30]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[8],E,E,75,[[[U]],[R[2]]]],[11,R[9],E,E,75,[[],[R[2]]]],[11,"into",E,E,75,[[],[U]]],[11,R[29],E,E,75,[[["self"]],[T]]],[11,R[10],E,E,75,[[["self"]],[T]]],[11,R[15],E,E,75,[[["self"]],[R[30]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[8],E,E,76,[[[U]],[R[2]]]],[11,R[9],E,E,76,[[],[R[2]]]],[11,"into",E,E,76,[[],[U]]],[11,R[29],E,E,76,[[["self"]],[T]]],[11,R[10],E,E,76,[[["self"]],[T]]],[11,R[15],E,E,76,[[["self"]],[R[30]]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[8],E,E,134,[[[U]],[R[2]]]],[11,R[9],E,E,134,[[],[R[2]]]],[11,"into",E,E,134,[[],[U]]],[11,R[29],E,E,134,[[["self"]],[T]]],[11,R[10],E,E,134,[[["self"]],[T]]],[11,R[15],E,E,134,[[["self"]],[R[30]]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[8],E,E,135,[[[U]],[R[2]]]],[11,R[9],E,E,135,[[],[R[2]]]],[11,"into",E,E,135,[[],[U]]],[11,R[29],E,E,135,[[["self"]],[T]]],[11,R[10],E,E,135,[[["self"]],[T]]],[11,R[15],E,E,135,[[["self"]],[R[30]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[8],E,E,77,[[[U]],[R[2]]]],[11,R[9],E,E,77,[[],[R[2]]]],[11,"into",E,E,77,[[],[U]]],[11,R[29],E,E,77,[[["self"]],[T]]],[11,R[10],E,E,77,[[["self"]],[T]]],[11,R[15],E,E,77,[[["self"]],[R[30]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[8],E,E,78,[[[U]],[R[2]]]],[11,R[9],E,E,78,[[],[R[2]]]],[11,"into",E,E,78,[[],[U]]],[11,R[29],E,E,78,[[["self"]],[T]]],[11,R[10],E,E,78,[[["self"]],[T]]],[11,R[15],E,E,78,[[["self"]],[R[30]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[8],E,E,79,[[[U]],[R[2]]]],[11,R[9],E,E,79,[[],[R[2]]]],[11,"into",E,E,79,[[],[U]]],[11,R[29],E,E,79,[[["self"]],[T]]],[11,R[10],E,E,79,[[["self"]],[T]]],[11,R[15],E,E,79,[[["self"]],[R[30]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[8],E,E,80,[[[U]],[R[2]]]],[11,R[9],E,E,80,[[],[R[2]]]],[11,"into",E,E,80,[[],[U]]],[11,R[29],E,E,80,[[["self"]],[T]]],[11,R[10],E,E,80,[[["self"]],[T]]],[11,R[15],E,E,80,[[["self"]],[R[30]]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[8],E,E,81,[[[U]],[R[2]]]],[11,R[9],E,E,81,[[],[R[2]]]],[11,"into",E,E,81,[[],[U]]],[11,R[29],E,E,81,[[["self"]],[T]]],[11,R[10],E,E,81,[[["self"]],[T]]],[11,R[15],E,E,81,[[["self"]],[R[30]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[8],E,E,82,[[[U]],[R[2]]]],[11,R[9],E,E,82,[[],[R[2]]]],[11,"into",E,E,82,[[],[U]]],[11,R[29],E,E,82,[[["self"]],[T]]],[11,R[10],E,E,82,[[["self"]],[T]]],[11,R[15],E,E,82,[[["self"]],[R[30]]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[8],E,E,83,[[[U]],[R[2]]]],[11,R[9],E,E,83,[[],[R[2]]]],[11,"into",E,E,83,[[],[U]]],[11,R[29],E,E,83,[[["self"]],[T]]],[11,R[10],E,E,83,[[["self"]],[T]]],[11,R[15],E,E,83,[[["self"]],[R[30]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[8],E,E,84,[[[U]],[R[2]]]],[11,R[9],E,E,84,[[],[R[2]]]],[11,"into",E,E,84,[[],[U]]],[11,R[29],E,E,84,[[["self"]],[T]]],[11,R[10],E,E,84,[[["self"]],[T]]],[11,R[15],E,E,84,[[["self"]],[R[30]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[8],E,E,85,[[[U]],[R[2]]]],[11,R[9],E,E,85,[[],[R[2]]]],[11,"into",E,E,85,[[],[U]]],[11,R[29],E,E,85,[[["self"]],[T]]],[11,R[10],E,E,85,[[["self"]],[T]]],[11,R[15],E,E,85,[[["self"]],[R[30]]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[8],E,E,86,[[[U]],[R[2]]]],[11,R[9],E,E,86,[[],[R[2]]]],[11,"into",E,E,86,[[],[U]]],[11,R[29],E,E,86,[[["self"]],[T]]],[11,R[10],E,E,86,[[["self"]],[T]]],[11,R[15],E,E,86,[[["self"]],[R[30]]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[8],E,E,87,[[[U]],[R[2]]]],[11,R[9],E,E,87,[[],[R[2]]]],[11,"into",E,E,87,[[],[U]]],[11,R[29],E,E,87,[[["self"]],[T]]],[11,R[10],E,E,87,[[["self"]],[T]]],[11,R[15],E,E,87,[[["self"]],[R[30]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[8],E,E,88,[[[U]],[R[2]]]],[11,R[9],E,E,88,[[],[R[2]]]],[11,"into",E,E,88,[[],[U]]],[11,R[29],E,E,88,[[["self"]],[T]]],[11,R[10],E,E,88,[[["self"]],[T]]],[11,R[15],E,E,88,[[["self"]],[R[30]]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[8],E,E,89,[[[U]],[R[2]]]],[11,R[9],E,E,89,[[],[R[2]]]],[11,"into",E,E,89,[[],[U]]],[11,R[29],E,E,89,[[["self"]],[T]]],[11,R[10],E,E,89,[[["self"]],[T]]],[11,R[15],E,E,89,[[["self"]],[R[30]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[8],E,E,90,[[[U]],[R[2]]]],[11,R[9],E,E,90,[[],[R[2]]]],[11,"into",E,E,90,[[],[U]]],[11,R[29],E,E,90,[[["self"]],[T]]],[11,R[10],E,E,90,[[["self"]],[T]]],[11,R[15],E,E,90,[[["self"]],[R[30]]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[8],E,E,91,[[[U]],[R[2]]]],[11,R[9],E,E,91,[[],[R[2]]]],[11,"into",E,E,91,[[],[U]]],[11,R[29],E,E,91,[[["self"]],[T]]],[11,R[10],E,E,91,[[["self"]],[T]]],[11,R[15],E,E,91,[[["self"]],[R[30]]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[8],E,E,92,[[[U]],[R[2]]]],[11,R[9],E,E,92,[[],[R[2]]]],[11,"into",E,E,92,[[],[U]]],[11,R[29],E,E,92,[[["self"]],[T]]],[11,R[10],E,E,92,[[["self"]],[T]]],[11,R[15],E,E,92,[[["self"]],[R[30]]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[8],E,E,93,[[[U]],[R[2]]]],[11,R[9],E,E,93,[[],[R[2]]]],[11,"into",E,E,93,[[],[U]]],[11,R[29],E,E,93,[[["self"]],[T]]],[11,R[10],E,E,93,[[["self"]],[T]]],[11,R[15],E,E,93,[[["self"]],[R[30]]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[8],E,E,94,[[[U]],[R[2]]]],[11,R[9],E,E,94,[[],[R[2]]]],[11,"into",E,E,94,[[],[U]]],[11,R[29],E,E,94,[[["self"]],[T]]],[11,R[10],E,E,94,[[["self"]],[T]]],[11,R[15],E,E,94,[[["self"]],[R[30]]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[8],E,E,95,[[[U]],[R[2]]]],[11,R[9],E,E,95,[[],[R[2]]]],[11,"into",E,E,95,[[],[U]]],[11,R[29],E,E,95,[[["self"]],[T]]],[11,R[10],E,E,95,[[["self"]],[T]]],[11,R[15],E,E,95,[[["self"]],[R[30]]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[8],E,E,96,[[[U]],[R[2]]]],[11,R[9],E,E,96,[[],[R[2]]]],[11,"into",E,E,96,[[],[U]]],[11,R[29],E,E,96,[[["self"]],[T]]],[11,R[10],E,E,96,[[["self"]],[T]]],[11,R[15],E,E,96,[[["self"]],[R[30]]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[8],E,E,97,[[[U]],[R[2]]]],[11,R[9],E,E,97,[[],[R[2]]]],[11,"into",E,E,97,[[],[U]]],[11,R[29],E,E,97,[[["self"]],[T]]],[11,R[10],E,E,97,[[["self"]],[T]]],[11,R[15],E,E,97,[[["self"]],[R[30]]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[8],E,E,98,[[[U]],[R[2]]]],[11,R[9],E,E,98,[[],[R[2]]]],[11,"into",E,E,98,[[],[U]]],[11,R[29],E,E,98,[[["self"]],[T]]],[11,R[10],E,E,98,[[["self"]],[T]]],[11,R[15],E,E,98,[[["self"]],[R[30]]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[8],E,E,99,[[[U]],[R[2]]]],[11,R[9],E,E,99,[[],[R[2]]]],[11,"into",E,E,99,[[],[U]]],[11,R[29],E,E,99,[[["self"]],[T]]],[11,R[10],E,E,99,[[["self"]],[T]]],[11,R[15],E,E,99,[[["self"]],[R[30]]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[8],E,E,100,[[[U]],[R[2]]]],[11,R[9],E,E,100,[[],[R[2]]]],[11,"into",E,E,100,[[],[U]]],[11,R[29],E,E,100,[[["self"]],[T]]],[11,R[10],E,E,100,[[["self"]],[T]]],[11,R[15],E,E,100,[[["self"]],[R[30]]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[8],E,E,101,[[[U]],[R[2]]]],[11,R[9],E,E,101,[[],[R[2]]]],[11,"into",E,E,101,[[],[U]]],[11,R[29],E,E,101,[[["self"]],[T]]],[11,R[10],E,E,101,[[["self"]],[T]]],[11,R[15],E,E,101,[[["self"]],[R[30]]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[8],E,E,102,[[[U]],[R[2]]]],[11,R[9],E,E,102,[[],[R[2]]]],[11,"into",E,E,102,[[],[U]]],[11,R[29],E,E,102,[[["self"]],[T]]],[11,R[10],E,E,102,[[["self"]],[T]]],[11,R[15],E,E,102,[[["self"]],[R[30]]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[8],E,E,103,[[[U]],[R[2]]]],[11,R[9],E,E,103,[[],[R[2]]]],[11,"into",E,E,103,[[],[U]]],[11,R[29],E,E,103,[[["self"]],[T]]],[11,R[10],E,E,103,[[["self"]],[T]]],[11,R[15],E,E,103,[[["self"]],[R[30]]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[8],E,E,104,[[[U]],[R[2]]]],[11,R[9],E,E,104,[[],[R[2]]]],[11,"into",E,E,104,[[],[U]]],[11,R[29],E,E,104,[[["self"]],[T]]],[11,R[10],E,E,104,[[["self"]],[T]]],[11,R[15],E,E,104,[[["self"]],[R[30]]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[8],E,E,105,[[[U]],[R[2]]]],[11,R[9],E,E,105,[[],[R[2]]]],[11,"into",E,E,105,[[],[U]]],[11,R[29],E,E,105,[[["self"]],[T]]],[11,R[10],E,E,105,[[["self"]],[T]]],[11,R[15],E,E,105,[[["self"]],[R[30]]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[8],E,E,106,[[[U]],[R[2]]]],[11,R[9],E,E,106,[[],[R[2]]]],[11,"into",E,E,106,[[],[U]]],[11,R[29],E,E,106,[[["self"]],[T]]],[11,R[10],E,E,106,[[["self"]],[T]]],[11,R[15],E,E,106,[[["self"]],[R[30]]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[8],E,E,107,[[[U]],[R[2]]]],[11,R[9],E,E,107,[[],[R[2]]]],[11,"into",E,E,107,[[],[U]]],[11,R[29],E,E,107,[[["self"]],[T]]],[11,R[10],E,E,107,[[["self"]],[T]]],[11,R[15],E,E,107,[[["self"]],[R[30]]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[8],E,E,108,[[[U]],[R[2]]]],[11,R[9],E,E,108,[[],[R[2]]]],[11,"into",E,E,108,[[],[U]]],[11,R[29],E,E,108,[[["self"]],[T]]],[11,R[10],E,E,108,[[["self"]],[T]]],[11,R[15],E,E,108,[[["self"]],[R[30]]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[8],E,E,109,[[[U]],[R[2]]]],[11,R[9],E,E,109,[[],[R[2]]]],[11,"into",E,E,109,[[],[U]]],[11,R[29],E,E,109,[[["self"]],[T]]],[11,R[10],E,E,109,[[["self"]],[T]]],[11,R[15],E,E,109,[[["self"]],[R[30]]]],[11,"from",E,E,136,[[[T]],[T]]],[11,R[8],E,E,136,[[[U]],[R[2]]]],[11,R[9],E,E,136,[[],[R[2]]]],[11,"into",E,E,136,[[],[U]]],[11,R[29],E,E,136,[[["self"]],[T]]],[11,R[10],E,E,136,[[["self"]],[T]]],[11,R[15],E,E,136,[[["self"]],[R[30]]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[8],E,E,110,[[[U]],[R[2]]]],[11,R[9],E,E,110,[[],[R[2]]]],[11,"into",E,E,110,[[],[U]]],[11,R[29],E,E,110,[[["self"]],[T]]],[11,R[10],E,E,110,[[["self"]],[T]]],[11,R[15],E,E,110,[[["self"]],[R[30]]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[8],E,E,111,[[[U]],[R[2]]]],[11,R[9],E,E,111,[[],[R[2]]]],[11,"into",E,E,111,[[],[U]]],[11,R[29],E,E,111,[[["self"]],[T]]],[11,R[10],E,E,111,[[["self"]],[T]]],[11,R[15],E,E,111,[[["self"]],[R[30]]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[8],E,E,112,[[[U]],[R[2]]]],[11,R[9],E,E,112,[[],[R[2]]]],[11,"into",E,E,112,[[],[U]]],[11,R[29],E,E,112,[[["self"]],[T]]],[11,R[10],E,E,112,[[["self"]],[T]]],[11,R[15],E,E,112,[[["self"]],[R[30]]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[8],E,E,113,[[[U]],[R[2]]]],[11,R[9],E,E,113,[[],[R[2]]]],[11,"into",E,E,113,[[],[U]]],[11,R[29],E,E,113,[[["self"]],[T]]],[11,R[10],E,E,113,[[["self"]],[T]]],[11,R[15],E,E,113,[[["self"]],[R[30]]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[8],E,E,114,[[[U]],[R[2]]]],[11,R[9],E,E,114,[[],[R[2]]]],[11,"into",E,E,114,[[],[U]]],[11,R[29],E,E,114,[[["self"]],[T]]],[11,R[10],E,E,114,[[["self"]],[T]]],[11,R[15],E,E,114,[[["self"]],[R[30]]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[8],E,E,115,[[[U]],[R[2]]]],[11,R[9],E,E,115,[[],[R[2]]]],[11,"into",E,E,115,[[],[U]]],[11,R[29],E,E,115,[[["self"]],[T]]],[11,R[10],E,E,115,[[["self"]],[T]]],[11,R[15],E,E,115,[[["self"]],[R[30]]]],[11,"from",E,E,137,[[[T]],[T]]],[11,R[8],E,E,137,[[[U]],[R[2]]]],[11,R[9],E,E,137,[[],[R[2]]]],[11,"into",E,E,137,[[],[U]]],[11,R[29],E,E,137,[[["self"]],[T]]],[11,R[10],E,E,137,[[["self"]],[T]]],[11,R[15],E,E,137,[[["self"]],[R[30]]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[8],E,E,116,[[[U]],[R[2]]]],[11,R[9],E,E,116,[[],[R[2]]]],[11,"into",E,E,116,[[],[U]]],[11,R[29],E,E,116,[[["self"]],[T]]],[11,R[10],E,E,116,[[["self"]],[T]]],[11,R[15],E,E,116,[[["self"]],[R[30]]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[8],E,E,117,[[[U]],[R[2]]]],[11,R[9],E,E,117,[[],[R[2]]]],[11,"into",E,E,117,[[],[U]]],[11,R[29],E,E,117,[[["self"]],[T]]],[11,R[10],E,E,117,[[["self"]],[T]]],[11,R[15],E,E,117,[[["self"]],[R[30]]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[8],E,E,118,[[[U]],[R[2]]]],[11,R[9],E,E,118,[[],[R[2]]]],[11,"into",E,E,118,[[],[U]]],[11,R[29],E,E,118,[[["self"]],[T]]],[11,R[10],E,E,118,[[["self"]],[T]]],[11,R[15],E,E,118,[[["self"]],[R[30]]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[8],E,E,119,[[[U]],[R[2]]]],[11,R[9],E,E,119,[[],[R[2]]]],[11,"into",E,E,119,[[],[U]]],[11,R[29],E,E,119,[[["self"]],[T]]],[11,R[10],E,E,119,[[["self"]],[T]]],[11,R[15],E,E,119,[[["self"]],[R[30]]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[8],E,E,120,[[[U]],[R[2]]]],[11,R[9],E,E,120,[[],[R[2]]]],[11,"into",E,E,120,[[],[U]]],[11,R[29],E,E,120,[[["self"]],[T]]],[11,R[10],E,E,120,[[["self"]],[T]]],[11,R[15],E,E,120,[[["self"]],[R[30]]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[8],E,E,121,[[[U]],[R[2]]]],[11,R[9],E,E,121,[[],[R[2]]]],[11,"into",E,E,121,[[],[U]]],[11,R[29],E,E,121,[[["self"]],[T]]],[11,R[10],E,E,121,[[["self"]],[T]]],[11,R[15],E,E,121,[[["self"]],[R[30]]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[8],E,E,122,[[[U]],[R[2]]]],[11,R[9],E,E,122,[[],[R[2]]]],[11,"into",E,E,122,[[],[U]]],[11,R[29],E,E,122,[[["self"]],[T]]],[11,R[10],E,E,122,[[["self"]],[T]]],[11,R[15],E,E,122,[[["self"]],[R[30]]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[8],E,E,123,[[[U]],[R[2]]]],[11,R[9],E,E,123,[[],[R[2]]]],[11,"into",E,E,123,[[],[U]]],[11,R[29],E,E,123,[[["self"]],[T]]],[11,R[10],E,E,123,[[["self"]],[T]]],[11,R[15],E,E,123,[[["self"]],[R[30]]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[8],E,E,124,[[[U]],[R[2]]]],[11,R[9],E,E,124,[[],[R[2]]]],[11,"into",E,E,124,[[],[U]]],[11,R[29],E,E,124,[[["self"]],[T]]],[11,R[10],E,E,124,[[["self"]],[T]]],[11,R[15],E,E,124,[[["self"]],[R[30]]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[8],E,E,125,[[[U]],[R[2]]]],[11,R[9],E,E,125,[[],[R[2]]]],[11,"into",E,E,125,[[],[U]]],[11,R[29],E,E,125,[[["self"]],[T]]],[11,R[10],E,E,125,[[["self"]],[T]]],[11,R[15],E,E,125,[[["self"]],[R[30]]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[8],E,E,126,[[[U]],[R[2]]]],[11,R[9],E,E,126,[[],[R[2]]]],[11,"into",E,E,126,[[],[U]]],[11,R[29],E,E,126,[[["self"]],[T]]],[11,R[10],E,E,126,[[["self"]],[T]]],[11,R[15],E,E,126,[[["self"]],[R[30]]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[8],E,E,127,[[[U]],[R[2]]]],[11,R[9],E,E,127,[[],[R[2]]]],[11,"into",E,E,127,[[],[U]]],[11,R[29],E,E,127,[[["self"]],[T]]],[11,R[10],E,E,127,[[["self"]],[T]]],[11,R[15],E,E,127,[[["self"]],[R[30]]]],[11,"from",E,E,138,[[[T]],[T]]],[11,R[8],E,E,138,[[[U]],[R[2]]]],[11,R[9],E,E,138,[[],[R[2]]]],[11,"into",E,E,138,[[],[U]]],[11,R[29],E,E,138,[[["self"]],[T]]],[11,R[10],E,E,138,[[["self"]],[T]]],[11,R[15],E,E,138,[[["self"]],[R[30]]]],[11,"from",E,E,139,[[[T]],[T]]],[11,R[8],E,E,139,[[[U]],[R[2]]]],[11,R[9],E,E,139,[[],[R[2]]]],[11,"into",E,E,139,[[],[U]]],[11,R[29],E,E,139,[[["self"]],[T]]],[11,R[10],E,E,139,[[["self"]],[T]]],[11,R[15],E,E,139,[[["self"]],[R[30]]]],[11,"from",E,E,140,[[[T]],[T]]],[11,R[8],E,E,140,[[[U]],[R[2]]]],[11,R[9],E,E,140,[[],[R[2]]]],[11,"into",E,E,140,[[],[U]]],[11,R[29],E,E,140,[[["self"]],[T]]],[11,R[10],E,E,140,[[["self"]],[T]]],[11,R[15],E,E,140,[[["self"]],[R[30]]]],[11,"from",E,E,141,[[[T]],[T]]],[11,R[8],E,E,141,[[[U]],[R[2]]]],[11,R[9],E,E,141,[[],[R[2]]]],[11,"into",E,E,141,[[],[U]]],[11,R[29],E,E,141,[[["self"]],[T]]],[11,R[10],E,E,141,[[["self"]],[T]]],[11,R[15],E,E,141,[[["self"]],[R[30]]]],[11,"from",E,E,142,[[[T]],[T]]],[11,R[8],E,E,142,[[[U]],[R[2]]]],[11,R[9],E,E,142,[[],[R[2]]]],[11,"into",E,E,142,[[],[U]]],[11,R[29],E,E,142,[[["self"]],[T]]],[11,R[10],E,E,142,[[["self"]],[T]]],[11,R[15],E,E,142,[[["self"]],[R[30]]]],[11,"from",E,E,143,[[[T]],[T]]],[11,R[8],E,E,143,[[[U]],[R[2]]]],[11,R[9],E,E,143,[[],[R[2]]]],[11,"into",E,E,143,[[],[U]]],[11,R[29],E,E,143,[[["self"]],[T]]],[11,R[10],E,E,143,[[["self"]],[T]]],[11,R[15],E,E,143,[[["self"]],[R[30]]]],[11,"from",E,E,144,[[[T]],[T]]],[11,R[8],E,E,144,[[[U]],[R[2]]]],[11,R[9],E,E,144,[[],[R[2]]]],[11,"into",E,E,144,[[],[U]]],[11,R[29],E,E,144,[[["self"]],[T]]],[11,R[10],E,E,144,[[["self"]],[T]]],[11,R[15],E,E,144,[[["self"]],[R[30]]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[8],E,E,128,[[[U]],[R[2]]]],[11,R[9],E,E,128,[[],[R[2]]]],[11,"into",E,E,128,[[],[U]]],[11,R[29],E,E,128,[[["self"]],[T]]],[11,R[10],E,E,128,[[["self"]],[T]]],[11,R[15],E,E,128,[[["self"]],[R[30]]]],[11,"from",E,E,145,[[[T]],[T]]],[11,R[8],E,E,145,[[[U]],[R[2]]]],[11,R[9],E,E,145,[[],[R[2]]]],[11,"into",E,E,145,[[],[U]]],[11,R[29],E,E,145,[[["self"]],[T]]],[11,R[10],E,E,145,[[["self"]],[T]]],[11,R[15],E,E,145,[[["self"]],[R[30]]]],[11,"from",E,E,146,[[[T]],[T]]],[11,R[8],E,E,146,[[[U]],[R[2]]]],[11,R[9],E,E,146,[[],[R[2]]]],[11,"into",E,E,146,[[],[U]]],[11,R[29],E,E,146,[[["self"]],[T]]],[11,R[10],E,E,146,[[["self"]],[T]]],[11,R[15],E,E,146,[[["self"]],[R[30]]]],[11,"from",E,E,147,[[[T]],[T]]],[11,R[8],E,E,147,[[[U]],[R[2]]]],[11,R[9],E,E,147,[[],[R[2]]]],[11,"into",E,E,147,[[],[U]]],[11,R[29],E,E,147,[[["self"]],[T]]],[11,R[10],E,E,147,[[["self"]],[T]]],[11,R[15],E,E,147,[[["self"]],[R[30]]]],[11,"from",E,E,148,[[[T]],[T]]],[11,R[8],E,E,148,[[[U]],[R[2]]]],[11,R[9],E,E,148,[[],[R[2]]]],[11,"into",E,E,148,[[],[U]]],[11,R[29],E,E,148,[[["self"]],[T]]],[11,R[10],E,E,148,[[["self"]],[T]]],[11,R[15],E,E,148,[[["self"]],[R[30]]]],[11,"from",E,E,149,[[[T]],[T]]],[11,R[8],E,E,149,[[[U]],[R[2]]]],[11,R[9],E,E,149,[[],[R[2]]]],[11,"into",E,E,149,[[],[U]]],[11,R[29],E,E,149,[[["self"]],[T]]],[11,R[10],E,E,149,[[["self"]],[T]]],[11,R[15],E,E,149,[[["self"]],[R[30]]]],[11,"fmt",E,E,129,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"clone",E,E,145,[[["self"]],["dir"]]],[11,"clone",E,E,0,[[["self"]],["group"]]],[11,"clone",E,E,1,[[["self"]],["utimbuf"]]],[11,"clone",E,E,2,[[["self"]],["timeval"]]],[11,"clone",E,E,3,[[["self"]],[R[621]]]],[11,"clone",E,E,4,[[["self"]],["rlimit"]]],[11,"clone",E,E,5,[[["self"]],["rusage"]]],[11,"clone",E,E,6,[[["self"]],[R[560]]]],[11,"clone",E,E,7,[[["self"]],["hostent"]]],[11,"clone",E,E,8,[[["self"]],["iovec"]]],[11,"clone",E,E,9,[[["self"]],["pollfd"]]],[11,"clone",E,E,10,[[["self"]],["winsize"]]],[11,"clone",E,E,11,[[["self"]],["linger"]]],[11,"clone",E,E,12,[[["self"]],["sigval"]]],[11,"clone",E,E,13,[[["self"]],[R[561]]]],[11,"clone",E,E,14,[[["self"]],["tms"]]],[11,"clone",E,E,15,[[["self"]],["servent"]]],[11,"clone",E,E,16,[[["self"]],[R[622]]]],[11,"clone",E,E,146,[[["self"]],["file"]]],[11,"clone",E,E,147,[[["self"]],["fpos_t"]]],[11,"clone",E,E,148,[[["self"]],[R[648]]]],[11,"clone",E,E,17,[[["self"]],["in_addr"]]],[11,"clone",E,E,18,[[["self"]],["ip_mreq"]]],[11,"clone",E,E,19,[[["self"]],[R[623]]]],[11,"clone",E,E,20,[[["self"]],[R[562]]]],[11,"clone",E,E,21,[[["self"]],[R[563]]]],[11,"clone",E,E,22,[[["self"]],[R[624]]]],[11,"clone",E,E,23,[[["self"]],[R[564]]]],[11,"clone",E,E,130,[[["self"]],["fd_set"]]],[11,"clone",E,E,24,[[["self"]],["tm"]]],[11,"clone",E,E,25,[[["self"]],[R[565]]]],[11,"clone",E,E,26,[[["self"]],["dl_info"]]],[11,"clone",E,E,27,[[["self"]],["lconv"]]],[11,"clone",E,E,28,[[["self"]],[R[625]]]],[11,"clone",E,E,29,[[["self"]],[R[566]]]],[11,"clone",E,E,30,[[["self"]],["ifaddrs"]]],[11,"clone",E,E,131,[[["self"]],[R[567]]]],[11,"clone",E,E,31,[[["self"]],["arpreq"]]],[11,"clone",E,E,32,[[["self"]],[R[568]]]],[11,"clone",E,E,33,[[["self"]],["arphdr"]]],[11,"clone",E,E,34,[[["self"]],["mmsghdr"]]],[11,"clone",E,E,35,[[["self"]],[R[569]]]],[11,"clone",E,E,36,[[["self"]],[R[570]]]],[11,"clone",E,E,37,[[["self"]],[R[571]]]],[11,"clone",E,E,38,[[["self"]],["utsname"]]],[11,"clone",E,E,149,[[["self"]],[R[649]]]],[11,"clone",E,E,39,[[["self"]],[R[626]]]],[11,"clone",E,E,40,[[["self"]],["glob_t"]]],[11,"clone",E,E,41,[[["self"]],["passwd"]]],[11,"clone",E,E,42,[[["self"]],["spwd"]]],[11,"clone",E,E,43,[[["self"]],["dqblk"]]],[11,"clone",E,E,44,[[["self"]],[R[572]]]],[11,"clone",E,E,45,[[["self"]],[R[573]]]],[11,"clone",E,E,132,[[["self"]],["fsid_t"]]],[11,"clone",E,E,46,[[["self"]],[R[574]]]],[11,"clone",E,E,133,[[["self"]],[R[556]]]],[11,"clone",E,E,47,[[["self"]],[R[559]]]],[11,"clone",E,E,48,[[["self"]],["msginfo"]]],[11,"clone",E,E,49,[[["self"]],["sembuf"]]],[11,"clone",E,E,50,[[["self"]],[R[575]]]],[11,"clone",E,E,51,[[["self"]],[R[627]]]],[11,"clone",E,E,52,[[["self"]],[R[576]]]],[11,"clone",E,E,53,[[["self"]],[R[577]]]],[11,"clone",E,E,54,[[["self"]],[R[578]]]],[11,"clone",E,E,55,[[["self"]],[R[579]]]],[11,"clone",E,E,56,[[["self"]],[R[580]]]],[11,"clone",E,E,57,[[["self"]],[R[581]]]],[11,"clone",E,E,58,[[["self"]],[R[582]]]],[11,"clone",E,E,59,[[["self"]],[R[583]]]],[11,"clone",E,E,60,[[["self"]],[R[584]]]],[11,"clone",E,E,61,[[["self"]],[R[585]]]],[11,"clone",E,E,62,[[["self"]],[R[586]]]],[11,"clone",E,E,63,[[["self"]],[R[587]]]],[11,"clone",E,E,64,[[["self"]],[R[588]]]],[11,"clone",E,E,65,[[["self"]],["elf32_ehdr"]]],[11,"clone",E,E,66,[[["self"]],["elf64_ehdr"]]],[11,"clone",E,E,67,[[["self"]],["elf32_sym"]]],[11,"clone",E,E,68,[[["self"]],["elf64_sym"]]],[11,"clone",E,E,69,[[["self"]],["elf32_phdr"]]],[11,"clone",E,E,70,[[["self"]],["elf64_phdr"]]],[11,"clone",E,E,71,[[["self"]],["elf32_shdr"]]],[11,"clone",E,E,72,[[["self"]],["elf64_shdr"]]],[11,"clone",E,E,73,[[["self"]],["elf32_chdr"]]],[11,"clone",E,E,74,[[["self"]],["elf64_chdr"]]],[11,"clone",E,E,75,[[["self"]],["ucred"]]],[11,"clone",E,E,76,[[["self"]],["mntent"]]],[11,"clone",E,E,134,[[["self"]],[R[589]]]],[11,"clone",E,E,135,[[["self"]],[R[590]]]],[11,"clone",E,E,77,[[["self"]],[R[591]]]],[11,"clone",E,E,78,[[["self"]],[R[592]]]],[11,"clone",E,E,79,[[["self"]],[R[593]]]],[11,"clone",E,E,80,[[["self"]],[R[594]]]],[11,"clone",E,E,81,[[["self"]],[R[595]]]],[11,"clone",E,E,82,[[["self"]],["dirent"]]],[11,"clone",E,E,83,[[["self"]],[R[638]]]],[11,"clone",E,E,84,[[["self"]],[R[596]]]],[11,"clone",E,E,85,[[["self"]],[R[597]]]],[11,"clone",E,E,86,[[["self"]],["mq_attr"]]],[11,"clone",E,E,87,[[["self"]],["statx"]]],[11,"clone",E,E,88,[[["self"]],[R[598]]]],[11,"clone",E,E,89,[[["self"]],["aiocb"]]],[11,"clone",E,E,90,[[["self"]],[R[599]]]],[11,"clone",E,E,91,[[["self"]],[R[600]]]],[11,"clone",E,E,92,[[["self"]],[R[557]]]],[11,"clone",E,E,93,[[["self"]],["stack_t"]]],[11,"clone",E,E,94,[[["self"]],[R[601]]]],[11,"clone",E,E,95,[[["self"]],[R[639]]]],[11,"clone",E,E,96,[[["self"]],["statfs"]]],[11,"clone",E,E,97,[[["self"]],["msghdr"]]],[11,"clone",E,E,98,[[["self"]],["cmsghdr"]]],[11,"clone",E,E,99,[[["self"]],["termios"]]],[11,"clone",E,E,100,[[["self"]],["flock"]]],[11,"clone",E,E,101,[[["self"]],[R[602]]]],[11,"clone",E,E,102,[[["self"]],[R[640]]]],[11,"clone",E,E,103,[[["self"]],[R[641]]]],[11,"clone",E,E,104,[[["self"]],[R[603]]]],[11,"clone",E,E,105,[[["self"]],[R[604]]]],[11,"clone",E,E,106,[[["self"]],[R[605]]]],[11,"clone",E,E,107,[[["self"]],["nlattr"]]],[11,"clone",E,E,108,[[["self"]],["rtentry"]]],[11,"clone",E,E,109,[[["self"]],["utmpx"]]],[11,"clone",E,E,136,[[["self"]],[R[647]]]],[11,"clone",E,E,110,[[["self"]],["sysinfo"]]],[11,"clone",E,E,111,[[["self"]],[R[642]]]],[11,"clone",E,E,112,[[["self"]],["stat"]]],[11,"clone",E,E,113,[[["self"]],["stat64"]]],[11,"clone",E,E,114,[[["self"]],[R[606]]]],[11,"clone",E,E,115,[[["self"]],[R[558]]]],[11,"clone",E,E,137,[[["self"]],[R[607]]]],[11,"clone",E,E,116,[[["self"]],[R[608]]]],[11,"clone",E,E,117,[[["self"]],[R[609]]]],[11,"clone",E,E,118,[[["self"]],[R[610]]]],[11,"clone",E,E,119,[[["self"]],[R[611]]]],[11,"clone",E,E,120,[[["self"]],["user"]]],[11,"clone",E,E,121,[[["self"]],[R[612]]]],[11,"clone",E,E,122,[[["self"]],[R[643]]]],[11,"clone",E,E,123,[[["self"]],[R[644]]]],[11,"clone",E,E,124,[[["self"]],[R[645]]]],[11,"clone",E,E,125,[[["self"]],[R[613]]]],[11,"clone",E,E,126,[[["self"]],[R[614]]]],[11,"clone",E,E,127,[[["self"]],["statvfs"]]],[11,"clone",E,E,138,[[["self"]],["sem_t"]]],[11,"clone",E,E,139,[[["self"]],[R[615]]]],[11,"clone",E,E,140,[[["self"]],[R[616]]]],[11,"clone",E,E,141,[[["self"]],[R[617]]]],[11,"clone",E,E,142,[[["self"]],[R[618]]]],[11,"clone",E,E,143,[[["self"]],[R[619]]]],[11,"clone",E,E,144,[[["self"]],[R[620]]]],[11,"clone",E,E,128,[[["self"]],[R[646]]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,R[621]],[3,"rlimit"],[3,"rusage"],[3,R[560]],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,R[561]],[3,"tms"],[3,"servent"],[3,R[622]],[3,"in_addr"],[3,"ip_mreq"],[3,R[623]],[3,R[562]],[3,R[563]],[3,R[624]],[3,R[564]],[3,"tm"],[3,R[565]],[3,"Dl_info"],[3,"lconv"],[3,R[625]],[3,R[566]],[3,"ifaddrs"],[3,"arpreq"],[3,R[568]],[3,"arphdr"],[3,"mmsghdr"],[3,R[569]],[3,R[570]],[3,R[571]],[3,"utsname"],[3,R[626]],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,R[572]],[3,R[573]],[3,R[574]],[3,R[559]],[3,"msginfo"],[3,"sembuf"],[3,R[575]],[3,R[627]],[3,R[576]],[3,R[577]],[3,R[578]],[3,R[579]],[3,R[580]],[3,R[581]],[3,R[582]],[3,R[583]],[3,R[584]],[3,R[585]],[3,R[586]],[3,R[587]],[3,R[588]],[3,R[628]],[3,R[629]],[3,R[630]],[3,R[631]],[3,R[632]],[3,R[633]],[3,R[634]],[3,R[635]],[3,R[636]],[3,R[637]],[3,"ucred"],[3,"mntent"],[3,R[591]],[3,R[592]],[3,R[593]],[3,R[594]],[3,R[595]],[3,"dirent"],[3,R[638]],[3,R[596]],[3,R[597]],[3,"mq_attr"],[3,"statx"],[3,R[598]],[3,"aiocb"],[3,R[599]],[3,R[600]],[3,R[557]],[3,"stack_t"],[3,R[601]],[3,R[639]],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,R[602]],[3,R[640]],[3,R[641]],[3,R[603]],[3,R[604]],[3,R[605]],[3,"nlattr"],[3,"rtentry"],[3,"utmpx"],[3,"sysinfo"],[3,R[642]],[3,"stat"],[3,"stat64"],[3,R[606]],[3,R[558]],[3,R[608]],[3,R[609]],[3,R[610]],[3,R[611]],[3,"user"],[3,R[612]],[3,R[643]],[3,R[644]],[3,R[645]],[3,R[613]],[3,R[614]],[3,"statvfs"],[3,R[646]],[4,"c_void"],[3,"fd_set"],[3,R[567]],[3,"fsid_t"],[3,R[556]],[3,R[589]],[3,R[590]],[3,R[647]],[3,R[607]],[3,"sem_t"],[3,R[615]],[3,R[616]],[3,R[617]],[3,R[618]],[3,R[619]],[3,R[620]],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,R[648]],[4,R[649]]]};
searchIndex["lzw"]={"doc":"LZW decoder and encoder","i":[[3,"Decoder","lzw","Decoder for a LZW compressed stream (this algorithm is…",N,N],[3,R[43],E,"Decoder for a LZW compressed stream using an “early…",N,N],[3,"Encoder",E,"LZW encoder using the algorithm of GIF files.",N,N],[3,R[44],E,"Reads bits from a byte stream, LSB first.",N,N],[3,R[46],E,"Writes bits to a byte stream, LSB first.",N,N],[3,R[45],E,"Reads bits from a byte stream, MSB first.",N,N],[3,R[47],E,"Writes bits to a byte stream, MSB first.",N,N],[4,"Bits",E,"Containes either the consumed bytes and reconstructed bits…",N,N],[13,"Some",E,"Consumed bytes, reconstructed bits",0,N],[13,"None",E,"Consumed bytes",0,N],[5,"encode",E,"Convenience function that reads and compresses all bytes…",N,[[["u8"],["w"],["r"]],[R[2]]]],[11,"new",E,R[37],1,[[["u8"],["r"]],["decoder"]]],[11,R[38],E,R[39],1,[[["self"]],[R[2]]]],[11,"new",E,R[37],2,[[["u8"],["r"]],["decoderearlychange"]]],[11,R[38],E,R[39],2,[[["self"]],[R[2]]]],[11,"new",E,"Creates a new LZW encoder.",3,[[["u8"],["w"]],[["encoder"],[R[2],["encoder"]]]]],[11,"encode_bytes",E,"Compresses `bytes` and writes the result into the writer.",3,[[["self"]],[R[2]]]],[11,"new",E,R[40],4,[[],["lsbreader"]]],[11,"new",E,R[40],5,[[],["msbreader"]]],[11,"new",E,R[40],6,[[["w"]],["lsbwriter"]]],[11,"new",E,R[40],7,[[["w"]],["msbwriter"]]],[8,R[48],E,"A bit reader.",N,N],[10,R[41],E,"Returns the next `n` bits.",8,[[["self"],["u8"]],["bits"]]],[8,R[49],E,"A bit writer.",N,N],[10,R[42],E,"Writes the next `n` bits.",9,[[["self"],["u16"],["u8"]],[R[2]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[30]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[30]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[30]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[30]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[41],E,E,4,[[["self"],["u8"]],["bits"]]],[11,R[41],E,E,5,[[["self"],["u8"]],["bits"]]],[11,R[42],E,E,6,[[["self"],["u16"],["u8"]],[R[2]]]],[11,R[42],E,E,7,[[["self"],["u16"],["u8"]],[R[2]]]],[11,"drop",E,E,3,[[["self"]]]],[11,"fmt",E,E,1,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,2,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,4,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,5,[[[R[12]],["self"]],[R[2]]]],[11,"write",E,E,6,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,"flush",E,E,6,[[["self"]],[R[2]]]],[11,"write",E,E,7,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,"flush",E,E,7,[[["self"]],[R[2]]]]],"p":[[4,"Bits"],[3,"Decoder"],[3,R[43]],[3,"Encoder"],[3,R[44]],[3,R[45]],[3,R[46]],[3,R[47]],[8,R[48]],[8,R[49]]]};
searchIndex["mandalas"]={"doc":E,"i":[[3,"Options","mandalas","Representation of the application's all configurable values.",N,N],[12,"resolution",E,"The output resolution. Default: `900x900x900`",0,N],[12,"outdir",E,"The directory to put the resulting mandalas in. Default:…",0,N],[12,"threads",E,"The amount of threads to run. Default: amount of…",0,N],[11,"parse",E,"Parse `env`-wide command-line arguments into an `Options`…",0,[[],["options"]]],[0,"ops",E,"Main functions doing actual work.",N,N],[3,R[1642],R[1641],"A generator for mandala points for a canvas of a given size.",N,N],[5,"init_image",E,"Initialise the mandala canvas from the given size.",N,[[],[[R[1519]],["vec",[R[1519]]]]]],[5,"points_to_generate",E,"Check how many points need generating to acquire a smooth…",N,[[],["u64"]]],[5,"filename_to_save",E,"Generate a filename to save the mandala in.",N,[[["usize"]],[R[34]]]],[5,"save",E,"Save the mandala to the specified file",N,[[["str"],[R[1519]],["path"]]]],[11,"new",E,"Prepare a new, clean, generation context.",1,[[],["generationcontext"]]],[11,"gen",E,"Generate a mandala point.",1,[[["self"]]]],[0,"util","mandalas","Various utility functions.",N,N],[5,"distance","mandalas::util","Calculate the distance between two specified 3-dimensional…",N,[[],["f64"]]],[5,"separated_number",E,"Convert the specified number to a string in the form…",N,[[["u64"]],[R[34]]]],[5,"cmyk_to_rgb",E,"Translate a CMYK colour point into an RGB colour point.",N,[[]]],[5,"hsl_to_rgb",E,"Translate an HSL colour point into an RGB colour point.",N,[[]]],[5,"rgb_to_sepia",E,"Translate an RGB colour point into a Sepia tone.",N,[[]]],[5,"yuv_to_rgb",E,"Translate a YUV colour point (translated to 0–1 as opposed…",N,[[]]],[5,"roygbp_to_rgb",E,"Translate a ROYGBP colour point into an RGB colour point…",N,[[]]],[5,"proygbiv_to_rgb",E,"Translate a PROYGBIV colour point into an RGB colour point…",N,[[]]],[5,"rppdiblctgllyaodbgb_to_rgb",E,"Translate a RPPDIBLCTGLLYAODBGB colour point into an RGB…",N,[[]]],[5,"prgb1555_to_rgb",E,R[1640],N,[[]]],[5,"prgb1555_least6_to_rgb",E,R[1640],N,[[]]],[5,"flag_hard_alpha_to_rgb",E,"Translate a colour point and alpha into an RGB colour…",N,[[]]],[7,"FLAG_ACE",E,E,N,N],[11,"from","mandalas",E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[66],E,E,0,[[["self"]],[T]]],[11,R[67],E,E,0,[[[T],["self"]]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",R[1641],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"eq","mandalas",E,0,[[["self"],["options"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["options"]],["bool"]]],[11,"clone",E,E,0,[[["self"]],["options"]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[R[2]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]]],"p":[[3,"Options"],[3,R[1642]]]};
searchIndex["memchr"]={"doc":"The `memchr` crate provides heavily optimized routines for…","i":[[3,"Memchr","memchr","An iterator for `memchr`.",N,N],[3,"Memchr2",E,"An iterator for `memchr2`.",N,N],[3,"Memchr3",E,"An iterator for `memchr3`.",N,N],[5,"memchr_iter",E,R[788],N,[[["u8"]],["memchr"]]],[5,"memchr2_iter",E,R[787],N,[[["u8"]],["memchr2"]]],[5,"memchr3_iter",E,R[787],N,[[["u8"]],["memchr3"]]],[5,"memrchr_iter",E,R[788],N,[[["u8"]],[["memchr"],["rev",["memchr"]]]]],[5,"memrchr2_iter",E,R[787],N,[[["u8"]],[["memchr2"],["rev",["memchr2"]]]]],[5,"memrchr3_iter",E,R[787],N,[[["u8"]],[["memchr3"],["rev",["memchr3"]]]]],[5,"memchr",E,"Search for the first occurrence of a byte in a slice.",N,[[["u8"]],[[R[24],["usize"]],["usize"]]]],[5,"memchr2",E,"Like `memchr`, but searches for two bytes instead of one.",N,[[["u8"]],[[R[24],["usize"]],["usize"]]]],[5,"memchr3",E,"Like `memchr`, but searches for three bytes instead of one.",N,[[["u8"]],[[R[24],["usize"]],["usize"]]]],[5,"memrchr",E,"Search for the last occurrence of a byte in a slice.",N,[[["u8"]],[[R[24],["usize"]],["usize"]]]],[5,"memrchr2",E,"Like `memrchr`, but searches for two bytes instead of one.",N,[[["u8"]],[[R[24],["usize"]],["usize"]]]],[5,"memrchr3",E,"Like `memrchr`, but searches for three bytes instead of one.",N,[[["u8"]],[[R[24],["usize"]],["usize"]]]],[11,"new",E,R[789],0,[[["u8"]],["memchr"]]],[11,"new",E,R[789],1,[[["u8"]],["memchr2"]]],[11,"new",E,"Create a new `Memchr3` that's initialized to zero with a…",2,[[["u8"]],["memchr3"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[22],E,E,0,[[],["i"]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[22],E,E,1,[[],["i"]]],[11,"into",E,E,1,[[],[U]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[22],E,E,2,[[],["i"]]],[11,"into",E,E,2,[[],[U]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[101],E,E,0,[[["self"]],[R[24]]]],[11,R[101],E,E,1,[[["self"]],[R[24]]]],[11,R[101],E,E,2,[[["self"]],[R[24]]]],[11,"next",E,E,0,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[104],E,E,0,[[["self"]]]],[11,"next",E,E,1,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[104],E,E,1,[[["self"]]]],[11,"next",E,E,2,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[104],E,E,2,[[["self"]]]]],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]};
searchIndex["num_cpus"]={"doc":"A crate with utilities to determine the number of CPUs…","i":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",N,[[],["usize"]]],[5,"get_physical",E,"Returns the number of physical cores of the current system.",N,[[],["usize"]]]],"p":[]};
searchIndex["num_iter"]={"doc":"External iterators for generic mathematics","i":[[3,"Range","num_iter","An iterator over the range [start, stop)",N,N],[3,R[1343],E,"An iterator over the range [start, stop]",N,N],[3,"RangeStep",E,"An iterator over the range [start, stop) by `step`. It…",N,N],[3,R[1344],E,"An iterator over the range [start, stop] by `step`. It…",N,N],[5,"range",E,"Returns an iterator over the given range [start, stop)…",N,[[["a"]],["range"]]],[5,R[1421],E,"Return an iterator over the range [start, stop]",N,[[["a"]],[R[1341]]]],[5,"range_step",E,"Return an iterator over the range [start, stop) by `step`.…",N,[[["a"]],["rangestep"]]],[5,"range_step_inclusive",E,"Return an iterator over the range [start, stop] by `step`.…",N,[[["a"]],[R[1342]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[22],E,E,0,[[],["i"]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[66],E,E,0,[[["self"]],[T]]],[11,R[67],E,E,0,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[22],E,E,1,[[],["i"]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[66],E,E,1,[[["self"]],[T]]],[11,R[67],E,E,1,[[[T],["self"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[22],E,E,2,[[],["i"]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"into",E,E,2,[[],[U]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[66],E,E,2,[[["self"]],[T]]],[11,R[67],E,E,2,[[[T],["self"]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[22],E,E,3,[[],["i"]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"into",E,E,3,[[],[U]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,R[66],E,E,3,[[["self"]],[T]]],[11,R[67],E,E,3,[[[T],["self"]]]],[11,"next",E,E,0,[[["self"]],[R[24]]]],[11,R[104],E,E,0,[[["self"]]]],[11,"next",E,E,1,[[["self"]],[R[24]]]],[11,R[104],E,E,1,[[["self"]]]],[11,"next",E,E,2,[[["self"]],[R[24]]]],[11,"next",E,E,3,[[["self"]],[R[24]]]],[11,R[101],E,E,0,[[["self"]],[R[24]]]],[11,R[101],E,E,1,[[["self"]],[R[24]]]],[11,"clone",E,E,0,[[["self"]],["range"]]],[11,"clone",E,E,1,[[["self"]],[R[1341]]]],[11,"clone",E,E,2,[[["self"]],["rangestep"]]],[11,"clone",E,E,3,[[["self"]],[R[1342]]]]],"p":[[3,"Range"],[3,R[1343]],[3,"RangeStep"],[3,R[1344]]]};
searchIndex["odds"]={"doc":"Odds and ends — collection miscellania.","i":[[3,"Fix","odds",R[73],N,N],[12,"0",E,E,0,N],[5,"fix",E,R[73],N,[[["f"],[T]],["r"]]],[5,"ref_eq",E,"Compare if a and b are equal as pointers.",N,[[[T]],["bool"]]],[5,"ptr_eq",E,"Compare if a and b are equal pointers.",N,[[],["bool"]]],[5,"raw_byte_repr",E,"Safe to use with any wholly initialized memory `ptr`",N,[[[T]]]],[5,"get_unchecked",E,R[74],N,[[["usize"]],[T]]],[5,"get_unchecked_mut",E,R[74],N,[[["usize"]],[T]]],[5,"debug_assert_unreachable",E,"Act as `debug_assert!` in debug mode, asserting that this…",N,[[]]],[5,"slice_unchecked",E,R[75],N,[[["usize"]]]],[5,"slice_unchecked_mut",E,R[75],N,[[["usize"]]]],[5,"ref_slice",E,"Create a length 1 slice out of a reference",N,[[[T]]]],[5,"ref_slice_mut",E,"Create a length 1 mutable slice out of a reference",N,[[[T]]]],[11,"call",E,E,0,[[["self"],[T]],["r"]]],[0,"char",E,"Extra functions for `char`",N,N],[3,R[121],R[96],"Placeholder",N,N],[5,"encode_utf8",E,"Encode a char into buf using UTF-8.",N,[[["char"]],[[R[2],["usize",R[76]]],[R[76]],["usize"]]]],[0,R[34],"odds","Extensions to `&str` and `String`",N,N],[3,"Prefixes",R[97],"Iterator of all non-empty prefixes",N,N],[3,"Suffixes",E,"Iterator of all non-empty suffixes",N,N],[3,R[122],E,"Iterator of all non-empty substrings",N,N],[3,R[123],E,"An iterator that splits the string in substrings of each…",N,N],[3,R[124],E,"An iterator that produces substrings of each `n` `char`…",N,N],[3,"CharStr",E,"A single-char string.",N,N],[8,"StrExt",E,"Extra methods for `str`",N,N],[10,"rep",E,"Repeat the string `n` times.",1,[[["self"],["usize"]],[R[34]]]],[10,"append",E,"Requires `feature=\"std\"`",1,[[["str"],["self"]],[R[34]]]],[10,R[77],E,"All non-empty prefixes",1,[[["self"]],[R[77]]]],[10,R[78],E,"All non-empty suffixes",1,[[["self"]],[R[78]]]],[10,R[79],E,"Produce all non-empty substrings",1,[[["self"]],[R[79]]]],[10,"is_acceptable_index",E,"Return `true` if `index` is acceptable for slicing the…",1,[[["self"],["usize"]],["bool"]]],[8,"StrSlice",E,"Extension trait for `str` for string slicing without…",N,N],[10,"get_slice",E,"Return a slice of the string, if it is in bounds /and on…",2,[[["self"],["r"]],[["str"],[R[24],["str"]]]]],[8,R[110],E,"Extra methods for `String`",N,N],[10,"insert_str",E,"Panics if `index` is out of bounds.",3,[[["str"],["self"],["usize"]]]],[8,R[111],E,"Extension traits for the `char_chunks` and `char_windows`…",N,N],[10,"char_chunks",E,"Return an iterator that splits the string in substrings of…",4,[[["self"],["usize"]],[R[102]]]],[10,"char_windows",E,"Return an iterator that produces substrings of each `n`…",4,[[["self"],["usize"]],[R[103]]]],[11,"new",E,"Create a new string from `c`.",5,[[["char"]],["charstr"]]],[0,"vec","odds","Extensions to `Vec`",N,N],[5,"vec","odds::vec","Create a new vec from the iterable",N,[[["i"]],["vec"]]],[8,"VecExt",E,"Extra methods for `Vec<T>`",N,N],[10,"splice",E,"Remove elements in a range, and insert from an iterator in…",6,[[["self"],["i"],["r"]]]],[10,"retain_mut",E,R[130],6,[[["self"],["f"]]]],[8,R[112],E,E,N,N],[16,"Item",E,E,7,N],[10,"find_remove",E,"Linear search for the first element equal to `elt` and…",7,[[[U],["self"]],[R[24]]]],[10,"rfind_remove",E,"Linear search for the last element equal to `elt` and…",7,[[[U],["self"]],[R[24]]]],[0,"slice","odds","Extra functions for slices",N,N],[3,R[118],R[80],"An iterator adaptor that glues together adjacent…",N,N],[3,"RevSlice",E,"A reversed view of a slice.",N,N],[5,"shared_prefix",E,"Return the end index of the longest shared (equal) prefix…",N,[[],["usize"]]],[5,R[959],E,"Rotate `steps` towards lower indices.",N,[[["usize"]]]],[5,"split_aligned_for",E,"Split the input slice into three chunks, so that the…",N,[[]]],[0,"unalign",E,E,N,N],[3,R[113],R[98],"An iterator of `T` (by value) where each value read using…",N,N],[11,"from_raw_parts",E,"Create an `UnalignedIter` from `ptr` and `end`, which must…",8,[[],["self"]]],[11,R[86],E,"Create an `UnalignedIter` out of the slice of data, which…",8,[[],["self"]]],[11,"tail",E,"Return a byte iterator of the remaining tail of the…",8,[[["self"]],[["slicecopyiter",["u8"]],["u8"]]]],[11,"has_tail",E,"Return `true` if the tail is not empty.",8,[[["self"]],["bool"]]],[11,"peek_next",E,"Return the next iterator element, without stepping the…",8,[[["self"]],[R[24]]]],[0,"iter",R[80],E,N,N],[3,R[114],R[99],"Slice (contiguous data) iterator.",N,N],[11,"new",E,E,9,[[],["self"]]],[11,"into_raw",E,"Return the start, end pointer of the iterator",9,[[]]],[8,R[115],R[80],R[81],N,N],[16,"Item",E,E,10,N],[10,"find",E,R[82],10,[[[U],["self"]],[[R[24],["usize"]],["usize"]]]],[10,"rfind",E,R[83],10,[[[U],["self"]],[[R[24],["usize"]],["usize"]]]],[8,R[116],E,R[81],N,N],[16,"Item",E,E,11,N],[10,"find_split",E,R[82],11,[[[U],["self"]]]],[10,"rfind_split",E,R[83],11,[[[U],["self"]]]],[10,"find_split_mut",E,R[82],11,[[[U],["self"]]]],[10,"rfind_split_mut",E,R[83],11,[[[U],["self"]]]],[8,R[117],E,"Extra iterator adaptors for iterators of slice elements.",N,N],[11,"mend_slices",E,"Return an iterator adaptor that joins together adjacent…",12,[[],["mendslices"]]],[8,"MendSlice",E,"A trait for items that can maybe be joined together.",N,N],[8,"Pod",E,"\"plain old data\": Types that we can stick arbitrary bit…",N,N],[11,"new",E,"Create a new `MendSlices`.",13,[[["i"]],["self"]]],[11,"len",E,"Return the length of the slice.",14,[[["self"]],["usize"]]],[11,"get",E,R[84],14,[[["self"],["usize"]],[[R[24]],[T]]]],[11,R[221],E,R[84],14,[[["self"],["usize"]],[[R[24]],[T]]]],[11,"inner_ref",E,E,14,[[["self"]]]],[11,"inner_mut",E,E,14,[[["self"]]]],[11,"into_boxed_slice",E,E,14,[[["box"]],["box"]]],[11,"iter",E,"Return a by-reference iterator",14,[[["self"]],[["iter"],["rev",["iter"]]]]],[11,R[175],E,"Return a by-mutable-reference iterator",14,[[["self"]],[["itermut"],["rev",["itermut"]]]]],[11,"split_at",E,E,14,[[["self"],["usize"]]]],[11,"split_at_mut",E,E,14,[[["self"],["usize"]]]],[0,R[87],"odds","Slice iterator with custom step size",N,N],[3,"Stride",R[100],"(the stride) skipped per iteration.",N,N],[3,R[119],E,"The mutable equivalent of Stride.",N,N],[11,R[85],E,"Create a Stride iterator from a raw pointer.",15,[[["isize"],["usize"]],[R[87]]]],[11,R[85],E,"Create a StrideMut iterator from a raw pointer.",16,[[["isize"],["usize"]],[R[89]]]],[11,R[86],E,R[88],15,[[["isize"]],[R[87]]]],[11,R[90],E,R[91],15,[[["isize"],[R[87]]],[R[87]]]],[11,R[92],E,R[93],15,[[["self"]]]],[11,"len",E,R[94],15,[[["self"]],["usize"]]],[11,"get",E,R[95],15,[[["self"],["usize"]],[[R[24]],["a"]]]],[11,R[86],E,R[88],16,[[["isize"]],[R[89]]]],[11,R[90],E,R[91],16,[[["isize"],[R[89]]],[R[89]]]],[11,R[92],E,R[93],16,[[["self"]]]],[11,"len",E,R[94],16,[[["self"]],["usize"]]],[11,"get",E,R[95],16,[[["self"],["usize"]],[[R[24]],["a"]]]],[11,R[221],E,"Return a mutable reference to the element of a stride at…",16,[[["self"],["usize"]],[["a"],[R[24]]]]],[0,"prelude","odds","prelude of often used traits and functions",N,N],[8,R[120],E,R[355],N,N],[11,"start",E,R[108],17,[[["self"]],[R[24]]]],[11,"end",E,R[109],17,[[["self"]],[R[24]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[66],E,E,0,[[["self"]],[T]]],[11,R[67],E,E,0,[[[T],["self"]]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",R[96],E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[66],E,E,18,[[["self"]],[T]]],[11,R[67],E,E,18,[[[T],["self"]]]],[11,R[8],E,E,18,[[[U]],[R[2]]]],[11,R[29],E,E,18,[[["self"]],[T]]],[11,R[15],E,E,18,[[["self"]],[R[30]]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[9],E,E,18,[[],[R[2]]]],[11,"from",R[97],E,19,[[[T]],[T]]],[11,R[22],E,E,19,[[],["i"]]],[11,"into",E,E,19,[[],[U]]],[11,R[66],E,E,19,[[["self"]],[T]]],[11,R[67],E,E,19,[[[T],["self"]]]],[11,R[8],E,E,19,[[[U]],[R[2]]]],[11,R[29],E,E,19,[[["self"]],[T]]],[11,R[15],E,E,19,[[["self"]],[R[30]]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[9],E,E,19,[[],[R[2]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[22],E,E,20,[[],["i"]]],[11,"into",E,E,20,[[],[U]]],[11,R[66],E,E,20,[[["self"]],[T]]],[11,R[67],E,E,20,[[[T],["self"]]]],[11,R[8],E,E,20,[[[U]],[R[2]]]],[11,R[29],E,E,20,[[["self"]],[T]]],[11,R[15],E,E,20,[[["self"]],[R[30]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[],[R[2]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[22],E,E,21,[[],["i"]]],[11,"into",E,E,21,[[],[U]]],[11,R[66],E,E,21,[[["self"]],[T]]],[11,R[67],E,E,21,[[[T],["self"]]]],[11,R[8],E,E,21,[[[U]],[R[2]]]],[11,R[29],E,E,21,[[["self"]],[T]]],[11,R[15],E,E,21,[[["self"]],[R[30]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[],[R[2]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[22],E,E,22,[[],["i"]]],[11,"into",E,E,22,[[],[U]]],[11,R[66],E,E,22,[[["self"]],[T]]],[11,R[67],E,E,22,[[[T],["self"]]]],[11,R[8],E,E,22,[[[U]],[R[2]]]],[11,R[29],E,E,22,[[["self"]],[T]]],[11,R[15],E,E,22,[[["self"]],[R[30]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[],[R[2]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[22],E,E,23,[[],["i"]]],[11,"into",E,E,23,[[],[U]]],[11,R[66],E,E,23,[[["self"]],[T]]],[11,R[67],E,E,23,[[[T],["self"]]]],[11,R[8],E,E,23,[[[U]],[R[2]]]],[11,R[29],E,E,23,[[["self"]],[T]]],[11,R[15],E,E,23,[[["self"]],[R[30]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[],[R[2]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[66],E,E,5,[[["self"]],[T]]],[11,R[67],E,E,5,[[[T],["self"]]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[30]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,"from",R[80],E,13,[[[T]],[T]]],[11,R[22],E,E,13,[[],["i"]]],[11,"into",E,E,13,[[],[U]]],[11,R[66],E,E,13,[[["self"]],[T]]],[11,R[67],E,E,13,[[[T],["self"]]]],[11,R[8],E,E,13,[[[U]],[R[2]]]],[11,R[29],E,E,13,[[["self"]],[T]]],[11,R[15],E,E,13,[[["self"]],[R[30]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[],[R[2]]]],[11,R[29],E,E,14,[[["self"]],[T]]],[11,R[15],E,E,14,[[["self"]],[R[30]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,"from",R[98],E,8,[[[T]],[T]]],[11,R[22],E,E,8,[[],["i"]]],[11,"into",E,E,8,[[],[U]]],[11,R[66],E,E,8,[[["self"]],[T]]],[11,R[67],E,E,8,[[[T],["self"]]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[R[30]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,"from",R[99],E,9,[[[T]],[T]]],[11,R[22],E,E,9,[[],["i"]]],[11,"into",E,E,9,[[],[U]]],[11,R[66],E,E,9,[[["self"]],[T]]],[11,R[67],E,E,9,[[[T],["self"]]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[29],E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"]],[R[30]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,"from",R[100],E,15,[[[T]],[T]]],[11,R[22],E,E,15,[[],["i"]]],[11,"into",E,E,15,[[],[U]]],[11,R[66],E,E,15,[[["self"]],[T]]],[11,R[67],E,E,15,[[[T],["self"]]]],[11,R[8],E,E,15,[[[U]],[R[2]]]],[11,R[29],E,E,15,[[["self"]],[T]]],[11,R[15],E,E,15,[[["self"]],[R[30]]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[],[R[2]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[22],E,E,16,[[],["i"]]],[11,"into",E,E,16,[[],[U]]],[11,R[8],E,E,16,[[[U]],[R[2]]]],[11,R[29],E,E,16,[[["self"]],[T]]],[11,R[15],E,E,16,[[["self"]],[R[30]]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[9],E,E,16,[[],[R[2]]]],[11,"find",R[80],E,14,[[[U],["self"]],[[R[24],["usize"]],["usize"]]]],[11,"rfind",E,E,14,[[[U],["self"]],[[R[24],["usize"]],["usize"]]]],[11,"eq",E,E,14,[[[R[107]],["self"]],["bool"]]],[11,"eq",E,E,14,[[["self"]],["bool"]]],[11,R[101],R[99],E,9,[[["self"]],[R[24]]]],[11,R[101],R[100],E,15,[[["self"]],[[R[24]],["a"]]]],[11,R[101],E,E,16,[[["self"]],[[R[24]],["a"]]]],[11,"clone","odds",E,0,[[["self"]],["self"]]],[11,"clone",R[96],E,18,[[["self"]],[R[76]]]],[11,"clone",R[97],E,19,[[["self"]],[R[77]]]],[11,"clone",E,E,20,[[["self"]],[R[78]]]],[11,"clone",E,E,21,[[["self"]],[R[79]]]],[11,"clone",E,E,22,[[["self"]],[R[102]]]],[11,"clone",E,E,23,[[["self"]],[R[103]]]],[11,"clone",E,E,5,[[["self"]],["charstr"]]],[11,"clone",R[98],E,8,[[["self"]],["self"]]],[11,"clone",R[99],E,9,[[["self"]],["self"]]],[11,"clone",R[80],E,13,[[["self"]],["self"]]],[11,"clone",R[100],E,15,[[["self"]],[R[87]]]],[11,"from",R[99],E,9,[[],["self"]]],[11,"next",R[97],E,19,[[["self"]],[["str"],[R[24],["str"]]]]],[11,"next",E,E,20,[[["self"]],[["str"],[R[24],["str"]]]]],[11,"next",E,E,21,[[["self"]],[["str"],[R[24],["str"]]]]],[11,"next",E,E,22,[[["self"]],[["str"],[R[24],["str"]]]]],[11,"next",E,E,23,[[["self"]],[["str"],[R[24],["str"]]]]],[11,"next",R[98],E,8,[[["self"]],[R[24]]]],[11,"next",R[99],E,9,[[["self"]],[R[24]]]],[11,R[104],E,E,9,[[["self"]]]],[11,"count",E,E,9,[[],["usize"]]],[11,"last",E,E,9,[[],[R[24]]]],[11,"next",R[80],E,13,[[["self"]],[R[24]]]],[11,R[104],E,E,13,[[["self"]]]],[11,"next",R[100],E,15,[[["self"]],[[R[24]],["a"]]]],[11,R[104],E,E,15,[[["self"]]]],[11,"next",E,E,16,[[["self"]],[[R[24]],["a"]]]],[11,R[104],E,E,16,[[["self"]]]],[11,R[222],R[99],"Create an empty `SliceCopyIter`.",9,[[],["self"]]],[11,"fmt",R[96],E,18,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[97],E,22,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,23,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,5,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[98],E,8,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[99],E,9,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[80],E,14,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[100],E,15,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,16,[[[R[12]],["self"]],[R[2]]]],[11,"hash",R[80],E,14,[[["h"],["self"]]]],[11,"deref",R[97],E,5,[[["self"]],["str"]]],[11,"index",R[80],E,14,[[["self"],["usize"]],[T]]],[11,"index",E,E,14,[[["self"],["r"]],[R[107]]]],[11,"index",R[100],R[105],15,[[["self"],["usize"]],["a"]]],[11,"index",E,R[105],16,[[["self"],["usize"]],["a"]]],[11,R[106],R[80],E,14,[[["self"],["usize"]],[T]]],[11,R[106],E,E,14,[[["self"],["r"]],[R[107]]]],[11,R[106],R[100],"Return a mutable reference to the element at a given index.",16,[[["self"],["usize"]],["a"]]],[11,"start","odds",R[108],17,[[["self"]],[R[24]]]],[11,"end",E,R[109],17,[[["self"]],[R[24]]]]],"p":[[3,"Fix"],[8,"StrExt"],[8,"StrSlice"],[8,R[110]],[8,R[111]],[3,"CharStr"],[8,"VecExt"],[8,R[112]],[3,R[113]],[3,R[114]],[8,R[115]],[8,R[116]],[8,R[117]],[3,R[118]],[3,"RevSlice"],[3,"Stride"],[3,R[119]],[8,R[120]],[3,R[121]],[3,"Prefixes"],[3,"Suffixes"],[3,R[122]],[3,R[123]],[3,R[124]]]};
searchIndex["pbr"]={"doc":"Terminal progress bar for Rust","i":[[3,R[1057],"pbr",E,N,N],[12,"total",E,E,0,N],[12,"is_finish",E,E,0,N],[12,"is_multibar",E,E,0,N],[12,"show_bar",E,E,0,N],[12,"show_speed",E,E,0,N],[12,"show_percent",E,E,0,N],[12,"show_counter",E,E,0,N],[12,"show_time_left",E,E,0,N],[12,"show_tick",E,E,0,N],[12,"show_message",E,E,0,N],[3,"MultiBar",E,E,N,N],[3,"Pipe",E,E,N,N],[3,"PbIter",E,E,N,N],[4,"Units",E,E,N,N],[13,"Default",E,E,1,N],[13,"Bytes",E,E,1,N],[11,"new",E,"Create a new ProgressBar with default configuration.",0,[[["u64"]],[["stdout"],[R[1056],["stdout"]]]]],[11,"on",E,"Create a new ProgressBar with default configuration but…",0,[[["u64"],[T]],[R[1056]]]],[11,"set_units",E,"Set units, default is simple numbers",0,[[["units"],["self"]]]],[11,"format",E,"Set custom format to the drawing bar, default is `[=>-]`",0,[[["str"],["self"]]]],[11,"message",E,"Set message to display in the prefix, call with \"\" to stop…",0,[[["str"],["self"]]]],[11,"tick_format",E,"Set tick format for the progressBar, default is \\|/-",0,[[["str"],["self"]]]],[11,"set_width",E,"Set width, or `None` for default.",0,[[["self"],[R[24],["usize"]],["usize"]]]],[11,"set_max_refresh_rate",E,"Set max refresh rate, above which the progress bar will…",0,[[["self"],[R[24],[R[800]]],[R[800]]]]],[11,"tick",E,"Update progress bar even though no progress are made…",0,[[["self"]]]],[11,"add",E,"Add to current value",0,[[["self"],["u64"]],["u64"]]],[11,"set",E,"Manually set the current value of the bar",0,[[["self"],["u64"]],["u64"]]],[11,"inc",E,"Increment current value",0,[[["self"]],["u64"]]],[11,"finish",E,"Calling finish manually will set current to total and draw…",0,[[["self"]]]],[11,"finish_print",E,"Call finish and write string `s` that will replace the…",0,[[["str"],["self"]]]],[11,"finish_println",E,"Call finish and write string `s` below the progress bar.",0,[[["str"],["self"]]]],[11,"new",E,"Create a new MultiBar with stdout as a writer.",2,[[],[["stdout"],["multibar",["stdout"]]]]],[11,"on",E,"Create a new MultiBar with an arbitrary writer.",2,[[[T]],["multibar"]]],[11,"println",E,"println used to add text lines between the bars. for…",2,[[["str"],["self"]]]],[11,"create_bar",E,"create_bar creates new `ProgressBar` with `Pipe` as the…",2,[[["self"],["u64"]],[["pipe"],[R[1056],["pipe"]]]]],[11,"listen",E,"listen start listen to all bars changes.",2,[[["self"]]]],[11,"new",E,E,3,[[["i"]],["self"]]],[11,"on",E,E,3,[[["i"],[T]],["self"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[30]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[22],E,E,3,[[],["i"]]],[11,"into",E,E,3,[[],[U]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"next",E,E,3,[[["self"]],[R[24]]]],[11,R[104],E,E,3,[[["self"]]]],[11,"fmt",E,E,1,[[[R[12]],["self"]],[R[2]]]],[11,"write",E,E,0,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,"flush",E,E,0,[[["self"]],[R[2]]]],[11,"write",E,E,4,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,"flush",E,E,4,[[["self"]],[R[2]]]]],"p":[[3,R[1057]],[4,"Units"],[3,"MultiBar"],[3,"PbIter"],[3,"Pipe"]]};
searchIndex["png"]={"doc":"PNG encoder and decoder This crate contains a PNG encoder…","i":[[3,R[1382],"png","Pixel dimensions information",N,N],[12,"xppu",E,"Pixels per unit, X axis",0,N],[12,"yppu",E,"Pixels per unit, Y axis",0,N],[12,"unit",E,"Either Meter or Unspecified",0,N],[3,R[1384],E,"Frame control information",N,N],[12,"sequence_number",E,"Sequence number of the animation chunk, starting from 0",1,N],[12,"width",E,"Width of the following frame",1,N],[12,"height",E,"Height of the following frame",1,N],[12,"x_offset",E,"X position at which to render the following frame",1,N],[12,"y_offset",E,"Y position at which to render the following frame",1,N],[12,"delay_num",E,"Frame delay fraction numerator",1,N],[12,"delay_den",E,"Frame delay fraction denominator",1,N],[12,"dispose_op",E,"Type of frame area disposal to be done after rendering…",1,N],[12,"blend_op",E,"Type of frame area rendering for this frame",1,N],[3,R[1383],E,"Animation control information",N,N],[12,"num_frames",E,"Number of frames",2,N],[12,"num_plays",E,"Number of times to loop this APNG. 0 indicates infinite…",2,N],[3,"Info",E,"PNG info struct",N,N],[12,"width",E,E,3,N],[12,"height",E,E,3,N],[12,"bit_depth",E,E,3,N],[12,R[1603],E,E,3,N],[12,R[1634],E,E,3,N],[12,"trns",E,E,3,N],[12,"pixel_dims",E,E,3,N],[12,"palette",E,E,3,N],[12,R[1393],E,E,3,N],[12,R[1391],E,E,3,N],[3,R[1399],E,"Output transformations",N,N],[3,"Decoder",E,"PNG Decoder",N,N],[3,"Reader",E,"PNG reader (mostly high-level interface)",N,N],[3,"OutputInfo",E,"Output info",N,N],[12,"width",E,E,4,N],[12,"height",E,E,4,N],[12,R[1603],E,E,4,N],[12,"bit_depth",E,E,4,N],[12,"line_size",E,E,4,N],[3,R[332],E,"PNG StreamingDecoder (low-level interface)",N,N],[3,"Encoder",E,"PNG Encoder",N,N],[3,"Writer",E,"PNG writer",N,N],[4,R[1635],E,E,N,N],[13,"Grayscale",E,E,5,N],[13,"RGB",E,E,5,N],[13,"Indexed",E,E,5,N],[13,"GrayscaleAlpha",E,E,5,N],[13,"RGBA",E,E,5,N],[4,"BitDepth",E,"Bit depth of the png file",N,N],[13,"One",E,E,6,N],[13,"Two",E,E,6,N],[13,"Four",E,E,6,N],[13,"Eight",E,E,6,N],[13,"Sixteen",E,E,6,N],[4,"Unit",E,"Physical unit of the pixel dimensions",N,N],[13,"Unspecified",E,E,7,N],[13,"Meter",E,E,7,N],[4,"Decoded",E,"Result of the decoding process",N,N],[13,"Nothing",E,"Nothing decoded yet",8,N],[13,"Header",E,E,8,N],[13,"ChunkBegin",E,E,8,N],[13,"ChunkComplete",E,E,8,N],[13,R[1382],E,E,8,N],[13,R[1383],E,E,8,N],[13,R[1384],E,E,8,N],[13,"ImageData",E,"Decoded raw image data.",8,N],[13,"PartialChunk",E,E,8,N],[13,"ImageEnd",E,E,8,N],[4,R[328],E,E,N,N],[13,"IoError",E,E,9,N],[13,"Format",E,E,9,N],[13,"InvalidSignature",E,E,9,N],[13,"CrcMismatch",E,E,9,N],[12,"recover","png::DecodingError","bytes to skip to try to recover from this error",9,N],[12,"crc_val",E,"Stored CRC32 value",9,N],[12,"crc_sum",E,"Calculated CRC32 sum",9,N],[12,"chunk",E,E,9,N],[13,"Other","png",E,9,N],[13,"CorruptFlateStream",E,E,9,N],[4,R[1398],E,E,N,N],[13,"IoError",E,E,10,N],[13,"Format",E,E,10,N],[0,"chunk",E,"Chunk types and functions",N,N],[5,"is_critical","png::chunk","Returns true if the chunk is critical.",N,[[[R[1385]]],["bool"]]],[5,"is_private",E,"Returns true if the chunk is private.",N,[[[R[1385]]],["bool"]]],[5,"reserved_set",E,"Checks whether the reserved bit of the chunk name is set.…",N,[[[R[1385]]],["bool"]]],[5,"save_to_copy",E,"Returns true if the chunk is safe to copy if unknown.",N,[[[R[1385]]],["bool"]]],[6,"ChunkType",E,E,N,N],[17,"IHDR",E,"Image header",N,N],[17,"PLTE",E,"Palette",N,N],[17,"IDAT",E,"Image data",N,N],[17,"IEND",E,"Image trailer",N,N],[17,"tRNS",E,"Transparency",N,N],[17,"bKGD",E,"Background colour",N,N],[17,"tIME",E,"Image last-modification time",N,N],[17,"pHYs",E,"Physical pixel dimensions",N,N],[17,"acTL",E,"Animation control",N,N],[17,"fcTL",E,"Frame control",N,N],[17,"fdAT",E,"Frame data",N,N],[11,"new","png","Creates a new StreamingDecoder",11,[[],[R[323]]]],[11,"reset",E,"Resets the StreamingDecoder",11,[[["self"]]]],[11,"update",E,"Low level StreamingDecoder interface.",11,[[["self"]],[[R[2],[R[318]]],[R[318]]]]],[11,R[1386],E,"Returns the size needed to hold a decoded frame",4,[[["self"]],["usize"]]],[11,"new",E,E,12,[[["r"]],["decoder"]]],[11,"read_info",E,"Reads all meta data until the first IDAT chunk",12,[[],[[R[318]],[R[2],[R[318]]]]]],[11,"info",E,E,13,[[["self"]],["info"]]],[11,"next_frame",E,"Decodes the next frame into `buf`",13,[[["self"]],[[R[2],[R[318]]],[R[318]]]]],[11,"next_row",E,R[1387],13,[[["self"]],[[R[24]],[R[318]],[R[2],[R[24],R[318]]]]]],[11,"next_interlaced_row",E,R[1387],13,[[["self"]],[[R[2],[R[24],R[318]]],[R[318]],[R[24]]]]],[11,"output_color_type",E,"Returns the color type and the number of bits per sample…",13,[[["self"]]]],[11,"output_buffer_size",E,R[1388],13,[[["self"]],["usize"]]],[11,"output_line_size",E,R[1388],13,[[["u32"],["self"]],["usize"]]],[11,"new",E,E,14,[[["u32"],["w"]],["encoder"]]],[11,"write_header",E,E,14,[[],[[R[2],["writer",R[1389]]],["writer"],[R[1389]]]]],[11,"write_chunk",E,E,15,[[["self"]],[[R[1389]],[R[2],[R[1389]]]]]],[11,"write_image_data",E,"Writes the image data.",15,[[["self"]],[[R[1389]],[R[2],[R[1389]]]]]],[11,"samples",E,"Returns the number of samples used per pixel of `ColorType`",5,[[["self"]],["usize"]]],[11,"from_u8",E,R[1390],5,[[["u8"]],[[R[1397]],[R[24],[R[1397]]]]]],[11,"from_u8",E,R[1390],6,[[["u8"]],[["bitdepth"],[R[24],["bitdepth"]]]]],[11,"from_u8",E,R[1390],7,[[["u8"]],[["unit"],[R[24],["unit"]]]]],[11,"size",E,"Size of the image",3,[[["self"]]]],[11,R[1609],E,"Returns true if the image is an APNG image.",3,[[["self"]],["bool"]]],[11,R[1391],E,"Returns the frame control information of the image",3,[[["self"]],[[R[1392]],[R[24],[R[1392]]]]]],[11,R[1393],E,"Returns the frame control information of the current frame",3,[[["self"]],[[R[1394]],[R[24],[R[1394]]]]]],[11,"bits_per_pixel",E,"Returns the bits per pixel",3,[[["self"]],["usize"]]],[11,"bytes_per_pixel",E,"Returns the bytes per pixel",3,[[["self"]],["usize"]]],[11,"raw_bytes",E,R[1395],3,[[["self"]],["usize"]]],[11,"raw_row_length",E,"Returns the number of bytes needed for one deinterlaced row ",3,[[["self"]],["usize"]]],[11,"raw_row_length_from_width",E,R[1395],3,[[["u32"],["self"]],["usize"]]],[11,"empty",E,"Returns an empty set of flags.",16,[[],[R[1396]]]],[11,"all",E,"Returns the set containing all flags.",16,[[],[R[1396]]]],[11,"bits",E,"Returns the raw value of the flags currently stored.",16,[[["self"]],["u32"]]],[11,"from_bits",E,"Convert from underlying bit representation, unless that…",16,[[["u32"]],[[R[24],[R[1396]]],[R[1396]]]]],[11,"from_bits_truncate",E,"Convert from underlying bit representation, dropping any…",16,[[["u32"]],[R[1396]]]],[11,R[404],E,"Returns `true` if no flags are currently stored.",16,[[["self"]],["bool"]]],[11,"is_all",E,"Returns `true` if all flags are currently set.",16,[[["self"]],["bool"]]],[11,"intersects",E,"Returns `true` if there are flags common to both `self`…",16,[[["self"],[R[1396]]],["bool"]]],[11,"contains",E,"Returns `true` all of the flags in `other` are contained…",16,[[["self"],[R[1396]]],["bool"]]],[11,"insert",E,"Inserts the specified flags in-place.",16,[[["self"],[R[1396]]]]],[11,"remove",E,"Removes the specified flags in-place.",16,[[["self"],[R[1396]]]]],[11,"toggle",E,"Toggles the specified flags in-place.",16,[[["self"],[R[1396]]]]],[17,"TRANSFORM_IDENTITY",E,"No transformation",N,N],[17,"TRANSFORM_STRIP_16",E,"Strip 16-bit samples to 8 bits",N,N],[17,"TRANSFORM_STRIP_ALPHA",E,"Discard the alpha channel",N,N],[17,"TRANSFORM_PACKING",E,"Expand 1, 2 and 4-bit samples to bytes",N,N],[17,"TRANSFORM_PACKSWAP",E,"Change order of packed pixels to LSB first",N,N],[17,"TRANSFORM_EXPAND",E,"Expand paletted images to RGB, expand grayscale images of…",N,N],[17,"TRANSFORM_INVERT_MONO",E,"Invert monochrome images",N,N],[17,"TRANSFORM_SHIFT",E,"Normalize pixels to the sBIT depth",N,N],[17,"TRANSFORM_BGR",E,"Flip RGB to BGR, RGBA to BGRA",N,N],[17,"TRANSFORM_SWAP_ALPHA",E,"Flip RGBA to ARGB or GA to AG",N,N],[17,"TRANSFORM_SWAP_ENDIAN",E,"Byte-swap 16-bit samples",N,N],[17,"TRANSFORM_INVERT_ALPHA",E,"Change alpha from opacity to transparency",N,N],[17,"TRANSFORM_STRIP_FILLER",E,E,N,N],[17,"TRANSFORM_STRIP_FILLER_BEFORE",E,E,N,N],[17,"TRANSFORM_STRIP_FILLER_AFTER",E,E,N,N],[17,"TRANSFORM_GRAY_TO_RGB",E,E,N,N],[17,"TRANSFORM_EXPAND_16",E,E,N,N],[17,"TRANSFORM_SCALE_16",E,E,N,N],[8,R[334],E,"Configuration parameter trait",N,N],[10,R[322],E,E,17,[[["object"]]]],[8,R[1400],E,"Object has parameters",N,N],[11,"set",E,E,18,[[["self"],[R[325]]],["self"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[66],E,E,0,[[["self"]],[T]]],[11,R[67],E,E,0,[[[T],["self"]]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[66],E,E,2,[[["self"]],[T]]],[11,R[67],E,E,2,[[[T],["self"]]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[66],E,E,16,[[["self"]],[T]]],[11,R[67],E,E,16,[[[T],["self"]]]],[11,R[8],E,E,16,[[[U]],[R[2]]]],[11,R[29],E,E,16,[[["self"]],[T]]],[11,R[15],E,E,16,[[["self"]],[R[30]]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[9],E,E,16,[[],[R[2]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[8],E,E,12,[[[U]],[R[2]]]],[11,R[29],E,E,12,[[["self"]],[T]]],[11,R[15],E,E,12,[[["self"]],[R[30]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[],[R[2]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[8],E,E,13,[[[U]],[R[2]]]],[11,R[29],E,E,13,[[["self"]],[T]]],[11,R[15],E,E,13,[[["self"]],[R[30]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[],[R[2]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[30]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[8],E,E,11,[[[U]],[R[2]]]],[11,R[29],E,E,11,[[["self"]],[T]]],[11,R[15],E,E,11,[[["self"]],[R[30]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[],[R[2]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[8],E,E,14,[[[U]],[R[2]]]],[11,R[29],E,E,14,[[["self"]],[T]]],[11,R[15],E,E,14,[[["self"]],[R[30]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[],[R[2]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[8],E,E,15,[[[U]],[R[2]]]],[11,R[29],E,E,15,[[["self"]],[T]]],[11,R[15],E,E,15,[[["self"]],[R[30]]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[],[R[2]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[66],E,E,5,[[["self"]],[T]]],[11,R[67],E,E,5,[[[T],["self"]]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[30]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[66],E,E,6,[[["self"]],[T]]],[11,R[67],E,E,6,[[[T],["self"]]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[30]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[66],E,E,7,[[["self"]],[T]]],[11,R[67],E,E,7,[[[T],["self"]]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[30]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[R[30]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[161],E,E,9,[[["self"]],[R[34]]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[29],E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"]],[R[30]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[161],E,E,10,[[["self"]],[R[34]]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[29],E,E,10,[[["self"]],[T]]],[11,R[15],E,E,10,[[["self"]],[R[30]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,R[322],E,E,16,[[["decoder"]]]],[11,R[322],E,E,5,[[["encoder"]]]],[11,R[322],E,E,6,[[["encoder"]]]],[11,"eq",E,E,5,[[["self"],[R[1397]]],["bool"]]],[11,"eq",E,E,6,[[["self"],["bitdepth"]],["bool"]]],[11,"eq",E,E,7,[[["self"],["unit"]],["bool"]]],[11,"eq",E,E,16,[[[R[1396]],["self"]],["bool"]]],[11,"ne",E,E,16,[[[R[1396]],["self"]],["bool"]]],[11,"clone",E,E,5,[[["self"]],[R[1397]]]],[11,"clone",E,E,6,[[["self"]],["bitdepth"]]],[11,"clone",E,E,0,[[["self"]],["pixeldimensions"]]],[11,"clone",E,E,7,[[["self"]],["unit"]]],[11,"clone",E,E,2,[[["self"]],[R[1392]]]],[11,"clone",E,E,16,[[["self"]],[R[1396]]]],[11,"cmp",E,E,16,[[[R[1396]],["self"]],[R[23]]]],[11,"from",E,E,9,[[["error"]],[R[318]]]],[11,"from",E,E,9,[[[R[34]]],[R[318]]]],[11,"from",E,E,10,[[["error"]],[R[1389]]]],[11,"extend",E,E,16,[[[R[131]],["self"]]]],[11,"drop",E,E,15,[[["self"]]]],[11,R[62],E,E,16,[[[R[1396]],["self"]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,16,[[[R[1396]],["self"]],["bool"]]],[11,"le",E,E,16,[[[R[1396]],["self"]],["bool"]]],[11,"gt",E,E,16,[[[R[1396]],["self"]],["bool"]]],[11,"ge",E,E,16,[[[R[1396]],["self"]],["bool"]]],[11,R[222],E,E,3,[[],["info"]]],[11,"fmt",E,E,8,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,9,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,10,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,5,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,6,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,7,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,1,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,2,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,3,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,16,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,9,[[[R[12]],["self"]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,10,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"hash",E,E,16,[[["self"],["__h"]]]],[11,"sub",E,"Returns the set difference of the two sets of flags.",16,[[[R[1396]]],[R[1396]]]],[11,R[1348],E,"Disables all flags enabled in the set.",16,[[["self"],[R[1396]]]]],[11,"not",E,"Returns the complement of this set of flags.",16,[[],[R[1396]]]],[11,"bitand",E,"Returns the intersection between the two sets of flags.",16,[[[R[1396]]],[R[1396]]]],[11,"bitor",E,"Returns the union of the two sets of flags.",16,[[[R[1396]]],[R[1396]]]],[11,"bitxor",E,"Returns the left flags, but with all the right flags…",16,[[[R[1396]]],[R[1396]]]],[11,"bitand_assign",E,"Disables all flags disabled in the set.",16,[[["self"],[R[1396]]]]],[11,"bitor_assign",E,"Adds the set of flags.",16,[[["self"],[R[1396]]]]],[11,"bitxor_assign",E,"Toggles the set of flags.",16,[[["self"],[R[1396]]]]],[11,R[357],E,E,16,[[[R[131]]],[R[1396]]]],[11,R[485],E,E,9,[[["self"]],["str"]]],[11,R[485],E,E,10,[[["self"]],["str"]]],[11,"set",E,E,18,[[["self"],[R[325]]],["self"]]]],"p":[[3,R[1382]],[3,R[1384]],[3,R[1383]],[3,"Info"],[3,"OutputInfo"],[4,R[1635]],[4,"BitDepth"],[4,"Unit"],[4,"Decoded"],[4,R[328]],[4,R[1398]],[3,R[332]],[3,"Decoder"],[3,"Reader"],[3,"Encoder"],[3,"Writer"],[3,R[1399]],[8,R[334]],[8,R[1400]]]};
searchIndex["rand"]={"doc":"Utilities for random number generation","i":[[3,"OsRng","rand",R[1058],N,N],[3,R[858],E,R[818],N,N],[3,R[819],E,R[820],N,N],[3,R[816],E,R[817],N,N],[0,"isaac",E,"The ISAAC random number generator.",N,N],[3,R[858],R[1067],R[818],N,N],[3,R[819],E,R[820],N,N],[0,"chacha","rand","The ChaCha random number generator.",N,N],[3,R[816],R[1068],R[817],N,N],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it…",N,N],[3,R[857],R[831],"A wrapper around any RNG which reseeds the underlying RNG…",N,N],[12,"reseeder",E,"Controls the behaviour when reseeding the RNG.",0,N],[8,"Reseeder",E,"Something that can be used to reseed an RNG via…",N,N],[10,"reseed",E,"Reseed the given RNG.",1,[[["r"],["self"]]]],[3,R[864],E,"Reseed an RNG using a `Default` instance. This reseeds by…",N,N],[0,"os","rand","Interfaces to the operating system provided random number…",N,N],[3,"OsRng",R[837],R[1058],N,N],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",N,N],[3,"ReadRng",R[830],"An RNG that reads random bytes straight from a `Read`.…",N,N],[8,"Rng","rand","A random number generator.",N,N],[10,R[836],E,"Return the next random u32.",2,[[["self"]],["u32"]]],[11,R[838],E,"Return the next random u64.",2,[[["self"]],["u64"]]],[11,"next_f32",E,"Return the next random f32 selected from the half-open…",2,[[["self"]],["f32"]]],[11,"next_f64",E,"Return the next random f64 selected from the half-open…",2,[[["self"]],["f64"]]],[11,R[835],E,"Fill `dest` with random data.",2,[[["self"]]]],[11,"gen",E,"Return a random value of a `Rand` type.",2,[[["self"]],[T]]],[11,"gen_iter",E,"Return an iterator that will yield an infinite number of…",2,[[["self"]],["generator"]]],[11,"gen_range",E,"Generate a random value in the range [`low`, `high`).",2,[[["self"],[T]],[T]]],[11,"gen_weighted_bool",E,"Return a bool with a 1 in n chance of true",2,[[["u32"],["self"]],["bool"]]],[11,"gen_ascii_chars",E,"Return an iterator of random characters from the set…",2,[[["self"]],["asciigenerator"]]],[11,"choose",E,"Return a random element from `values`.",2,[[["self"]],[[T],[R[24]]]]],[11,"choose_mut",E,"Return a mutable pointer to a random element from `values`.",2,[[["self"]],[[R[24]],[T]]]],[11,"shuffle",E,"Shuffle a mutable slice in place.",2,[[["self"]]]],[8,"Rand",E,"A type that can be randomly generated using an `Rng`.",N,N],[10,"rand",E,"Generates a random instance of this type using the…",3,[[["r"]],["self"]]],[8,R[860],E,"A random number generator that can be explicitly seeded to…",N,N],[10,"reseed",E,"Reseed an RNG with the given seed.",4,[[["seed"],["self"]]]],[10,R[839],E,"Create a new RNG with the given seed.",4,[[["seed"]],["self"]]],[3,R[861],E,"Iterator which will generate a stream of random items.",N,N],[3,R[862],E,"Iterator which will continuously generate random ascii…",N,N],[3,R[859],E,"An Xorshift[1] random number generator.",N,N],[3,"Open01",E,R[812],N,N],[12,"0",E,E,5,N],[3,"Closed01",E,R[812],N,N],[12,"0",E,E,6,N],[3,"StdRng",E,"The standard RNG. This is designed to be efficient on the…",N,N],[5,"weak_rng",E,"Create a weak random number generator with a default…",N,[[],[R[822]]]],[3,R[863],E,"The thread-local RNG.",N,N],[5,"thread_rng",E,"Retrieve the lazily-initialized thread-local random number…",N,[[],[R[846]]]],[5,"random",E,"Generates a random value using the thread-local random…",N,[[],[T]]],[5,"sample",E,"DEPRECATED: use `seq::sample_iter` instead.",N,[[["r"],["i"],["usize"]],["vec"]]],[0,"distributions",E,"Sampling from random distributions.",N,N],[3,"Range",R[813],R[1059],N,N],[3,"Gamma",E,R[1060],N,N],[3,R[849],E,R[1061],N,N],[3,"FisherF",E,R[1062],N,N],[3,"StudentT",E,R[1063],N,N],[3,"Normal",E,R[1064],N,N],[3,R[851],E,R[1065],N,N],[3,"Exp",E,R[1066],N,N],[0,"range",E,"Generating numbers between two others.",N,N],[3,"Range",R[825],R[1059],N,N],[8,R[848],E,"The helper trait for types that have a sensible way to…",N,N],[10,"construct_range",E,"Construct the `Range` object that `sample_range` requires.…",7,[[],["range"]]],[10,"sample_range",E,"Sample a value from the given `Range` with the given `Rng`…",7,[[["range"],["r"]],["self"]]],[0,"gamma",R[813],"The Gamma and derived distributions.",N,N],[3,"Gamma",R[826],R[1060],N,N],[3,R[849],E,R[1061],N,N],[3,"FisherF",E,R[1062],N,N],[3,"StudentT",E,R[1063],N,N],[0,"normal",R[813],"The normal and derived distributions.",N,N],[3,R[850],R[827],"A wrapper around an `f64` to generate N(0, 1) random…",N,N],[12,"0",E,E,8,N],[3,"Normal",E,R[1064],N,N],[3,R[851],E,R[1065],N,N],[0,"exponential",R[813],"The exponential distribution.",N,N],[3,"Exp1",R[828],"A wrapper around an `f64` to generate Exp(1) random numbers.",N,N],[12,"0",E,E,9,N],[3,"Exp",E,R[1066],N,N],[8,"Sample",R[813],"Types that can be used to create a random instance of…",N,N],[10,"sample",E,"Generate a random value of `Support`, using `rng` as the…",10,[[["r"],["self"]],["support"]]],[8,R[852],E,"`Sample`s that do not require keeping track of state.",N,N],[10,R[832],E,"Generate a random value.",11,[[["r"],["self"]],["support"]]],[3,R[853],E,"A wrapper for generating types that implement `Rand` via…",N,N],[3,"Weighted",E,"A value with a particular weight for use with…",N,N],[12,"weight",E,"The numerical weight of this item",12,N],[12,"item",E,"The actual item which is being weighted",12,N],[3,R[854],E,"A distribution that selects from a finite collection of…",N,N],[11,"from",R[837],E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[8],E,E,13,[[[U]],[R[2]]]],[11,R[29],E,E,13,[[["self"]],[T]]],[11,R[15],E,E,13,[[["self"]],[R[30]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[],[R[2]]]],[11,"from",R[1067],E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[66],E,E,14,[[["self"]],[T]]],[11,R[67],E,E,14,[[[T],["self"]]]],[11,R[8],E,E,14,[[[U]],[R[2]]]],[11,R[29],E,E,14,[[["self"]],[T]]],[11,R[15],E,E,14,[[["self"]],[R[30]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[],[R[2]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[66],E,E,15,[[["self"]],[T]]],[11,R[67],E,E,15,[[[T],["self"]]]],[11,R[8],E,E,15,[[[U]],[R[2]]]],[11,R[29],E,E,15,[[["self"]],[T]]],[11,R[15],E,E,15,[[["self"]],[R[30]]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[],[R[2]]]],[11,"from",R[1068],E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[66],E,E,16,[[["self"]],[T]]],[11,R[67],E,E,16,[[[T],["self"]]]],[11,R[8],E,E,16,[[[U]],[R[2]]]],[11,R[29],E,E,16,[[["self"]],[T]]],[11,R[15],E,E,16,[[["self"]],[R[30]]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[9],E,E,16,[[],[R[2]]]],[11,"from",R[831],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[66],E,E,17,[[["self"]],[T]]],[11,R[67],E,E,17,[[[T],["self"]]]],[11,R[8],E,E,17,[[[U]],[R[2]]]],[11,R[29],E,E,17,[[["self"]],[T]]],[11,R[15],E,E,17,[[["self"]],[R[30]]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[9],E,E,17,[[],[R[2]]]],[11,"from",R[830],E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[8],E,E,18,[[[U]],[R[2]]]],[11,R[29],E,E,18,[[["self"]],[T]]],[11,R[15],E,E,18,[[["self"]],[R[30]]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[9],E,E,18,[[],[R[2]]]],[11,"from","rand",E,19,[[[T]],[T]]],[11,R[22],E,E,19,[[],["i"]]],[11,"into",E,E,19,[[],[U]]],[11,R[8],E,E,19,[[[U]],[R[2]]]],[11,R[29],E,E,19,[[["self"]],[T]]],[11,R[15],E,E,19,[[["self"]],[R[30]]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[9],E,E,19,[[],[R[2]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[22],E,E,20,[[],["i"]]],[11,"into",E,E,20,[[],[U]]],[11,R[8],E,E,20,[[[U]],[R[2]]]],[11,R[29],E,E,20,[[["self"]],[T]]],[11,R[15],E,E,20,[[["self"]],[R[30]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[],[R[2]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[66],E,E,21,[[["self"]],[T]]],[11,R[67],E,E,21,[[[T],["self"]]]],[11,R[8],E,E,21,[[[U]],[R[2]]]],[11,R[29],E,E,21,[[["self"]],[T]]],[11,R[15],E,E,21,[[["self"]],[R[30]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[],[R[2]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[30]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[30]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[66],E,E,22,[[["self"]],[T]]],[11,R[67],E,E,22,[[[T],["self"]]]],[11,R[8],E,E,22,[[[U]],[R[2]]]],[11,R[29],E,E,22,[[["self"]],[T]]],[11,R[15],E,E,22,[[["self"]],[R[30]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[],[R[2]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[66],E,E,23,[[["self"]],[T]]],[11,R[67],E,E,23,[[[T],["self"]]]],[11,R[8],E,E,23,[[[U]],[R[2]]]],[11,R[29],E,E,23,[[["self"]],[T]]],[11,R[15],E,E,23,[[["self"]],[R[30]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[],[R[2]]]],[11,"from",R[825],E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[66],E,E,24,[[["self"]],[T]]],[11,R[67],E,E,24,[[[T],["self"]]]],[11,R[8],E,E,24,[[[U]],[R[2]]]],[11,R[29],E,E,24,[[["self"]],[T]]],[11,R[15],E,E,24,[[["self"]],[R[30]]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[],[R[2]]]],[11,"from",R[826],E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[66],E,E,25,[[["self"]],[T]]],[11,R[67],E,E,25,[[[T],["self"]]]],[11,R[8],E,E,25,[[[U]],[R[2]]]],[11,R[29],E,E,25,[[["self"]],[T]]],[11,R[15],E,E,25,[[["self"]],[R[30]]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[9],E,E,25,[[],[R[2]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[66],E,E,26,[[["self"]],[T]]],[11,R[67],E,E,26,[[[T],["self"]]]],[11,R[8],E,E,26,[[[U]],[R[2]]]],[11,R[29],E,E,26,[[["self"]],[T]]],[11,R[15],E,E,26,[[["self"]],[R[30]]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[9],E,E,26,[[],[R[2]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[66],E,E,27,[[["self"]],[T]]],[11,R[67],E,E,27,[[[T],["self"]]]],[11,R[8],E,E,27,[[[U]],[R[2]]]],[11,R[29],E,E,27,[[["self"]],[T]]],[11,R[15],E,E,27,[[["self"]],[R[30]]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[],[R[2]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[66],E,E,28,[[["self"]],[T]]],[11,R[67],E,E,28,[[[T],["self"]]]],[11,R[8],E,E,28,[[[U]],[R[2]]]],[11,R[29],E,E,28,[[["self"]],[T]]],[11,R[15],E,E,28,[[["self"]],[R[30]]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[],[R[2]]]],[11,"from",R[827],E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[66],E,E,29,[[["self"]],[T]]],[11,R[67],E,E,29,[[[T],["self"]]]],[11,R[8],E,E,29,[[[U]],[R[2]]]],[11,R[29],E,E,29,[[["self"]],[T]]],[11,R[15],E,E,29,[[["self"]],[R[30]]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[],[R[2]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[66],E,E,30,[[["self"]],[T]]],[11,R[67],E,E,30,[[[T],["self"]]]],[11,R[8],E,E,30,[[[U]],[R[2]]]],[11,R[29],E,E,30,[[["self"]],[T]]],[11,R[15],E,E,30,[[["self"]],[R[30]]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[],[R[2]]]],[11,"from",R[828],E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[66],E,E,31,[[["self"]],[T]]],[11,R[67],E,E,31,[[[T],["self"]]]],[11,R[8],E,E,31,[[[U]],[R[2]]]],[11,R[29],E,E,31,[[["self"]],[T]]],[11,R[15],E,E,31,[[["self"]],[R[30]]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[],[R[2]]]],[11,"from",R[827],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[66],E,E,8,[[["self"]],[T]]],[11,R[67],E,E,8,[[[T],["self"]]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[R[30]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,"from",R[828],E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[66],E,E,9,[[["self"]],[T]]],[11,R[67],E,E,9,[[[T],["self"]]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[29],E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"]],[R[30]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,"from",R[813],E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[66],E,E,32,[[["self"]],[T]]],[11,R[67],E,E,32,[[[T],["self"]]]],[11,R[8],E,E,32,[[[U]],[R[2]]]],[11,R[29],E,E,32,[[["self"]],[T]]],[11,R[15],E,E,32,[[["self"]],[R[30]]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[],[R[2]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[66],E,E,12,[[["self"]],[T]]],[11,R[67],E,E,12,[[[T],["self"]]]],[11,R[8],E,E,12,[[[U]],[R[2]]]],[11,R[29],E,E,12,[[["self"]],[T]]],[11,R[15],E,E,12,[[["self"]],[R[30]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[],[R[2]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[8],E,E,33,[[[U]],[R[2]]]],[11,R[29],E,E,33,[[["self"]],[T]]],[11,R[15],E,E,33,[[["self"]],[R[30]]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[9],E,E,33,[[],[R[2]]]],[11,"fmt",R[826],E,27,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt","rand",E,23,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[831],E,17,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[826],E,25,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1067],E,15,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt","rand",E,6,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[828],E,9,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[830],E,18,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[831],E,0,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt","rand",E,20,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[813],E,33,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1068],E,16,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[825],E,24,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt","rand",E,22,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[813],E,32,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[828],E,31,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt","rand",E,5,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1067],E,14,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[827],E,8,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,30,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[826],E,26,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[813],E,12,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt","rand",E,21,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[826],E,28,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt","rand",E,19,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[837],E,13,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[827],E,29,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"reseed",R[831],E,17,[[["r"],["self"]]]],[11,"next","rand",E,19,[[["self"]],[R[24]]]],[11,"next",E,E,20,[[["self"]],[["char"],[R[24],["char"]]]]],[11,R[836],E,E,23,[[["self"]],["u32"]]],[11,R[838],E,E,23,[[["self"]],["u64"]]],[11,R[835],E,E,23,[[["self"]]]],[11,R[836],R[831],E,0,[[["self"]],["u32"]]],[11,R[838],E,E,0,[[["self"]],["u64"]]],[11,R[835],E,E,0,[[["self"]]]],[11,R[836],"rand",E,22,[[["self"]],["u32"]]],[11,R[838],E,E,22,[[["self"]],["u64"]]],[11,R[836],R[830],E,18,[[["self"]],["u32"]]],[11,R[838],E,E,18,[[["self"]],["u64"]]],[11,R[835],E,E,18,[[["self"]]]],[11,R[836],"rand",E,21,[[["self"]],["u32"]]],[11,R[836],R[1068],E,16,[[["self"]],["u32"]]],[11,R[836],R[1067],E,14,[[["self"]],["u32"]]],[11,R[836],R[837],E,13,[[["self"]],["u32"]]],[11,R[838],E,E,13,[[["self"]],["u64"]]],[11,R[835],E,E,13,[[["self"]]]],[11,R[836],R[1067],E,15,[[["self"]],["u32"]]],[11,R[838],E,E,15,[[["self"]],["u64"]]],[11,"clone",R[826],E,26,[[["self"]],[R[843]]]],[11,"clone",R[813],E,12,[[["self"]],["weighted"]]],[11,"clone","rand",E,21,[[["self"]],[R[822]]]],[11,"clone",R[826],E,25,[[["self"]],["gamma"]]],[11,"clone",R[813],E,32,[[["self"]],["randsample"]]],[11,"clone",R[825],E,24,[[["self"]],["range"]]],[11,"clone",R[1067],E,15,[[["self"]],[R[834]]]],[11,"clone",R[827],E,8,[[["self"]],[R[844]]]],[11,"clone",R[826],E,27,[[["self"]],["fisherf"]]],[11,"clone",R[828],E,9,[[["self"]],["exp1"]]],[11,"clone","rand",E,22,[[["self"]],["stdrng"]]],[11,"clone",R[1067],E,14,[[["self"]],[R[841]]]],[11,"clone",R[826],E,28,[[["self"]],["studentt"]]],[11,"clone","rand",E,23,[[["self"]],[R[846]]]],[11,"clone",R[827],E,29,[[["self"]],["normal"]]],[11,"clone",R[831],E,17,[[["self"]],[R[847]]]],[11,"clone",R[828],E,31,[[["self"]],["exp"]]],[11,"clone",R[1068],E,16,[[["self"]],[R[833]]]],[11,"clone",R[827],E,30,[[["self"]],[R[845]]]],[11,R[832],R[813],E,33,[[["r"],["self"]],[T]]],[11,R[832],R[826],E,26,[[["r"],["self"]],["f64"]]],[11,R[832],E,E,27,[[["r"],["self"]],["f64"]]],[11,R[832],R[825],E,24,[[["r"],["self"]],["sup"]]],[11,R[832],R[826],E,28,[[["r"],["self"]],["f64"]]],[11,R[832],E,E,25,[[["r"],["self"]],["f64"]]],[11,R[832],R[827],E,29,[[["r"],["self"]],["f64"]]],[11,R[832],R[828],E,31,[[["r"],["self"]],["f64"]]],[11,R[832],R[813],E,32,[[["r"],["self"]],["sup"]]],[11,R[832],R[827],E,30,[[["r"],["self"]],["f64"]]],[11,"rand","rand",E,21,[[["r"]],[R[822]]]],[11,"rand",R[828],E,9,[[["r"]],["exp1"]]],[11,"rand",R[1067],E,14,[[["r"]],[R[841]]]],[11,"rand","rand",E,5,[[["r"]],[["open01",["f32"]],["f32"]]]],[11,"rand",E,E,6,[[["r"]],[["closed01",["f32"]],["f32"]]]],[11,"rand",E,E,5,[[["r"]],[["f64"],["open01",["f64"]]]]],[11,"rand",R[1068],E,16,[[["r"]],[R[833]]]],[11,"rand","rand",E,6,[[["r"]],[["closed01",["f64"]],["f64"]]]],[11,"rand",R[827],E,8,[[["r"]],[R[844]]]],[11,"rand",R[1067],E,15,[[["r"]],[R[834]]]],[11,"reseed",E,E,14,[[["self"]]]],[11,R[839],E,R[842],14,[[],[R[841]]]],[11,"reseed",R[831],E,0,[[["self"]]]],[11,R[839],E,"Create a new `ReseedingRng` from the given reseeder and…",0,[[],[R[840]]]],[11,"reseed",R[1068],E,16,[[["self"]]]],[11,R[839],E,"Create a ChaCha generator from a seed, obtained from a…",16,[[],[R[833]]]],[11,"reseed",R[1067],E,15,[[["self"]]]],[11,R[839],E,R[842],15,[[],[R[834]]]],[11,"reseed","rand",E,22,[[["self"]]]],[11,R[839],E,E,22,[[],["stdrng"]]],[11,"reseed",E,"Reseed an XorShiftRng. This will panic if `seed` is…",21,[[["self"]]]],[11,R[839],E,"Create a new XorShiftRng. This will panic if `seed` is…",21,[[],[R[822]]]],[11,"sample",R[813],E,33,[[["r"],["self"]],[T]]],[11,"sample",R[828],E,31,[[["r"],["self"]],["f64"]]],[11,"sample",R[827],E,29,[[["r"],["self"]],["f64"]]],[11,"sample",R[826],E,25,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,27,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,28,[[["r"],["self"]],["f64"]]],[11,"sample",R[827],E,30,[[["r"],["self"]],["f64"]]],[11,"sample",R[825],E,24,[[["r"],["self"]],["sup"]]],[11,"sample",R[813],E,32,[[["r"],["self"]],["sup"]]],[11,"sample",R[826],E,26,[[["r"],["self"]],["f64"]]],[11,R[222],R[831],E,17,[[],[R[847]]]],[11,"new",R[837],"Create a new `OsRng`.",13,[[],[["osrng"],[R[2],["osrng","error"]],["error"]]]],[11,R[821],R[1067],"Create an ISAAC random number generator using the default…",14,[[],[R[841]]]],[11,R[821],E,"Create a 64-bit ISAAC random number generator using the…",15,[[],[R[834]]]],[11,R[821],R[1068],"Create an ChaCha random number generator using the default…",16,[[],[R[833]]]],[11,"set_counter",E,"Sets the internal 128-bit ChaCha counter to a…",16,[[["self"],["u64"]]]],[11,"new",R[831],"Create a new `ReseedingRng` with the given parameters.",0,[[["rsdr"],["u64"],["r"]],[R[840]]]],[11,"reseed_if_necessary",E,"Reseed the internal RNG if the number of bytes that have…",0,[[["self"]]]],[11,"new",R[830],"Create a new `ReadRng` from a `Read`.",18,[[["r"]],["readrng"]]],[11,R[821],"rand","Creates a new XorShiftRng instance which is not seeded.",21,[[],[R[822]]]],[11,"new",E,"Create a randomly seeded instance of `StdRng`.",22,[[],[[R[2],["stdrng","error"]],["stdrng"],["error"]]]],[11,"new",R[825],"Create a new `Range` instance that samples uniformly from…",24,[[["x"]],["range"]]],[11,"new",R[826],"Construct an object representing the `Gamma(shape, scale)`…",25,[[["f64"]],["gamma"]]],[11,"new",E,"Create a new chi-squared distribution with…",26,[[["f64"]],[R[843]]]],[11,"new",E,"Create a new `FisherF` distribution, with the given…",27,[[["f64"]],["fisherf"]]],[11,"new",E,"Create a new Student t distribution with `n` degrees of…",28,[[["f64"]],["studentt"]]],[11,"new",R[827],"Construct a new `Normal` distribution with the given mean…",29,[[["f64"]],["normal"]]],[11,"new",E,"Construct a new `LogNormal` distribution with the given…",30,[[["f64"]],[R[845]]]],[11,"new",R[828],"Construct a new `Exp` with the given shape parameter…",31,[[["f64"]],["exp"]]],[11,"new",R[813],E,32,[[],["randsample"]]],[11,"new",E,"Create a new `WeightedChoice`.",33,[[],["weightedchoice"]]]],"p":[[3,R[857]],[8,"Reseeder"],[8,"Rng"],[8,"Rand"],[8,R[860]],[3,"Open01"],[3,"Closed01"],[8,R[848]],[3,R[850]],[3,"Exp1"],[8,"Sample"],[8,R[852]],[3,"Weighted"],[3,"OsRng"],[3,R[858]],[3,R[819]],[3,R[816]],[3,R[864]],[3,"ReadRng"],[3,R[861]],[3,R[862]],[3,R[859]],[3,"StdRng"],[3,R[863]],[3,"Range"],[3,"Gamma"],[3,R[849]],[3,"FisherF"],[3,"StudentT"],[3,"Normal"],[3,R[851]],[3,"Exp"],[3,R[853]],[3,R[854]]]};
searchIndex["rayon"]={"doc":"Data-parallelism library that makes it easy to convert…","i":[[3,R[1510],"rayon",R[1475],N,N],[3,R[1378],E,R[1470],N,N],[3,R[1471],E,R[1472],N,N],[3,R[1381],E,R[1473],N,N],[3,R[1379],E,R[1474],N,N],[5,R[1361],E,R[1483],N,[[],["usize"]]],[5,R[1362],E,R[1482],N,[[],[[R[24],["usize"]],["usize"]]]],[5,"join",E,R[1476],N,[[["a"],["b"]]]],[5,R[1477],E,R[1478],N,[[["a"],["b"]]]],[5,"scope",E,R[1479],N,[[["op"]],["r"]]],[3,"Scope",E,R[1357],N,N],[5,R[1480],E,R[1481],N,[[["op"]],["r"]]],[3,R[1509],E,R[1357],N,N],[5,"spawn",E,R[1358],N,[[["f"]]]],[5,R[1365],E,R[1358],N,[[["f"]]]],[0,"collections",E,"Parallel iterator types for [standard…",N,N],[0,"binary_heap",R[1401],"This module contains the parallel iterator types for heaps…",N,N],[3,R[184],R[1425],"Parallel iterator over a binary heap",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a binary…",N,N],[0,"btree_map",R[1401],R[1402],N,N],[3,R[184],R[1426],"Parallel iterator over a B-Tree map",N,N],[3,"Iter",E,R[1403],N,N],[3,R[359],E,"Parallel iterator over a mutable reference to a B-Tree map",N,N],[0,"btree_set",R[1401],R[1402],N,N],[3,R[184],R[1427],"Parallel iterator over a B-Tree set",N,N],[3,"Iter",E,R[1403],N,N],[0,"hash_map",R[1401],R[1404],N,N],[3,R[184],R[1428],"Parallel iterator over a hash map",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a hash map",N,N],[3,R[359],E,"Parallel iterator over a mutable reference to a hash map",N,N],[0,"hash_set",R[1401],R[1404],N,N],[3,R[184],R[1429],"Parallel iterator over a hash set",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a hash set",N,N],[0,"linked_list",R[1401],R[1402],N,N],[3,R[184],R[1430],"Parallel iterator over a linked list",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a linked…",N,N],[3,R[359],E,"Parallel iterator over a mutable reference to a linked list",N,N],[0,"vec_deque",R[1401],R[1402],N,N],[3,R[184],R[1431],"Parallel iterator over a double-ended queue",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a…",N,N],[3,R[359],E,"Parallel iterator over a mutable reference to a…",N,N],[0,"iter","rayon","Traits for writing parallel programs using an…",N,N],[4,"Either",R[1406],R[285],N,N],[13,"Left",E,R[286],0,N],[13,"Right",E,R[287],0,N],[3,"IterBridge",E,"`IterBridge` is a parallel iterator that wraps a…",N,N],[3,"Chain",E,"`Chain` is an iterator that joins `b` after `a` in one…",N,N],[3,"Chunks",E,"`Chunks` is an iterator that groups elements of an…",N,N],[3,"Enumerate",E,"`Enumerate` is an iterator that returns the current count…",N,N],[3,"Filter",E,"`Filter` takes a predicate `filter_op` and filters out…",N,N],[3,"FilterMap",E,"`FilterMap` creates an iterator that uses `filter_op` to…",N,N],[3,"FlatMap",E,"`FlatMap` maps each element to an iterator, then flattens…",N,N],[3,"Flatten",E,"`Flatten` turns each element to an iterator, then flattens…",N,N],[3,"Fold",E,"`Fold` is an iterator that applies a function over an…",N,N],[3,"FoldWith",E,"`FoldWith` is an iterator that applies a function over an…",N,N],[3,"TryFold",E,"`TryFold` is an iterator that applies a function over an…",N,N],[3,R[1464],E,"`TryFoldWith` is an iterator that applies a function over…",N,N],[3,"Skip",E,"`Skip` is an iterator that skips over the first `n`…",N,N],[3,"Split",E,"`Split` is a parallel iterator using arbitrary data and a…",N,N],[3,"Take",E,"`Take` is an iterator that iterates over the first `n`…",N,N],[3,"Map",E,"`Map` is an iterator that transforms the elements of an…",N,N],[3,"MapInit",E,"`MapInit` is an iterator that transforms the elements of…",N,N],[3,"MapWith",E,"`MapWith` is an iterator that transforms the elements of…",N,N],[3,"Zip",E,"`Zip` is an iterator that zips up `a` and `b` into a…",N,N],[3,"ZipEq",E,"An [`IndexedParallelIterator`] that iterates over two…",N,N],[3,R[266],E,"`Interleave` is an iterator that interleaves elements of…",N,N],[3,R[267],E,"`InterleaveShortest` is an iterator that works similarly…",N,N],[3,R[277],E,"`Intersperse` is an iterator that inserts a particular…",N,N],[3,"Update",E,"`Update` is an iterator that mutates the elements of an…",N,N],[3,"Rev",E,"`Rev` is an iterator that produces elements in reverse…",N,N],[3,"MaxLen",E,"`MaxLen` is an iterator that imposes a maximum length on…",N,N],[3,"MinLen",E,"`MinLen` is an iterator that imposes a minimum length on…",N,N],[3,"Cloned",E,"`Cloned` is an iterator that clones the elements of an…",N,N],[3,"Inspect",E,"`Inspect` is an iterator that calls a function with a…",N,N],[3,"PanicFuse",E,"`PanicFuse` is an adaptor that wraps an iterator with a…",N,N],[3,R[270],E,"`WhileSome` is an iterator that yields the `Some` elements…",N,N],[3,"Repeat",E,"Iterator adaptor for the `repeat()` function.",N,N],[3,"RepeatN",E,"Iterator adaptor for the `repeatn()` function.",N,N],[3,"Empty",E,"Iterator adaptor for the `empty()` function.",N,N],[3,"Once",E,"Iterator adaptor for the `once()` function.",N,N],[5,"split",E,"The `split` function takes arbitrary data and a closure…",N,[[["s"],["d"]],["split"]]],[5,"repeat",E,"Creates a parallel iterator that endlessly repeats `elt`…",N,[[["send"],["clone"]],[["repeat"],["send"],["clone"]]]],[5,"repeatn",E,"Creates a parallel iterator that produces `n` repeats of…",N,[[["send"],["clone"],["usize"]],[["repeatn"],["send"],["clone"]]]],[5,"empty",E,"Creates a parallel iterator that produces nothing.",N,[[],[["send"],["empty"]]]],[5,"once",E,"Creates a parallel iterator that produces an element…",N,[[["send"]],[["send"],["once"]]]],[0,"plumbing",E,"Traits and functions used to implement parallel iteration.…",N,N],[5,"bridge","rayon::iter::plumbing","This helper function is used to \"connect\" a parallel…",N,[[["c"],["i"]]]],[5,"bridge_producer_consumer",E,"This helper function is used to \"connect\" a producer and a…",N,[[["c"],["usize"],["p"]]]],[5,"bridge_unindexed",E,"A variant of [`bridge_producer_consumer`] where the…",N,[[["c"],["p"]]]],[8,R[1451],E,"The `ProducerCallback` trait is a kind of generic closure,…",N,N],[16,"Output",E,"The type of value returned by this callback. Analogous to…",1,N],[10,"callback",E,"Invokes the callback with the given producer as argument.…",1,[[["p"]]]],[8,"Producer",E,"A `Producer` is effectively a \"splittable `IntoIterator`\".…",N,N],[16,"Item",E,"The type of item that will be produced by this producer…",2,N],[16,R[184],E,"The type of iterator we will become.",2,N],[10,R[22],E,"Convert `self` into an iterator; at this point, no more…",2,[[]]],[11,"min_len",E,"The minimum number of items that we will process…",2,[[["self"]],["usize"]]],[11,"max_len",E,"The maximum number of items that we will process…",2,[[["self"]],["usize"]]],[10,"split_at",E,"Split into two producers; one produces items `0..index`,…",2,[[["usize"]]]],[11,"fold_with",E,R[1405],2,[[["f"]],["f"]]],[8,"Consumer",E,"A consumer is effectively a [generalized \"fold\"…",N,N],[16,"Folder",E,"The type of folder that this consumer can be converted into.",3,N],[16,"Reducer",E,"The type of reducer that is produced if this consumer is…",3,N],[16,"Result",E,"The type of result that this consumer will ultimately…",3,N],[10,"split_at",E,"Divide the consumer into two consumers, one processing…",3,[[["usize"]]]],[10,"into_folder",E,"Convert the consumer into a folder that can consume items…",3,[[]]],[10,"full",E,"Hint whether this `Consumer` would like to stop processing…",3,[[["self"]],["bool"]]],[8,"Folder",E,"The `Folder` trait encapsulates [the standard fold…",N,N],[16,"Result",E,"The type of result that will ultimately be produced by the…",4,N],[10,"consume",E,"Consume next item and return new sequential state.",4,[[["item"]],["self"]]],[11,"consume_iter",E,"Consume items from the iterator until full, and return new…",4,[[["i"]],["self"]]],[10,"complete",E,"Finish consuming items, produce final result.",4,[[]]],[10,"full",E,"Hint whether this `Folder` would like to stop processing…",4,[[["self"]],["bool"]]],[8,"Reducer",E,"The reducer is the final step of a `Consumer` -- after a…",N,N],[10,"reduce",E,"Reduce two final results into one; this is executed after…",5,[[[R[2]]],[R[2]]]],[8,R[1452],E,"A stateless consumer can be freely copied. These consumers…",N,N],[10,"split_off_left",E,"Splits off a \"left\" consumer and returns it. The `self`…",6,[[["self"]],["self"]]],[10,"to_reducer",E,"Creates a reducer that can be used to combine the results…",6,[[["self"]]]],[8,R[1453],E,"A variant on `Producer` which does not know its exact…",N,N],[16,"Item",E,"The type of item returned by this producer.",7,N],[10,"split",E,"Split midway into a new producer if possible, otherwise…",7,[[]]],[10,"fold_with",E,R[1405],7,[[["f"]],["f"]]],[11,"take",R[1406],"Take only `n` repeats of the element, similar to the…",8,[[["usize"]],["repeatn"]]],[11,"zip",E,"Iterate tuples repeating the element with items from…",8,[[["z"]],[["repeatn"],["zip",["repeatn"]]]]],[8,R[1418],E,R[1419],N,N],[10,R[1574],E,R[1420],9,[[],[R[1443]]]],[8,R[1454],E,"`IntoParallelIterator` implements the conversion to a…",N,N],[16,"Iter",E,"The parallel iterator type that will be created.",10,N],[16,"Item",E,"The type of item that the parallel iterator will produce.",10,N],[10,R[1424],E,R[1407],10,[[]]],[8,R[1455],E,"`IntoParallelRefIterator` implements the conversion to a…",N,N],[16,"Iter",E,"The type of the parallel iterator that will be returned.",11,N],[16,"Item",E,"The type of item that the parallel iterator will produce.…",11,N],[10,"par_iter",E,R[1407],11,[[["self"]]]],[8,R[1456],E,"`IntoParallelRefMutIterator` implements the conversion to…",N,N],[16,"Iter",E,"The type of iterator that will be created.",12,N],[16,"Item",E,"The type of item that will be produced; this is typically…",12,N],[10,"par_iter_mut",E,"Creates the parallel iterator from `self`.",12,[[["self"]]]],[8,R[1457],E,"Parallel version of the standard iterator trait.",N,N],[16,"Item",E,"The type of item that this parallel iterator produces. For…",13,N],[11,"for_each",E,"Executes `OP` on each item produced by the iterator, in…",13,[[["op"]]]],[11,"for_each_with",E,"Executes `OP` on the given `init` value with each item…",13,[[["op"],[T]]]],[11,"for_each_init",E,"Executes `OP` on a value returned by `init` with each item…",13,[[["init"],["op"]]]],[11,"try_for_each",E,"Executes a fallible `OP` on each item produced by the…",13,[[["op"]],["r"]]],[11,"try_for_each_with",E,"Executes a fallible `OP` on the given `init` value with…",13,[[["op"],[T]],["r"]]],[11,"try_for_each_init",E,"Executes a fallible `OP` on a value returned by `init`…",13,[[["init"],["op"]],["r"]]],[11,"count",E,"Counts the number of items in this parallel iterator.",13,[[],["usize"]]],[11,"map",E,"Applies `map_op` to each item of this iterator, producing…",13,[[["f"]],["map"]]],[11,"map_with",E,"Applies `map_op` to the given `init` value with each item…",13,[[["f"],[T]],["mapwith"]]],[11,"map_init",E,"Applies `map_op` to a value returned by `init` with each…",13,[[["init"],["f"]],["mapinit"]]],[11,"cloned",E,"Creates an iterator which clones all of its elements. This…",13,[[],["cloned"]]],[11,"inspect",E,"Applies `inspect_op` to a reference to each item of this…",13,[[["op"]],["inspect"]]],[11,"update",E,"Mutates each item of this iterator before yielding it.",13,[[["f"]],["update"]]],[11,"filter",E,"Applies `filter_op` to each item of this iterator,…",13,[[["p"]],["filter"]]],[11,"filter_map",E,"Applies `filter_op` to each item of this iterator to get…",13,[[["p"]],["filtermap"]]],[11,"flat_map",E,"Applies `map_op` to each item of this iterator to get…",13,[[["f"]],["flatmap"]]],[11,"flatten",E,"An adaptor that flattens iterable `Item`s into one large…",13,[[],["flatten"]]],[11,"reduce",E,R[1408],13,[[["op"],["id"]]]],[11,"reduce_with",E,R[1408],13,[[["op"]],[R[24]]]],[11,"try_reduce",E,R[1409],13,[[["op"],["id"]]]],[11,"try_reduce_with",E,R[1409],13,[[["op"]],[R[24]]]],[11,"fold",E,"Parallel fold is similar to sequential fold except that…",13,[[["id"],["f"]],["fold"]]],[11,"fold_with",E,"Applies `fold_op` to the given `init` value with each item…",13,[[["f"],[T]],["foldwith"]]],[11,"try_fold",E,"Perform a fallible parallel fold.",13,[[["id"],["f"]],["tryfold"]]],[11,"try_fold_with",E,"Perform a fallible parallel fold with a cloneable `init`…",13,[[["f"],[T]],[R[1444]]]],[11,"sum",E,"Sums up the items in the iterator.",13,[[],["s"]]],[11,"product",E,"Multiplies all the items in the iterator.",13,[[],["p"]]],[11,"min",E,"Computes the minimum of all the items in the iterator. If…",13,[[],[R[24]]]],[11,"min_by",E,"Computes the minimum of all the items in the iterator with…",13,[[["f"]],[R[24]]]],[11,"min_by_key",E,"Computes the item that yields the minimum value for the…",13,[[["f"]],[R[24]]]],[11,"max",E,"Computes the maximum of all the items in the iterator. If…",13,[[],[R[24]]]],[11,"max_by",E,"Computes the maximum of all the items in the iterator with…",13,[[["f"]],[R[24]]]],[11,"max_by_key",E,"Computes the item that yields the maximum value for the…",13,[[["f"]],[R[24]]]],[11,"chain",E,"Takes two iterators and creates a new iterator over both.",13,[[["c"]],["chain"]]],[11,"find_any",E,R[1411],13,[[["p"]],[R[24]]]],[11,"find_first",E,R[1416],13,[[["p"]],[R[24]]]],[11,"find_last",E,R[1417],13,[[["p"]],[R[24]]]],[11,"find_map_any",E,R[1410],13,[[["p"]],[R[24]]]],[11,"find_map_first",E,R[1410],13,[[["p"]],[R[24]]]],[11,"find_map_last",E,R[1410],13,[[["p"]],[R[24]]]],[11,"any",E,R[1411],13,[[["p"]],["bool"]]],[11,"all",E,"Tests that every item in the parallel iterator matches the…",13,[[["p"]],["bool"]]],[11,"while_some",E,"Creates an iterator over the `Some` items of this…",13,[[],[R[256]]]],[11,"panic_fuse",E,"Wraps an iterator with a fuse in case of panics, to halt…",13,[[],["panicfuse"]]],[11,"collect",E,"Create a fresh collection containing all the element…",13,[[],["c"]]],[11,"unzip",E,"Unzips the items of a parallel iterator into a pair of…",13,[[]]],[11,"partition",E,"Partitions the items of a parallel iterator into a pair of…",13,[[["p"]]]],[11,R[1512],E,"Partitions and maps the items of a parallel iterator into…",13,[[["p"]]]],[11,R[237],E,"Intersperses clones of an element between items of this…",13,[[],[R[237]]]],[10,R[1438],E,R[1412],13,[[["c"]]]],[11,"opt_len",E,R[1412],13,[[["self"]],[[R[24],["usize"]],["usize"]]]],[8,R[1458],E,"An iterator that supports \"random access\" to its data,…",N,N],[11,"collect_into_vec",E,"Collects the results of the iterator into the specified…",14,[[["vec"]]]],[11,"unzip_into_vecs",E,"Unzips the results of the iterator into the specified…",14,[[["vec"],["vec"]]]],[11,"zip",E,"Iterate over tuples `(A, B)`, where the items `A` are from…",14,[[["z"]],["zip"]]],[11,"zip_eq",E,"The same as `Zip`, but requires that both iterators have…",14,[[["z"]],["zipeq"]]],[11,R[224],E,R[1413],14,[[["i"]],[R[224]]]],[11,R[1511],E,R[1413],14,[[["i"]],[R[254]]]],[11,"chunks",E,"Split an iterator up into fixed-size chunks.",14,[[["usize"]],["chunks"]]],[11,"cmp",E,R[1414],14,[[["i"]],[R[23]]]],[11,R[62],E,R[1414],14,[[["i"]],[[R[24],[R[23]]],[R[23]]]]],[11,"eq",E,R[1415],14,[[["i"]],["bool"]]],[11,"ne",E,R[1415],14,[[["i"]],["bool"]]],[11,"lt",E,R[1415],14,[[["i"]],["bool"]]],[11,"le",E,R[1415],14,[[["i"]],["bool"]]],[11,"gt",E,R[1415],14,[[["i"]],["bool"]]],[11,"ge",E,R[1415],14,[[["i"]],["bool"]]],[11,R[227],E,"Yields an index along with each item.",14,[[],[R[227]]]],[11,"skip",E,"Creates an iterator that skips the first `n` elements.",14,[[["usize"]],["skip"]]],[11,"take",E,"Creates an iterator that yields the first `n` elements.",14,[[["usize"]],["take"]]],[11,"position_any",E,R[1411],14,[[["p"]],[[R[24],["usize"]],["usize"]]]],[11,"position_first",E,R[1416],14,[[["p"]],[[R[24],["usize"]],["usize"]]]],[11,"position_last",E,R[1417],14,[[["p"]],[[R[24],["usize"]],["usize"]]]],[11,"rev",E,"Produces a new iterator with the elements of this iterator…",14,[[],["rev"]]],[11,"with_min_len",E,"Sets the minimum length of iterators desired to process in…",14,[[["usize"]],["minlen"]]],[11,"with_max_len",E,"Sets the maximum length of iterators desired to process in…",14,[[["usize"]],["maxlen"]]],[10,"len",E,"Produces an exact count of how many items this iterator…",14,[[["self"]],["usize"]]],[10,"drive",E,R[1412],14,[[[R[1442]]]]],[10,R[1441],E,R[1412],14,[[["producercallback"]]]],[8,R[1459],E,"`FromParallelIterator` implements the creation of a…",N,N],[10,"from_par_iter",E,"Creates an instance of the collection from the parallel…",15,[[["i"]],["self"]]],[8,R[1460],E,"`ParallelExtend` extends an existing collection with items…",N,N],[10,"par_extend",E,"Extends an instance of the collection with the elements…",16,[[["self"],["i"]]]],[0,R[24],"rayon","Parallel iterator types for [options][std::option]",N,N],[3,R[184],R[1432],"A parallel iterator over the value in [`Some`] variant of…",N,N],[3,"Iter",E,"A parallel iterator over a reference to the [`Some`]…",N,N],[3,R[359],E,"A parallel iterator over a mutable reference to the…",N,N],[0,"prelude","rayon","The rayon prelude imports the various `ParallelIterator`…",N,N],[8,R[1418],"rayon::prelude",R[1419],N,N],[10,R[1574],E,R[1420],9,[[],[R[1443]]]],[0,"range","rayon","Parallel iterator types for [ranges][std::range], the type…",N,N],[3,"Iter",R[1433],"Parallel iterator over a range, implemented for all…",N,N],[0,R[1421],"rayon","Parallel iterator types for [inclusive…",N,N],[3,"Iter",R[1434],"Parallel iterator over an inclusive range, implemented for…",N,N],[0,R[2],"rayon","Parallel iterator types for [results][std::result]",N,N],[3,R[184],R[1435],"Parallel iterator over a result",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a result",N,N],[3,R[359],E,"Parallel iterator over a mutable reference to a result",N,N],[0,"slice","rayon","Parallel iterator types for [slices][std::slice]",N,N],[3,"Iter",R[1436],"Parallel iterator over immutable items in a slice",N,N],[3,"Chunks",E,"Parallel iterator over immutable non-overlapping chunks of…",N,N],[3,"Windows",E,"Parallel iterator over immutable overlapping windows of a…",N,N],[3,R[359],E,"Parallel iterator over mutable items in a slice",N,N],[3,"ChunksMut",E,"Parallel iterator over mutable non-overlapping chunks of a…",N,N],[3,"Split",E,"Parallel iterator over slices separated by a predicate",N,N],[3,"SplitMut",E,"Parallel iterator over mutable slices separated by a…",N,N],[8,R[1461],E,"Parallel extensions for slices.",N,N],[10,"as_parallel_slice",E,"Returns a plain slice, which is used to implement the rest…",17,[[["self"]]]],[11,"par_split",E,"Returns a parallel iterator over subslices separated by…",17,[[["self"],["p"]],["split"]]],[11,"par_windows",E,"Returns a parallel iterator over all contiguous windows of…",17,[[["self"],["usize"]],["windows"]]],[11,"par_chunks",E,R[1422],17,[[["self"],["usize"]],["chunks"]]],[8,R[1462],E,"Parallel extensions for mutable slices.",N,N],[10,"as_parallel_slice_mut",E,"Returns a plain mutable slice, which is used to implement…",18,[[["self"]]]],[11,"par_split_mut",E,"Returns a parallel iterator over mutable subslices…",18,[[["self"],["p"]],["splitmut"]]],[11,"par_chunks_mut",E,R[1422],18,[[["self"],["usize"]],["chunksmut"]]],[11,"par_sort",E,"Sorts the slice in parallel.",18,[[["self"]]]],[11,"par_sort_by",E,"Sorts the slice in parallel with a comparator function.",18,[[["self"],["f"]]]],[11,"par_sort_by_key",E,"Sorts the slice in parallel with a key extraction function.",18,[[["self"],["f"]]]],[11,"par_sort_unstable",E,"Sorts the slice in parallel, but may not preserve the…",18,[[["self"]]]],[11,"par_sort_unstable_by",E,"Sorts the slice in parallel with a comparator function,…",18,[[["self"],["f"]]]],[11,"par_sort_unstable_by_key",E,"Sorts the slice in parallel with a key extraction…",18,[[["self"],["f"]]]],[0,"str","rayon","Parallel iterator types for [strings][std::str]",N,N],[3,"Chars",R[1439],"Parallel iterator over the characters of a string",N,N],[3,R[1465],E,"Parallel iterator over the characters of a string, with…",N,N],[3,"Bytes",E,"Parallel iterator over the bytes of a string",N,N],[3,R[1466],E,"Parallel iterator over a string encoded as UTF-16",N,N],[3,"Split",E,"Parallel iterator over substrings separated by a pattern",N,N],[3,R[1467],E,"Parallel iterator over substrings separated by a…",N,N],[3,"Lines",E,"Parallel iterator over lines in a string",N,N],[3,R[1468],E,"Parallel iterator over substrings separated by whitespace",N,N],[3,"Matches",E,"Parallel iterator over substrings that match a pattern",N,N],[3,R[1469],E,"Parallel iterator over substrings that match a pattern,…",N,N],[8,R[1463],E,"Parallel extensions for strings.",N,N],[10,"as_parallel_string",E,"Returns a plain string slice, which is used to implement…",19,[[["self"]],["str"]]],[11,"par_chars",E,"Returns a parallel iterator over the characters of a string.",19,[[["self"]],["chars"]]],[11,"par_char_indices",E,"Returns a parallel iterator over the characters of a…",19,[[["self"]],[R[1445]]]],[11,"par_bytes",E,"Returns a parallel iterator over the bytes of a string.",19,[[["self"]],["bytes"]]],[11,"par_encode_utf16",E,"Returns a parallel iterator over a string encoded as UTF-16.",19,[[["self"]],[R[1446]]]],[11,"par_split",E,"Returns a parallel iterator over substrings separated by a…",19,[[["pattern"],["self"]],[["pattern"],["split"]]]],[11,"par_split_terminator",E,"Returns a parallel iterator over substrings terminated by…",19,[[["pattern"],["self"]],[[R[1447]],["pattern"]]]],[11,"par_lines",E,"Returns a parallel iterator over the lines of a string,…",19,[[["self"]],["lines"]]],[11,"par_split_whitespace",E,"Returns a parallel iterator over the sub-slices of a…",19,[[["self"]],[R[1448]]]],[11,"par_matches",E,R[1423],19,[[["pattern"],["self"]],[["pattern"],["matches"]]]],[11,"par_match_indices",E,R[1423],19,[[["pattern"],["self"]],[[R[1449]],["pattern"]]]],[0,"vec","rayon","Parallel iterator types for [vectors][std::vec] (`Vec<T>`)",N,N],[3,R[184],R[1440],"Parallel iterator that moves out of a vector.",N,N],[11,"from","rayon",E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[8],E,E,20,[[[U]],[R[2]]]],[11,R[29],E,E,20,[[["self"]],[T]]],[11,R[15],E,E,20,[[["self"]],[R[30]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[],[R[2]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[8],E,E,21,[[[U]],[R[2]]]],[11,R[29],E,E,21,[[["self"]],[T]]],[11,R[15],E,E,21,[[["self"]],[R[30]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[],[R[2]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[8],E,E,22,[[[U]],[R[2]]]],[11,R[29],E,E,22,[[["self"]],[T]]],[11,R[15],E,E,22,[[["self"]],[R[30]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[],[R[2]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[161],E,E,23,[[["self"]],[R[34]]]],[11,R[8],E,E,23,[[[U]],[R[2]]]],[11,R[29],E,E,23,[[["self"]],[T]]],[11,R[15],E,E,23,[[["self"]],[R[30]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[],[R[2]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[8],E,E,24,[[[U]],[R[2]]]],[11,R[29],E,E,24,[[["self"]],[T]]],[11,R[15],E,E,24,[[["self"]],[R[30]]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[],[R[2]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[8],E,E,25,[[[U]],[R[2]]]],[11,R[29],E,E,25,[[["self"]],[T]]],[11,R[15],E,E,25,[[["self"]],[R[30]]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[9],E,E,25,[[],[R[2]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[8],E,E,26,[[[U]],[R[2]]]],[11,R[29],E,E,26,[[["self"]],[T]]],[11,R[15],E,E,26,[[["self"]],[R[30]]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[9],E,E,26,[[],[R[2]]]],[11,R[1424],R[1425],E,27,[[],[T]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[66],E,E,27,[[["self"]],[T]]],[11,R[67],E,E,27,[[[T],["self"]]]],[11,R[8],E,E,27,[[[U]],[R[2]]]],[11,R[29],E,E,27,[[["self"]],[T]]],[11,R[15],E,E,27,[[["self"]],[R[30]]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[],[R[2]]]],[11,R[1424],E,E,28,[[],[T]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[66],E,E,28,[[["self"]],[T]]],[11,R[67],E,E,28,[[[T],["self"]]]],[11,R[8],E,E,28,[[[U]],[R[2]]]],[11,R[29],E,E,28,[[["self"]],[T]]],[11,R[15],E,E,28,[[["self"]],[R[30]]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[],[R[2]]]],[11,R[1424],R[1426],E,29,[[],[T]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[8],E,E,29,[[[U]],[R[2]]]],[11,R[29],E,E,29,[[["self"]],[T]]],[11,R[15],E,E,29,[[["self"]],[R[30]]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[],[R[2]]]],[11,R[1424],E,E,30,[[],[T]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[66],E,E,30,[[["self"]],[T]]],[11,R[67],E,E,30,[[[T],["self"]]]],[11,R[8],E,E,30,[[[U]],[R[2]]]],[11,R[29],E,E,30,[[["self"]],[T]]],[11,R[15],E,E,30,[[["self"]],[R[30]]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[],[R[2]]]],[11,R[1424],E,E,31,[[],[T]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[8],E,E,31,[[[U]],[R[2]]]],[11,R[29],E,E,31,[[["self"]],[T]]],[11,R[15],E,E,31,[[["self"]],[R[30]]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[],[R[2]]]],[11,R[1424],R[1427],E,32,[[],[T]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[8],E,E,32,[[[U]],[R[2]]]],[11,R[29],E,E,32,[[["self"]],[T]]],[11,R[15],E,E,32,[[["self"]],[R[30]]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[],[R[2]]]],[11,R[1424],E,E,33,[[],[T]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[66],E,E,33,[[["self"]],[T]]],[11,R[67],E,E,33,[[[T],["self"]]]],[11,R[8],E,E,33,[[[U]],[R[2]]]],[11,R[29],E,E,33,[[["self"]],[T]]],[11,R[15],E,E,33,[[["self"]],[R[30]]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[9],E,E,33,[[],[R[2]]]],[11,R[1424],R[1428],E,34,[[],[T]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[8],E,E,34,[[[U]],[R[2]]]],[11,R[29],E,E,34,[[["self"]],[T]]],[11,R[15],E,E,34,[[["self"]],[R[30]]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[9],E,E,34,[[],[R[2]]]],[11,R[1424],E,E,35,[[],[T]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[66],E,E,35,[[["self"]],[T]]],[11,R[67],E,E,35,[[[T],["self"]]]],[11,R[8],E,E,35,[[[U]],[R[2]]]],[11,R[29],E,E,35,[[["self"]],[T]]],[11,R[15],E,E,35,[[["self"]],[R[30]]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[9],E,E,35,[[],[R[2]]]],[11,R[1424],E,E,36,[[],[T]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[8],E,E,36,[[[U]],[R[2]]]],[11,R[29],E,E,36,[[["self"]],[T]]],[11,R[15],E,E,36,[[["self"]],[R[30]]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[9],E,E,36,[[],[R[2]]]],[11,R[1424],R[1429],E,37,[[],[T]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[8],E,E,37,[[[U]],[R[2]]]],[11,R[29],E,E,37,[[["self"]],[T]]],[11,R[15],E,E,37,[[["self"]],[R[30]]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[9],E,E,37,[[],[R[2]]]],[11,R[1424],E,E,38,[[],[T]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[66],E,E,38,[[["self"]],[T]]],[11,R[67],E,E,38,[[[T],["self"]]]],[11,R[8],E,E,38,[[[U]],[R[2]]]],[11,R[29],E,E,38,[[["self"]],[T]]],[11,R[15],E,E,38,[[["self"]],[R[30]]]],[11,R[10],E,E,38,[[["self"]],[T]]],[11,R[9],E,E,38,[[],[R[2]]]],[11,R[1424],R[1430],E,39,[[],[T]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[66],E,E,39,[[["self"]],[T]]],[11,R[67],E,E,39,[[[T],["self"]]]],[11,R[8],E,E,39,[[[U]],[R[2]]]],[11,R[29],E,E,39,[[["self"]],[T]]],[11,R[15],E,E,39,[[["self"]],[R[30]]]],[11,R[10],E,E,39,[[["self"]],[T]]],[11,R[9],E,E,39,[[],[R[2]]]],[11,R[1424],E,E,40,[[],[T]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[66],E,E,40,[[["self"]],[T]]],[11,R[67],E,E,40,[[[T],["self"]]]],[11,R[8],E,E,40,[[[U]],[R[2]]]],[11,R[29],E,E,40,[[["self"]],[T]]],[11,R[15],E,E,40,[[["self"]],[R[30]]]],[11,R[10],E,E,40,[[["self"]],[T]]],[11,R[9],E,E,40,[[],[R[2]]]],[11,R[1424],E,E,41,[[],[T]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[8],E,E,41,[[[U]],[R[2]]]],[11,R[29],E,E,41,[[["self"]],[T]]],[11,R[15],E,E,41,[[["self"]],[R[30]]]],[11,R[10],E,E,41,[[["self"]],[T]]],[11,R[9],E,E,41,[[],[R[2]]]],[11,R[1424],R[1431],E,42,[[],[T]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[66],E,E,42,[[["self"]],[T]]],[11,R[67],E,E,42,[[[T],["self"]]]],[11,R[8],E,E,42,[[[U]],[R[2]]]],[11,R[29],E,E,42,[[["self"]],[T]]],[11,R[15],E,E,42,[[["self"]],[R[30]]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[9],E,E,42,[[],[R[2]]]],[11,R[1424],E,E,43,[[],[T]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[66],E,E,43,[[["self"]],[T]]],[11,R[67],E,E,43,[[[T],["self"]]]],[11,R[8],E,E,43,[[[U]],[R[2]]]],[11,R[29],E,E,43,[[["self"]],[T]]],[11,R[15],E,E,43,[[["self"]],[R[30]]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[9],E,E,43,[[],[R[2]]]],[11,R[1424],E,E,44,[[],[T]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[8],E,E,44,[[[U]],[R[2]]]],[11,R[29],E,E,44,[[["self"]],[T]]],[11,R[15],E,E,44,[[["self"]],[R[30]]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[9],E,E,44,[[],[R[2]]]],[11,R[1424],R[1406],E,0,[[],[T]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[22],E,E,0,[[],["i"]]],[11,"into",E,E,0,[[],[U]]],[11,R[66],E,E,0,[[["self"]],[T]]],[11,R[67],E,E,0,[[[T],["self"]]]],[11,R[161],E,E,0,[[["self"]],[R[34]]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[1424],E,E,45,[[],[T]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[66],E,E,45,[[["self"]],[T]]],[11,R[67],E,E,45,[[[T],["self"]]]],[11,R[8],E,E,45,[[[U]],[R[2]]]],[11,R[29],E,E,45,[[["self"]],[T]]],[11,R[15],E,E,45,[[["self"]],[R[30]]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[9],E,E,45,[[],[R[2]]]],[11,R[1424],E,E,46,[[],[T]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[66],E,E,46,[[["self"]],[T]]],[11,R[67],E,E,46,[[[T],["self"]]]],[11,R[8],E,E,46,[[[U]],[R[2]]]],[11,R[29],E,E,46,[[["self"]],[T]]],[11,R[15],E,E,46,[[["self"]],[R[30]]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[9],E,E,46,[[],[R[2]]]],[11,R[1424],E,E,47,[[],[T]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[66],E,E,47,[[["self"]],[T]]],[11,R[67],E,E,47,[[[T],["self"]]]],[11,R[8],E,E,47,[[[U]],[R[2]]]],[11,R[29],E,E,47,[[["self"]],[T]]],[11,R[15],E,E,47,[[["self"]],[R[30]]]],[11,R[10],E,E,47,[[["self"]],[T]]],[11,R[9],E,E,47,[[],[R[2]]]],[11,R[1424],E,E,48,[[],[T]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[66],E,E,48,[[["self"]],[T]]],[11,R[67],E,E,48,[[[T],["self"]]]],[11,R[8],E,E,48,[[[U]],[R[2]]]],[11,R[29],E,E,48,[[["self"]],[T]]],[11,R[15],E,E,48,[[["self"]],[R[30]]]],[11,R[10],E,E,48,[[["self"]],[T]]],[11,R[9],E,E,48,[[],[R[2]]]],[11,R[1424],E,E,49,[[],[T]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[66],E,E,49,[[["self"]],[T]]],[11,R[67],E,E,49,[[[T],["self"]]]],[11,R[8],E,E,49,[[[U]],[R[2]]]],[11,R[29],E,E,49,[[["self"]],[T]]],[11,R[15],E,E,49,[[["self"]],[R[30]]]],[11,R[10],E,E,49,[[["self"]],[T]]],[11,R[9],E,E,49,[[],[R[2]]]],[11,R[1424],E,E,50,[[],[T]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[66],E,E,50,[[["self"]],[T]]],[11,R[67],E,E,50,[[[T],["self"]]]],[11,R[8],E,E,50,[[[U]],[R[2]]]],[11,R[29],E,E,50,[[["self"]],[T]]],[11,R[15],E,E,50,[[["self"]],[R[30]]]],[11,R[10],E,E,50,[[["self"]],[T]]],[11,R[9],E,E,50,[[],[R[2]]]],[11,R[1424],E,E,51,[[],[T]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[66],E,E,51,[[["self"]],[T]]],[11,R[67],E,E,51,[[[T],["self"]]]],[11,R[8],E,E,51,[[[U]],[R[2]]]],[11,R[29],E,E,51,[[["self"]],[T]]],[11,R[15],E,E,51,[[["self"]],[R[30]]]],[11,R[10],E,E,51,[[["self"]],[T]]],[11,R[9],E,E,51,[[],[R[2]]]],[11,R[1424],E,E,52,[[],[T]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[66],E,E,52,[[["self"]],[T]]],[11,R[67],E,E,52,[[[T],["self"]]]],[11,R[8],E,E,52,[[[U]],[R[2]]]],[11,R[29],E,E,52,[[["self"]],[T]]],[11,R[15],E,E,52,[[["self"]],[R[30]]]],[11,R[10],E,E,52,[[["self"]],[T]]],[11,R[9],E,E,52,[[],[R[2]]]],[11,R[1424],E,E,53,[[],[T]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[66],E,E,53,[[["self"]],[T]]],[11,R[67],E,E,53,[[[T],["self"]]]],[11,R[8],E,E,53,[[[U]],[R[2]]]],[11,R[29],E,E,53,[[["self"]],[T]]],[11,R[15],E,E,53,[[["self"]],[R[30]]]],[11,R[10],E,E,53,[[["self"]],[T]]],[11,R[9],E,E,53,[[],[R[2]]]],[11,R[1424],E,E,54,[[],[T]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[66],E,E,54,[[["self"]],[T]]],[11,R[67],E,E,54,[[[T],["self"]]]],[11,R[8],E,E,54,[[[U]],[R[2]]]],[11,R[29],E,E,54,[[["self"]],[T]]],[11,R[15],E,E,54,[[["self"]],[R[30]]]],[11,R[10],E,E,54,[[["self"]],[T]]],[11,R[9],E,E,54,[[],[R[2]]]],[11,R[1424],E,E,55,[[],[T]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[66],E,E,55,[[["self"]],[T]]],[11,R[67],E,E,55,[[[T],["self"]]]],[11,R[8],E,E,55,[[[U]],[R[2]]]],[11,R[29],E,E,55,[[["self"]],[T]]],[11,R[15],E,E,55,[[["self"]],[R[30]]]],[11,R[10],E,E,55,[[["self"]],[T]]],[11,R[9],E,E,55,[[],[R[2]]]],[11,R[1424],E,E,56,[[],[T]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[66],E,E,56,[[["self"]],[T]]],[11,R[67],E,E,56,[[[T],["self"]]]],[11,R[8],E,E,56,[[[U]],[R[2]]]],[11,R[29],E,E,56,[[["self"]],[T]]],[11,R[15],E,E,56,[[["self"]],[R[30]]]],[11,R[10],E,E,56,[[["self"]],[T]]],[11,R[9],E,E,56,[[],[R[2]]]],[11,R[1424],E,E,57,[[],[T]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[66],E,E,57,[[["self"]],[T]]],[11,R[67],E,E,57,[[[T],["self"]]]],[11,R[8],E,E,57,[[[U]],[R[2]]]],[11,R[29],E,E,57,[[["self"]],[T]]],[11,R[15],E,E,57,[[["self"]],[R[30]]]],[11,R[10],E,E,57,[[["self"]],[T]]],[11,R[9],E,E,57,[[],[R[2]]]],[11,R[1424],E,E,58,[[],[T]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[66],E,E,58,[[["self"]],[T]]],[11,R[67],E,E,58,[[[T],["self"]]]],[11,R[8],E,E,58,[[[U]],[R[2]]]],[11,R[29],E,E,58,[[["self"]],[T]]],[11,R[15],E,E,58,[[["self"]],[R[30]]]],[11,R[10],E,E,58,[[["self"]],[T]]],[11,R[9],E,E,58,[[],[R[2]]]],[11,R[1424],E,E,59,[[],[T]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[66],E,E,59,[[["self"]],[T]]],[11,R[67],E,E,59,[[[T],["self"]]]],[11,R[8],E,E,59,[[[U]],[R[2]]]],[11,R[29],E,E,59,[[["self"]],[T]]],[11,R[15],E,E,59,[[["self"]],[R[30]]]],[11,R[10],E,E,59,[[["self"]],[T]]],[11,R[9],E,E,59,[[],[R[2]]]],[11,R[1424],E,E,60,[[],[T]]],[11,"from",E,E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[66],E,E,60,[[["self"]],[T]]],[11,R[67],E,E,60,[[[T],["self"]]]],[11,R[8],E,E,60,[[[U]],[R[2]]]],[11,R[29],E,E,60,[[["self"]],[T]]],[11,R[15],E,E,60,[[["self"]],[R[30]]]],[11,R[10],E,E,60,[[["self"]],[T]]],[11,R[9],E,E,60,[[],[R[2]]]],[11,R[1424],E,E,61,[[],[T]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[66],E,E,61,[[["self"]],[T]]],[11,R[67],E,E,61,[[[T],["self"]]]],[11,R[8],E,E,61,[[[U]],[R[2]]]],[11,R[29],E,E,61,[[["self"]],[T]]],[11,R[15],E,E,61,[[["self"]],[R[30]]]],[11,R[10],E,E,61,[[["self"]],[T]]],[11,R[9],E,E,61,[[],[R[2]]]],[11,R[1424],E,E,62,[[],[T]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[66],E,E,62,[[["self"]],[T]]],[11,R[67],E,E,62,[[[T],["self"]]]],[11,R[8],E,E,62,[[[U]],[R[2]]]],[11,R[29],E,E,62,[[["self"]],[T]]],[11,R[15],E,E,62,[[["self"]],[R[30]]]],[11,R[10],E,E,62,[[["self"]],[T]]],[11,R[9],E,E,62,[[],[R[2]]]],[11,R[1424],E,E,63,[[],[T]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[66],E,E,63,[[["self"]],[T]]],[11,R[67],E,E,63,[[[T],["self"]]]],[11,R[8],E,E,63,[[[U]],[R[2]]]],[11,R[29],E,E,63,[[["self"]],[T]]],[11,R[15],E,E,63,[[["self"]],[R[30]]]],[11,R[10],E,E,63,[[["self"]],[T]]],[11,R[9],E,E,63,[[],[R[2]]]],[11,R[1424],E,E,64,[[],[T]]],[11,"from",E,E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[66],E,E,64,[[["self"]],[T]]],[11,R[67],E,E,64,[[[T],["self"]]]],[11,R[8],E,E,64,[[[U]],[R[2]]]],[11,R[29],E,E,64,[[["self"]],[T]]],[11,R[15],E,E,64,[[["self"]],[R[30]]]],[11,R[10],E,E,64,[[["self"]],[T]]],[11,R[9],E,E,64,[[],[R[2]]]],[11,R[1424],E,E,65,[[],[T]]],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[66],E,E,65,[[["self"]],[T]]],[11,R[67],E,E,65,[[[T],["self"]]]],[11,R[8],E,E,65,[[[U]],[R[2]]]],[11,R[29],E,E,65,[[["self"]],[T]]],[11,R[15],E,E,65,[[["self"]],[R[30]]]],[11,R[10],E,E,65,[[["self"]],[T]]],[11,R[9],E,E,65,[[],[R[2]]]],[11,R[1424],E,E,66,[[],[T]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[66],E,E,66,[[["self"]],[T]]],[11,R[67],E,E,66,[[[T],["self"]]]],[11,R[8],E,E,66,[[[U]],[R[2]]]],[11,R[29],E,E,66,[[["self"]],[T]]],[11,R[15],E,E,66,[[["self"]],[R[30]]]],[11,R[10],E,E,66,[[["self"]],[T]]],[11,R[9],E,E,66,[[],[R[2]]]],[11,R[1424],E,E,67,[[],[T]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[66],E,E,67,[[["self"]],[T]]],[11,R[67],E,E,67,[[[T],["self"]]]],[11,R[8],E,E,67,[[[U]],[R[2]]]],[11,R[29],E,E,67,[[["self"]],[T]]],[11,R[15],E,E,67,[[["self"]],[R[30]]]],[11,R[10],E,E,67,[[["self"]],[T]]],[11,R[9],E,E,67,[[],[R[2]]]],[11,R[1424],E,E,68,[[],[T]]],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[66],E,E,68,[[["self"]],[T]]],[11,R[67],E,E,68,[[[T],["self"]]]],[11,R[8],E,E,68,[[[U]],[R[2]]]],[11,R[29],E,E,68,[[["self"]],[T]]],[11,R[15],E,E,68,[[["self"]],[R[30]]]],[11,R[10],E,E,68,[[["self"]],[T]]],[11,R[9],E,E,68,[[],[R[2]]]],[11,R[1424],E,E,69,[[],[T]]],[11,"from",E,E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[66],E,E,69,[[["self"]],[T]]],[11,R[67],E,E,69,[[[T],["self"]]]],[11,R[8],E,E,69,[[[U]],[R[2]]]],[11,R[29],E,E,69,[[["self"]],[T]]],[11,R[15],E,E,69,[[["self"]],[R[30]]]],[11,R[10],E,E,69,[[["self"]],[T]]],[11,R[9],E,E,69,[[],[R[2]]]],[11,R[1424],E,E,70,[[],[T]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[66],E,E,70,[[["self"]],[T]]],[11,R[67],E,E,70,[[[T],["self"]]]],[11,R[8],E,E,70,[[[U]],[R[2]]]],[11,R[29],E,E,70,[[["self"]],[T]]],[11,R[15],E,E,70,[[["self"]],[R[30]]]],[11,R[10],E,E,70,[[["self"]],[T]]],[11,R[9],E,E,70,[[],[R[2]]]],[11,R[1424],E,E,71,[[],[T]]],[11,"from",E,E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[66],E,E,71,[[["self"]],[T]]],[11,R[67],E,E,71,[[[T],["self"]]]],[11,R[8],E,E,71,[[[U]],[R[2]]]],[11,R[29],E,E,71,[[["self"]],[T]]],[11,R[15],E,E,71,[[["self"]],[R[30]]]],[11,R[10],E,E,71,[[["self"]],[T]]],[11,R[9],E,E,71,[[],[R[2]]]],[11,R[1424],E,E,72,[[],[T]]],[11,"from",E,E,72,[[[T]],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[66],E,E,72,[[["self"]],[T]]],[11,R[67],E,E,72,[[[T],["self"]]]],[11,R[8],E,E,72,[[[U]],[R[2]]]],[11,R[29],E,E,72,[[["self"]],[T]]],[11,R[15],E,E,72,[[["self"]],[R[30]]]],[11,R[10],E,E,72,[[["self"]],[T]]],[11,R[9],E,E,72,[[],[R[2]]]],[11,R[1424],E,E,73,[[],[T]]],[11,"from",E,E,73,[[[T]],[T]]],[11,"into",E,E,73,[[],[U]]],[11,R[66],E,E,73,[[["self"]],[T]]],[11,R[67],E,E,73,[[[T],["self"]]]],[11,R[8],E,E,73,[[[U]],[R[2]]]],[11,R[29],E,E,73,[[["self"]],[T]]],[11,R[15],E,E,73,[[["self"]],[R[30]]]],[11,R[10],E,E,73,[[["self"]],[T]]],[11,R[9],E,E,73,[[],[R[2]]]],[11,R[1424],E,E,74,[[],[T]]],[11,"from",E,E,74,[[[T]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[66],E,E,74,[[["self"]],[T]]],[11,R[67],E,E,74,[[[T],["self"]]]],[11,R[8],E,E,74,[[[U]],[R[2]]]],[11,R[29],E,E,74,[[["self"]],[T]]],[11,R[15],E,E,74,[[["self"]],[R[30]]]],[11,R[10],E,E,74,[[["self"]],[T]]],[11,R[9],E,E,74,[[],[R[2]]]],[11,R[1424],E,E,75,[[],[T]]],[11,"from",E,E,75,[[[T]],[T]]],[11,"into",E,E,75,[[],[U]]],[11,R[66],E,E,75,[[["self"]],[T]]],[11,R[67],E,E,75,[[[T],["self"]]]],[11,R[8],E,E,75,[[[U]],[R[2]]]],[11,R[29],E,E,75,[[["self"]],[T]]],[11,R[15],E,E,75,[[["self"]],[R[30]]]],[11,R[10],E,E,75,[[["self"]],[T]]],[11,R[9],E,E,75,[[],[R[2]]]],[11,R[1424],E,E,8,[[],[T]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[66],E,E,8,[[["self"]],[T]]],[11,R[67],E,E,8,[[[T],["self"]]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[R[30]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,R[1424],E,E,76,[[],[T]]],[11,"from",E,E,76,[[[T]],[T]]],[11,"into",E,E,76,[[],[U]]],[11,R[66],E,E,76,[[["self"]],[T]]],[11,R[67],E,E,76,[[[T],["self"]]]],[11,R[8],E,E,76,[[[U]],[R[2]]]],[11,R[29],E,E,76,[[["self"]],[T]]],[11,R[15],E,E,76,[[["self"]],[R[30]]]],[11,R[10],E,E,76,[[["self"]],[T]]],[11,R[9],E,E,76,[[],[R[2]]]],[11,R[1424],E,E,77,[[],[T]]],[11,"from",E,E,77,[[[T]],[T]]],[11,"into",E,E,77,[[],[U]]],[11,R[66],E,E,77,[[["self"]],[T]]],[11,R[67],E,E,77,[[[T],["self"]]]],[11,R[8],E,E,77,[[[U]],[R[2]]]],[11,R[29],E,E,77,[[["self"]],[T]]],[11,R[15],E,E,77,[[["self"]],[R[30]]]],[11,R[10],E,E,77,[[["self"]],[T]]],[11,R[9],E,E,77,[[],[R[2]]]],[11,R[1424],E,E,78,[[],[T]]],[11,"from",E,E,78,[[[T]],[T]]],[11,"into",E,E,78,[[],[U]]],[11,R[66],E,E,78,[[["self"]],[T]]],[11,R[67],E,E,78,[[[T],["self"]]]],[11,R[8],E,E,78,[[[U]],[R[2]]]],[11,R[29],E,E,78,[[["self"]],[T]]],[11,R[15],E,E,78,[[["self"]],[R[30]]]],[11,R[10],E,E,78,[[["self"]],[T]]],[11,R[9],E,E,78,[[],[R[2]]]],[11,R[1424],R[1432],E,79,[[],[T]]],[11,"from",E,E,79,[[[T]],[T]]],[11,"into",E,E,79,[[],[U]]],[11,R[66],E,E,79,[[["self"]],[T]]],[11,R[67],E,E,79,[[[T],["self"]]]],[11,R[8],E,E,79,[[[U]],[R[2]]]],[11,R[29],E,E,79,[[["self"]],[T]]],[11,R[15],E,E,79,[[["self"]],[R[30]]]],[11,R[10],E,E,79,[[["self"]],[T]]],[11,R[9],E,E,79,[[],[R[2]]]],[11,R[1424],E,E,80,[[],[T]]],[11,"from",E,E,80,[[[T]],[T]]],[11,"into",E,E,80,[[],[U]]],[11,R[66],E,E,80,[[["self"]],[T]]],[11,R[67],E,E,80,[[[T],["self"]]]],[11,R[8],E,E,80,[[[U]],[R[2]]]],[11,R[29],E,E,80,[[["self"]],[T]]],[11,R[15],E,E,80,[[["self"]],[R[30]]]],[11,R[10],E,E,80,[[["self"]],[T]]],[11,R[9],E,E,80,[[],[R[2]]]],[11,R[1424],E,E,81,[[],[T]]],[11,"from",E,E,81,[[[T]],[T]]],[11,"into",E,E,81,[[],[U]]],[11,R[8],E,E,81,[[[U]],[R[2]]]],[11,R[29],E,E,81,[[["self"]],[T]]],[11,R[15],E,E,81,[[["self"]],[R[30]]]],[11,R[10],E,E,81,[[["self"]],[T]]],[11,R[9],E,E,81,[[],[R[2]]]],[11,R[1424],R[1433],E,82,[[],[T]]],[11,"from",E,E,82,[[[T]],[T]]],[11,"into",E,E,82,[[],[U]]],[11,R[66],E,E,82,[[["self"]],[T]]],[11,R[67],E,E,82,[[[T],["self"]]]],[11,R[8],E,E,82,[[[U]],[R[2]]]],[11,R[29],E,E,82,[[["self"]],[T]]],[11,R[15],E,E,82,[[["self"]],[R[30]]]],[11,R[10],E,E,82,[[["self"]],[T]]],[11,R[9],E,E,82,[[],[R[2]]]],[11,R[1424],R[1434],E,83,[[],[T]]],[11,"from",E,E,83,[[[T]],[T]]],[11,"into",E,E,83,[[],[U]]],[11,R[66],E,E,83,[[["self"]],[T]]],[11,R[67],E,E,83,[[[T],["self"]]]],[11,R[8],E,E,83,[[[U]],[R[2]]]],[11,R[29],E,E,83,[[["self"]],[T]]],[11,R[15],E,E,83,[[["self"]],[R[30]]]],[11,R[10],E,E,83,[[["self"]],[T]]],[11,R[9],E,E,83,[[],[R[2]]]],[11,R[1424],R[1435],E,84,[[],[T]]],[11,"from",E,E,84,[[[T]],[T]]],[11,"into",E,E,84,[[],[U]]],[11,R[66],E,E,84,[[["self"]],[T]]],[11,R[67],E,E,84,[[[T],["self"]]]],[11,R[8],E,E,84,[[[U]],[R[2]]]],[11,R[29],E,E,84,[[["self"]],[T]]],[11,R[15],E,E,84,[[["self"]],[R[30]]]],[11,R[10],E,E,84,[[["self"]],[T]]],[11,R[9],E,E,84,[[],[R[2]]]],[11,R[1424],E,E,85,[[],[T]]],[11,"from",E,E,85,[[[T]],[T]]],[11,"into",E,E,85,[[],[U]]],[11,R[66],E,E,85,[[["self"]],[T]]],[11,R[67],E,E,85,[[[T],["self"]]]],[11,R[8],E,E,85,[[[U]],[R[2]]]],[11,R[29],E,E,85,[[["self"]],[T]]],[11,R[15],E,E,85,[[["self"]],[R[30]]]],[11,R[10],E,E,85,[[["self"]],[T]]],[11,R[9],E,E,85,[[],[R[2]]]],[11,R[1424],E,E,86,[[],[T]]],[11,"from",E,E,86,[[[T]],[T]]],[11,"into",E,E,86,[[],[U]]],[11,R[8],E,E,86,[[[U]],[R[2]]]],[11,R[29],E,E,86,[[["self"]],[T]]],[11,R[15],E,E,86,[[["self"]],[R[30]]]],[11,R[10],E,E,86,[[["self"]],[T]]],[11,R[9],E,E,86,[[],[R[2]]]],[11,R[1424],R[1436],E,87,[[],[T]]],[11,"from",E,E,87,[[[T]],[T]]],[11,"into",E,E,87,[[],[U]]],[11,R[66],E,E,87,[[["self"]],[T]]],[11,R[67],E,E,87,[[[T],["self"]]]],[11,R[8],E,E,87,[[[U]],[R[2]]]],[11,R[29],E,E,87,[[["self"]],[T]]],[11,R[15],E,E,87,[[["self"]],[R[30]]]],[11,R[10],E,E,87,[[["self"]],[T]]],[11,R[9],E,E,87,[[],[R[2]]]],[11,R[1424],E,E,88,[[],[T]]],[11,"from",E,E,88,[[[T]],[T]]],[11,"into",E,E,88,[[],[U]]],[11,R[66],E,E,88,[[["self"]],[T]]],[11,R[67],E,E,88,[[[T],["self"]]]],[11,R[8],E,E,88,[[[U]],[R[2]]]],[11,R[29],E,E,88,[[["self"]],[T]]],[11,R[15],E,E,88,[[["self"]],[R[30]]]],[11,R[10],E,E,88,[[["self"]],[T]]],[11,R[9],E,E,88,[[],[R[2]]]],[11,R[1424],E,E,89,[[],[T]]],[11,"from",E,E,89,[[[T]],[T]]],[11,"into",E,E,89,[[],[U]]],[11,R[66],E,E,89,[[["self"]],[T]]],[11,R[67],E,E,89,[[[T],["self"]]]],[11,R[8],E,E,89,[[[U]],[R[2]]]],[11,R[29],E,E,89,[[["self"]],[T]]],[11,R[15],E,E,89,[[["self"]],[R[30]]]],[11,R[10],E,E,89,[[["self"]],[T]]],[11,R[9],E,E,89,[[],[R[2]]]],[11,R[1424],E,E,90,[[],[T]]],[11,"from",E,E,90,[[[T]],[T]]],[11,"into",E,E,90,[[],[U]]],[11,R[8],E,E,90,[[[U]],[R[2]]]],[11,R[29],E,E,90,[[["self"]],[T]]],[11,R[15],E,E,90,[[["self"]],[R[30]]]],[11,R[10],E,E,90,[[["self"]],[T]]],[11,R[9],E,E,90,[[],[R[2]]]],[11,R[1424],E,E,91,[[],[T]]],[11,"from",E,E,91,[[[T]],[T]]],[11,"into",E,E,91,[[],[U]]],[11,R[8],E,E,91,[[[U]],[R[2]]]],[11,R[29],E,E,91,[[["self"]],[T]]],[11,R[15],E,E,91,[[["self"]],[R[30]]]],[11,R[10],E,E,91,[[["self"]],[T]]],[11,R[9],E,E,91,[[],[R[2]]]],[11,R[1424],E,E,92,[[],[T]]],[11,"from",E,E,92,[[[T]],[T]]],[11,"into",E,E,92,[[],[U]]],[11,R[66],E,E,92,[[["self"]],[T]]],[11,R[67],E,E,92,[[[T],["self"]]]],[11,R[8],E,E,92,[[[U]],[R[2]]]],[11,R[29],E,E,92,[[["self"]],[T]]],[11,R[15],E,E,92,[[["self"]],[R[30]]]],[11,R[10],E,E,92,[[["self"]],[T]]],[11,R[9],E,E,92,[[],[R[2]]]],[11,R[1424],E,E,93,[[],[T]]],[11,"from",E,E,93,[[[T]],[T]]],[11,"into",E,E,93,[[],[U]]],[11,R[8],E,E,93,[[[U]],[R[2]]]],[11,R[29],E,E,93,[[["self"]],[T]]],[11,R[15],E,E,93,[[["self"]],[R[30]]]],[11,R[10],E,E,93,[[["self"]],[T]]],[11,R[9],E,E,93,[[],[R[2]]]],[11,R[1424],R[1439],E,94,[[],[T]]],[11,"from",E,E,94,[[[T]],[T]]],[11,"into",E,E,94,[[],[U]]],[11,R[66],E,E,94,[[["self"]],[T]]],[11,R[67],E,E,94,[[[T],["self"]]]],[11,R[8],E,E,94,[[[U]],[R[2]]]],[11,R[29],E,E,94,[[["self"]],[T]]],[11,R[15],E,E,94,[[["self"]],[R[30]]]],[11,R[10],E,E,94,[[["self"]],[T]]],[11,R[9],E,E,94,[[],[R[2]]]],[11,R[1424],E,E,95,[[],[T]]],[11,"from",E,E,95,[[[T]],[T]]],[11,"into",E,E,95,[[],[U]]],[11,R[66],E,E,95,[[["self"]],[T]]],[11,R[67],E,E,95,[[[T],["self"]]]],[11,R[8],E,E,95,[[[U]],[R[2]]]],[11,R[29],E,E,95,[[["self"]],[T]]],[11,R[15],E,E,95,[[["self"]],[R[30]]]],[11,R[10],E,E,95,[[["self"]],[T]]],[11,R[9],E,E,95,[[],[R[2]]]],[11,R[1424],E,E,96,[[],[T]]],[11,"from",E,E,96,[[[T]],[T]]],[11,"into",E,E,96,[[],[U]]],[11,R[66],E,E,96,[[["self"]],[T]]],[11,R[67],E,E,96,[[[T],["self"]]]],[11,R[8],E,E,96,[[[U]],[R[2]]]],[11,R[29],E,E,96,[[["self"]],[T]]],[11,R[15],E,E,96,[[["self"]],[R[30]]]],[11,R[10],E,E,96,[[["self"]],[T]]],[11,R[9],E,E,96,[[],[R[2]]]],[11,R[1424],E,E,97,[[],[T]]],[11,"from",E,E,97,[[[T]],[T]]],[11,"into",E,E,97,[[],[U]]],[11,R[66],E,E,97,[[["self"]],[T]]],[11,R[67],E,E,97,[[[T],["self"]]]],[11,R[8],E,E,97,[[[U]],[R[2]]]],[11,R[29],E,E,97,[[["self"]],[T]]],[11,R[15],E,E,97,[[["self"]],[R[30]]]],[11,R[10],E,E,97,[[["self"]],[T]]],[11,R[9],E,E,97,[[],[R[2]]]],[11,R[1424],E,E,98,[[],[T]]],[11,"from",E,E,98,[[[T]],[T]]],[11,"into",E,E,98,[[],[U]]],[11,R[66],E,E,98,[[["self"]],[T]]],[11,R[67],E,E,98,[[[T],["self"]]]],[11,R[8],E,E,98,[[[U]],[R[2]]]],[11,R[29],E,E,98,[[["self"]],[T]]],[11,R[15],E,E,98,[[["self"]],[R[30]]]],[11,R[10],E,E,98,[[["self"]],[T]]],[11,R[9],E,E,98,[[],[R[2]]]],[11,R[1424],E,E,99,[[],[T]]],[11,"from",E,E,99,[[[T]],[T]]],[11,"into",E,E,99,[[],[U]]],[11,R[66],E,E,99,[[["self"]],[T]]],[11,R[67],E,E,99,[[[T],["self"]]]],[11,R[8],E,E,99,[[[U]],[R[2]]]],[11,R[29],E,E,99,[[["self"]],[T]]],[11,R[15],E,E,99,[[["self"]],[R[30]]]],[11,R[10],E,E,99,[[["self"]],[T]]],[11,R[9],E,E,99,[[],[R[2]]]],[11,R[1424],E,E,100,[[],[T]]],[11,"from",E,E,100,[[[T]],[T]]],[11,"into",E,E,100,[[],[U]]],[11,R[66],E,E,100,[[["self"]],[T]]],[11,R[67],E,E,100,[[[T],["self"]]]],[11,R[8],E,E,100,[[[U]],[R[2]]]],[11,R[29],E,E,100,[[["self"]],[T]]],[11,R[15],E,E,100,[[["self"]],[R[30]]]],[11,R[10],E,E,100,[[["self"]],[T]]],[11,R[9],E,E,100,[[],[R[2]]]],[11,R[1424],E,E,101,[[],[T]]],[11,"from",E,E,101,[[[T]],[T]]],[11,"into",E,E,101,[[],[U]]],[11,R[66],E,E,101,[[["self"]],[T]]],[11,R[67],E,E,101,[[[T],["self"]]]],[11,R[8],E,E,101,[[[U]],[R[2]]]],[11,R[29],E,E,101,[[["self"]],[T]]],[11,R[15],E,E,101,[[["self"]],[R[30]]]],[11,R[10],E,E,101,[[["self"]],[T]]],[11,R[9],E,E,101,[[],[R[2]]]],[11,R[1424],E,E,102,[[],[T]]],[11,"from",E,E,102,[[[T]],[T]]],[11,"into",E,E,102,[[],[U]]],[11,R[66],E,E,102,[[["self"]],[T]]],[11,R[67],E,E,102,[[[T],["self"]]]],[11,R[8],E,E,102,[[[U]],[R[2]]]],[11,R[29],E,E,102,[[["self"]],[T]]],[11,R[15],E,E,102,[[["self"]],[R[30]]]],[11,R[10],E,E,102,[[["self"]],[T]]],[11,R[9],E,E,102,[[],[R[2]]]],[11,R[1424],E,E,103,[[],[T]]],[11,"from",E,E,103,[[[T]],[T]]],[11,"into",E,E,103,[[],[U]]],[11,R[66],E,E,103,[[["self"]],[T]]],[11,R[67],E,E,103,[[[T],["self"]]]],[11,R[8],E,E,103,[[[U]],[R[2]]]],[11,R[29],E,E,103,[[["self"]],[T]]],[11,R[15],E,E,103,[[["self"]],[R[30]]]],[11,R[10],E,E,103,[[["self"]],[T]]],[11,R[9],E,E,103,[[],[R[2]]]],[11,R[1424],R[1440],E,104,[[],[T]]],[11,"from",E,E,104,[[[T]],[T]]],[11,"into",E,E,104,[[],[U]]],[11,R[66],E,E,104,[[["self"]],[T]]],[11,R[67],E,E,104,[[[T],["self"]]]],[11,R[8],E,E,104,[[[U]],[R[2]]]],[11,R[29],E,E,104,[[["self"]],[T]]],[11,R[15],E,E,104,[[["self"]],[R[30]]]],[11,R[10],E,E,104,[[["self"]],[T]]],[11,R[9],E,E,104,[[],[R[2]]]],[11,R[62],R[1406],E,0,[[[R[17]],["self"]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,0,[[[R[17]],["self"]],["bool"]]],[11,"le",E,E,0,[[[R[17]],["self"]],["bool"]]],[11,"gt",E,E,0,[[[R[17]],["self"]],["bool"]]],[11,"ge",E,E,0,[[[R[17]],["self"]],["bool"]]],[11,"from",E,E,0,[[[R[2]]],[R[17]]]],[11,"as_ref",E,E,0,[[["self"]],["target"]]],[11,"as_ref",E,E,0,[[["self"]]]],[11,"as_ref",E,E,0,[[["self"]],["str"]]],[11,"as_mut",E,E,0,[[["self"]],["str"]]],[11,"as_mut",E,E,0,[[["self"]]]],[11,"as_mut",E,E,0,[[["self"]],["target"]]],[11,"extend",E,E,0,[[["self"],[T]]]],[11,"clone",E,E,0,[[["self"]],[R[17]]]],[11,"cmp",E,E,0,[[[R[17]],["self"]],[R[23]]]],[11,R[101],E,E,0,[[["self"]],[R[24]]]],[11,"hash",E,E,0,[[["__hlr"],["self"]]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"next",E,E,0,[[["self"]],[R[24]]]],[11,R[104],E,E,0,[[["self"]]]],[11,"fold",E,E,0,[[["g"],["acc"]],["acc"]]],[11,"count",E,E,0,[[],["usize"]]],[11,"last",E,E,0,[[],[R[24]]]],[11,"nth",E,E,0,[[["self"],["usize"]],[R[24]]]],[11,"collect",E,E,0,[[],["b"]]],[11,"all",E,E,0,[[["self"],["f"]],["bool"]]],[11,R[16],E,E,0,[[["self"]]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"eq",E,E,0,[[[R[17]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[17]],["self"]],["bool"]]],[11,"deref",E,E,0,[[["self"]]]],[11,"into",E,E,0,[[],[R[2]]]],[11,"fmt","rayon",E,21,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,25,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,24,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,22,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,23,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,20,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,26,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"drop",E,E,22,[[["self"]]]],[11,R[485],E,E,23,[[["self"]],["str"]]],[11,R[222],E,E,24,[[],[[R[1450],[R[1437]]],[R[1437]]]]],[11,"fmt",E,E,23,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,R[1438],R[1425],E,27,[[["c"]]]],[11,"opt_len",E,E,27,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,28,[[["c"]]]],[11,"opt_len",E,E,28,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],R[1426],E,29,[[["c"]]]],[11,"opt_len",E,E,29,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,30,[[["c"]]]],[11,"opt_len",E,E,30,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,31,[[["c"]]]],[11,"opt_len",E,E,31,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],R[1427],E,32,[[["c"]]]],[11,"opt_len",E,E,32,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,33,[[["c"]]]],[11,"opt_len",E,E,33,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],R[1428],E,34,[[["c"]]]],[11,"opt_len",E,E,34,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,35,[[["c"]]]],[11,"opt_len",E,E,35,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,36,[[["c"]]]],[11,"opt_len",E,E,36,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],R[1429],E,37,[[["c"]]]],[11,"opt_len",E,E,37,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,38,[[["c"]]]],[11,"opt_len",E,E,38,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],R[1430],E,39,[[["c"]]]],[11,"opt_len",E,E,39,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,40,[[["c"]]]],[11,"opt_len",E,E,40,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,41,[[["c"]]]],[11,"opt_len",E,E,41,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],R[1431],E,42,[[["c"]]]],[11,"opt_len",E,E,42,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,43,[[["c"]]]],[11,"opt_len",E,E,43,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,44,[[["c"]]]],[11,"opt_len",E,E,44,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],R[1406],E,45,[[["c"]]]],[11,R[1438],E,E,46,[[["c"]]]],[11,"opt_len",E,E,46,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,47,[[["c"]]]],[11,"opt_len",E,E,47,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,48,[[["c"]]]],[11,"opt_len",E,E,48,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,49,[[["c"]]]],[11,R[1438],E,E,50,[[["c"]]]],[11,R[1438],E,E,51,[[["c"]]]],[11,R[1438],E,E,52,[[["c"]]]],[11,R[1438],E,E,53,[[["c"]]]],[11,R[1438],E,E,54,[[["c"]]]],[11,R[1438],E,E,55,[[["c"]]]],[11,R[1438],E,E,56,[[["c"]]]],[11,R[1438],E,E,57,[[["c"]]]],[11,"opt_len",E,E,57,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,58,[[["c"]]]],[11,R[1438],E,E,59,[[["c"]]]],[11,"opt_len",E,E,59,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,60,[[["c"]]]],[11,"opt_len",E,E,60,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,62,[[["c"]]]],[11,"opt_len",E,E,62,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,61,[[["c"]]]],[11,"opt_len",E,E,61,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,63,[[["c"]]]],[11,"opt_len",E,E,63,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,64,[[["c"]]]],[11,"opt_len",E,E,64,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,65,[[["c"]]]],[11,"opt_len",E,E,65,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,66,[[["c"]]]],[11,"opt_len",E,E,66,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,67,[[["c"]]]],[11,"opt_len",E,E,67,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,68,[[["c"]]]],[11,"opt_len",E,E,68,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,69,[[["c"]]]],[11,"opt_len",E,E,69,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,71,[[["c"]]]],[11,"opt_len",E,E,71,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,70,[[["c"]]]],[11,"opt_len",E,E,70,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,72,[[["c"]]]],[11,"opt_len",E,E,72,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,73,[[["c"]]]],[11,"opt_len",E,E,73,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,74,[[["c"]]]],[11,"opt_len",E,E,74,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,75,[[["c"]]]],[11,R[1438],E,E,8,[[["c"]]]],[11,R[1438],E,E,76,[[["c"]]]],[11,"opt_len",E,E,76,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,77,[[["c"]]]],[11,"opt_len",E,E,77,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,78,[[["c"]]]],[11,"opt_len",E,E,78,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],R[1432],E,79,[[["c"]]]],[11,"opt_len",E,E,79,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,80,[[["c"]]]],[11,"opt_len",E,E,80,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,81,[[["c"]]]],[11,"opt_len",E,E,81,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],R[1433],E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],R[1434],E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],R[1435],E,84,[[["c"]]]],[11,"opt_len",E,E,84,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,85,[[["c"]]]],[11,"opt_len",E,E,85,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,86,[[["c"]]]],[11,"opt_len",E,E,86,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],R[1436],E,87,[[["c"]]]],[11,"opt_len",E,E,87,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,88,[[["c"]]]],[11,"opt_len",E,E,88,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,89,[[["c"]]]],[11,"opt_len",E,E,89,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,90,[[["c"]]]],[11,"opt_len",E,E,90,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,91,[[["c"]]]],[11,"opt_len",E,E,91,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],E,E,92,[[["c"]]]],[11,R[1438],E,E,93,[[["c"]]]],[11,R[1438],R[1439],E,94,[[["c"]]]],[11,R[1438],E,E,95,[[["c"]]]],[11,R[1438],E,E,96,[[["c"]]]],[11,R[1438],E,E,97,[[["c"]]]],[11,R[1438],E,E,98,[[["c"]]]],[11,R[1438],E,E,99,[[["c"]]]],[11,R[1438],E,E,100,[[["c"]]]],[11,R[1438],E,E,101,[[["c"]]]],[11,R[1438],E,E,102,[[["c"]]]],[11,R[1438],E,E,103,[[["c"]]]],[11,R[1438],R[1440],E,104,[[["c"]]]],[11,"opt_len",E,E,104,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1438],R[1406],E,0,[[["c"]]]],[11,"opt_len",E,E,0,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,"drive",R[1425],E,27,[[["c"]]]],[11,"len",E,E,27,[[["self"]],["usize"]]],[11,R[1441],E,E,27,[[["cb"]]]],[11,"drive",E,E,28,[[["c"]]]],[11,"len",E,E,28,[[["self"]],["usize"]]],[11,R[1441],E,E,28,[[["cb"]]]],[11,"drive",R[1431],E,42,[[["c"]]]],[11,"len",E,E,42,[[["self"]],["usize"]]],[11,R[1441],E,E,42,[[["cb"]]]],[11,"drive",E,E,43,[[["c"]]]],[11,"len",E,E,43,[[["self"]],["usize"]]],[11,R[1441],E,E,43,[[["cb"]]]],[11,"drive",E,E,44,[[["c"]]]],[11,"len",E,E,44,[[["self"]],["usize"]]],[11,R[1441],E,E,44,[[["cb"]]]],[11,"drive",R[1406],E,46,[[["c"]]]],[11,"len",E,E,46,[[["self"]],["usize"]]],[11,R[1441],E,E,46,[[["cb"]]]],[11,"drive",E,E,47,[[["c"]]]],[11,"len",E,E,47,[[["self"]],["usize"]]],[11,R[1441],E,E,47,[[["cb"]]]],[11,"drive",E,E,48,[[[R[1442]]]]],[11,"len",E,E,48,[[["self"]],["usize"]]],[11,R[1441],E,E,48,[[["cb"]]]],[11,"len",E,E,57,[[["self"]],["usize"]]],[11,"drive",E,E,57,[[[R[1442]]]]],[11,R[1441],E,E,57,[[["cb"]]]],[11,"len",E,E,59,[[["self"]],["usize"]]],[11,"drive",E,E,59,[[[R[1442]]]]],[11,R[1441],E,E,59,[[["cb"]]]],[11,"drive",E,E,60,[[["c"]]]],[11,"len",E,E,60,[[["self"]],["usize"]]],[11,R[1441],E,E,60,[[["cb"]]]],[11,"drive",E,E,62,[[["c"]]]],[11,"len",E,E,62,[[["self"]],["usize"]]],[11,R[1441],E,E,62,[[["cb"]]]],[11,"drive",E,E,61,[[["c"]]]],[11,"len",E,E,61,[[["self"]],["usize"]]],[11,R[1441],E,E,61,[[["cb"]]]],[11,"drive",E,E,63,[[["c"]]]],[11,"len",E,E,63,[[["self"]],["usize"]]],[11,R[1441],E,E,63,[[["cb"]]]],[11,"drive",E,E,64,[[["c"]]]],[11,"len",E,E,64,[[["self"]],["usize"]]],[11,R[1441],E,E,64,[[["cb"]]]],[11,"drive",E,E,65,[[["c"]]]],[11,"len",E,E,65,[[["self"]],["usize"]]],[11,R[1441],E,E,65,[[["cb"]]]],[11,"drive",E,E,66,[[["c"]]]],[11,"len",E,E,66,[[["self"]],["usize"]]],[11,R[1441],E,E,66,[[["cb"]]]],[11,"drive",E,E,67,[[["c"]]]],[11,"len",E,E,67,[[["self"]],["usize"]]],[11,R[1441],E,E,67,[[["cb"]]]],[11,"drive",E,E,68,[[["c"]]]],[11,"len",E,E,68,[[["self"]],["usize"]]],[11,R[1441],E,E,68,[[["cb"]]]],[11,"drive",E,E,69,[[[R[1442]]]]],[11,"len",E,E,69,[[["self"]],["usize"]]],[11,R[1441],E,E,69,[[["cb"]]]],[11,"drive",E,E,71,[[[R[1442]]]]],[11,"len",E,E,71,[[["self"]],["usize"]]],[11,R[1441],E,E,71,[[["cb"]]]],[11,"drive",E,E,70,[[[R[1442]]]]],[11,"len",E,E,70,[[["self"]],["usize"]]],[11,R[1441],E,E,70,[[["cb"]]]],[11,"drive",E,E,72,[[["c"]]]],[11,"len",E,E,72,[[["self"]],["usize"]]],[11,R[1441],E,E,72,[[["cb"]]]],[11,"drive",E,E,73,[[["c"]]]],[11,"len",E,E,73,[[["self"]],["usize"]]],[11,R[1441],E,E,73,[[["cb"]]]],[11,"drive",E,E,74,[[["c"]]]],[11,"len",E,E,74,[[["self"]],["usize"]]],[11,R[1441],E,E,74,[[["cb"]]]],[11,"drive",E,E,76,[[["c"]]]],[11,R[1441],E,E,76,[[["cb"]]]],[11,"len",E,E,76,[[["self"]],["usize"]]],[11,"drive",E,E,77,[[["c"]]]],[11,"len",E,E,77,[[["self"]],["usize"]]],[11,R[1441],E,E,77,[[["cb"]]]],[11,"drive",E,E,78,[[["c"]]]],[11,"len",E,E,78,[[["self"]],["usize"]]],[11,R[1441],E,E,78,[[["cb"]]]],[11,"drive",R[1432],E,79,[[["c"]]]],[11,"len",E,E,79,[[["self"]],["usize"]]],[11,R[1441],E,E,79,[[["cb"]]]],[11,"drive",E,E,80,[[["c"]]]],[11,"len",E,E,80,[[["self"]],["usize"]]],[11,R[1441],E,E,80,[[["cb"]]]],[11,"drive",E,E,81,[[["c"]]]],[11,"len",E,E,81,[[["self"]],["usize"]]],[11,R[1441],E,E,81,[[["cb"]]]],[11,"drive",R[1433],E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1441],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1441],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1441],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1441],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1441],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1441],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1441],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1441],E,E,82,[[["cb"]]]],[11,"drive",R[1434],E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[1441],E,E,83,[[["cb"]]]],[11,"drive",E,E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[1441],E,E,83,[[["cb"]]]],[11,"drive",E,E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[1441],E,E,83,[[["cb"]]]],[11,"drive",E,E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[1441],E,E,83,[[["cb"]]]],[11,"drive",R[1435],E,84,[[["c"]]]],[11,"len",E,E,84,[[["self"]],["usize"]]],[11,R[1441],E,E,84,[[["cb"]]]],[11,"drive",E,E,85,[[["c"]]]],[11,"len",E,E,85,[[["self"]],["usize"]]],[11,R[1441],E,E,85,[[["cb"]]]],[11,"drive",E,E,86,[[["c"]]]],[11,"len",E,E,86,[[["self"]],["usize"]]],[11,R[1441],E,E,86,[[["cb"]]]],[11,"drive",R[1436],E,87,[[["c"]]]],[11,"len",E,E,87,[[["self"]],["usize"]]],[11,R[1441],E,E,87,[[["cb"]]]],[11,"drive",E,E,88,[[["c"]]]],[11,"len",E,E,88,[[["self"]],["usize"]]],[11,R[1441],E,E,88,[[["cb"]]]],[11,"drive",E,E,89,[[["c"]]]],[11,"len",E,E,89,[[["self"]],["usize"]]],[11,R[1441],E,E,89,[[["cb"]]]],[11,"drive",E,E,90,[[["c"]]]],[11,"len",E,E,90,[[["self"]],["usize"]]],[11,R[1441],E,E,90,[[["cb"]]]],[11,"drive",E,E,91,[[["c"]]]],[11,"len",E,E,91,[[["self"]],["usize"]]],[11,R[1441],E,E,91,[[["cb"]]]],[11,"drive",R[1440],E,104,[[["c"]]]],[11,"len",E,E,104,[[["self"]],["usize"]]],[11,R[1441],E,E,104,[[["cb"]]]],[11,"drive",R[1406],E,0,[[["c"]]]],[11,"len",E,E,0,[[["self"]],["usize"]]],[11,R[1441],E,E,0,[[["cb"]]]],[11,"par_extend",E,E,0,[[["self"],["i"]]]],[11,"clone",R[1425],E,27,[[["self"]],[R[358]]]],[11,"clone",E,E,28,[[["self"]],["self"]]],[11,"clone",R[1426],E,30,[[["self"]],["self"]]],[11,"clone",R[1427],E,33,[[["self"]],["self"]]],[11,"clone",R[1428],E,35,[[["self"]],["self"]]],[11,"clone",R[1429],E,38,[[["self"]],["self"]]],[11,"clone",R[1430],E,39,[[["self"]],[R[358]]]],[11,"clone",E,E,40,[[["self"]],["self"]]],[11,"clone",R[1431],E,42,[[["self"]],[R[358]]]],[11,"clone",E,E,43,[[["self"]],["self"]]],[11,"clone",R[1406],E,45,[[["self"]],[R[1443]]]],[11,"clone",E,E,46,[[["self"]],["chain"]]],[11,"clone",E,E,47,[[["self"]],["chunks"]]],[11,"clone",E,E,48,[[["self"]],[R[227]]]],[11,"clone",E,E,49,[[["self"]],["filter"]]],[11,"clone",E,E,50,[[["self"]],["filtermap"]]],[11,"clone",E,E,51,[[["self"]],["flatmap"]]],[11,"clone",E,E,52,[[["self"]],["flatten"]]],[11,"clone",E,E,53,[[["self"]],["fold"]]],[11,"clone",E,E,54,[[["self"]],["foldwith"]]],[11,"clone",E,E,55,[[["self"]],["tryfold"]]],[11,"clone",E,E,56,[[["self"]],[R[1444]]]],[11,"clone",E,E,57,[[["self"]],["skip"]]],[11,"clone",E,E,58,[[["self"]],["split"]]],[11,"clone",E,E,59,[[["self"]],["take"]]],[11,"clone",E,E,60,[[["self"]],["map"]]],[11,"clone",E,E,62,[[["self"]],["mapwith"]]],[11,"clone",E,E,61,[[["self"]],["mapinit"]]],[11,"clone",E,E,63,[[["self"]],["zip"]]],[11,"clone",E,E,64,[[["self"]],["zipeq"]]],[11,"clone",E,E,65,[[["self"]],[R[224]]]],[11,"clone",E,E,66,[[["self"]],[R[254]]]],[11,"clone",E,E,67,[[["self"]],[R[237]]]],[11,"clone",E,E,68,[[["self"]],["update"]]],[11,"clone",E,E,69,[[["self"]],["rev"]]],[11,"clone",E,E,71,[[["self"]],["minlen"]]],[11,"clone",E,E,70,[[["self"]],["maxlen"]]],[11,"clone",E,E,72,[[["self"]],["cloned"]]],[11,"clone",E,E,73,[[["self"]],["inspect"]]],[11,"clone",E,E,74,[[["self"]],["panicfuse"]]],[11,"clone",E,E,75,[[["self"]],[R[256]]]],[11,"clone",E,E,8,[[["self"]],["repeat"]]],[11,"clone",E,E,76,[[["self"]],["repeatn"]]],[11,"clone",E,E,77,[[["self"]],["self"]]],[11,"clone",E,E,78,[[["self"]],["once"]]],[11,"clone",R[1432],E,79,[[["self"]],[R[358]]]],[11,"clone",E,E,80,[[["self"]],["self"]]],[11,"clone",R[1433],E,82,[[["self"]],["iter"]]],[11,"clone",R[1434],E,83,[[["self"]],["iter"]]],[11,"clone",R[1435],E,84,[[["self"]],[R[358]]]],[11,"clone",E,E,85,[[["self"]],["self"]]],[11,"clone",R[1436],E,87,[[["self"]],["self"]]],[11,"clone",E,E,88,[[["self"]],["self"]]],[11,"clone",E,E,89,[[["self"]],["self"]]],[11,"clone",E,E,92,[[["self"]],["self"]]],[11,"clone",R[1439],E,94,[[["self"]],["chars"]]],[11,"clone",E,E,95,[[["self"]],[R[1445]]]],[11,"clone",E,E,96,[[["self"]],["bytes"]]],[11,"clone",E,E,97,[[["self"]],[R[1446]]]],[11,"clone",E,E,98,[[["self"]],["split"]]],[11,"clone",E,E,99,[[["self"]],[R[1447]]]],[11,"clone",E,E,100,[[["self"]],["lines"]]],[11,"clone",E,E,101,[[["self"]],[R[1448]]]],[11,"clone",E,E,102,[[["self"]],["matches"]]],[11,"clone",E,E,103,[[["self"]],[R[1449]]]],[11,"clone",R[1440],E,104,[[["self"]],[R[358]]]],[11,"fmt",R[1425],E,27,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,28,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[1426],E,29,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,30,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,31,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[1427],E,32,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,33,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[1428],E,34,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,35,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,36,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[1429],E,37,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,38,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[1430],E,39,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,40,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,41,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[1431],E,42,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,43,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,44,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[1406],E,45,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,46,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,47,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,48,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,49,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,50,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,51,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,52,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,53,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,54,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,55,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,56,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,57,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,58,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,59,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,60,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,62,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,61,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,63,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,64,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,65,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,66,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,67,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,68,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,69,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,71,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,70,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,72,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,73,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,74,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,75,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,8,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,76,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,77,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,78,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[1432],E,79,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,80,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,81,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[1433],E,82,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[1434],E,83,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[1435],E,84,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,85,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,86,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[1436],E,87,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,88,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,89,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,90,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,91,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,92,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,93,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[1439],E,94,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,95,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,96,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,97,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,98,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,99,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,100,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,101,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,102,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,103,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[1440],E,104,[[[R[12]],["self"]],[R[2]]]],[11,"migrated","rayon",R[1508],20,[[["self"]],["bool"]]],[11,"index",E,R[1484],21,[[["self"]],["usize"]]],[11,"name",E,R[1485],21,[[["self"]],[["str"],[R[24],["str"]]]]],[11,R[1374],E,R[1486],21,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,"run",E,R[1487],21,[[]]],[11,"new",E,R[1370],22,[[[R[1360]]],[[R[1367]],["box",["error"]],[R[2],[R[1367],"box"]]]]],[11,"install",E,R[1488],22,[[["op"],["self"]],["r"]]],[11,R[1361],E,R[1489],22,[[["self"]],["usize"]]],[11,R[1362],E,R[1490],22,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1363],E,R[1491],22,[[["self"]],[["bool"],[R[24],["bool"]]]]],[11,"join",E,R[1492],22,[[["a"],["self"],["b"]]]],[11,"scope",E,R[1364],22,[[["op"],["self"]],["r"]]],[11,R[1480],E,R[1364],22,[[["op"],["self"]],["r"]]],[11,"spawn",E,R[1366],22,[[["op"],["self"]]]],[11,R[1365],E,R[1366],22,[[["op"],["self"]]]],[11,"new",E,R[1493],24,[[],[[R[1450],[R[1437]]],[R[1437]]]]],[11,"build",E,R[1494],24,[[],[[R[1367]],[R[2],[R[1367],R[1368]]],[R[1368]]]]],[11,R[1495],E,R[1496],24,[[],[[R[2],[R[1368]]],[R[1368]]]]],[11,R[1497],E,R[1498],24,[[["w"],["f"]],[[R[2],[R[1368]]],[R[1368]]]]],[11,R[1499],E,R[1500],24,[[["f"]],[[R[1450],[R[1369]]],[R[1369]]]]],[11,R[1371],E,R[1501],24,[[["f"]],[R[1450]]]],[11,R[1372],E,R[1502],24,[[["usize"]],[R[1450]]]],[11,R[1373],E,R[1503],24,[[["h"]],[R[1450]]]],[11,R[1374],E,R[1504],24,[[["usize"]],[R[1450]]]],[11,R[1375],E,R[1505],24,[[],[R[1450]]]],[11,R[1376],E,R[1506],24,[[["h"]],[R[1450]]]],[11,R[1377],E,R[1507],24,[[["h"]],[R[1450]]]],[11,"spawn",E,R[1359],25,[[["body"],["self"]]]],[11,R[1365],E,R[1359],26,[[["body"],["self"]]]],[11,"is_left",R[1406],R[288],0,[[["self"]],["bool"]]],[11,"is_right",E,R[289],0,[[["self"]],["bool"]]],[11,"left",E,R[290],0,[[],[R[24]]]],[11,"right",E,R[291],0,[[],[R[24]]]],[11,"as_ref",E,R[292],0,[[["self"]],[["r"],[R[17]],["l"]]]],[11,"as_mut",E,R[293],0,[[["self"]],[["r"],["l"],[R[17]]]]],[11,"flip",E,R[294],0,[[],[R[17]]]],[11,"map_left",E,R[18],0,[[["f"]],[R[17]]]],[11,R[295],E,R[19],0,[[["f"]],[R[17]]]],[11,R[17],E,R[296],0,[[["g"],["f"]],[T]]],[11,R[297],E,R[298],0,[[["ctx"],["g"],["f"]],[T]]],[11,R[299],E,R[18],0,[[["f"]],[R[17]]]],[11,R[300],E,R[19],0,[[["f"]],[R[17]]]],[11,R[22],E,R[301],0,[[],[R[17]]]],[11,"left_or",E,R[302],0,[[["l"]],["l"]]],[11,R[303],E,R[304],0,[[],["l"]]],[11,R[305],E,R[20],0,[[["f"]],["l"]]],[11,"right_or",E,R[306],0,[[["r"]],["r"]]],[11,R[307],E,R[308],0,[[],["r"]]],[11,R[309],E,R[20],0,[[["f"]],["r"]]],[11,R[310],E,R[21],0,[[]]],[11,R[311],E,R[21],0,[[]]],[11,R[25],E,R[312],0,[[],[T]]]],"p":[[4,"Either"],[8,R[1451]],[8,"Producer"],[8,"Consumer"],[8,"Folder"],[8,"Reducer"],[8,R[1452]],[8,R[1453]],[3,"Repeat"],[8,R[1418]],[8,R[1454]],[8,R[1455]],[8,R[1456]],[8,R[1457]],[8,R[1458]],[8,R[1459]],[8,R[1460]],[8,R[1461]],[8,R[1462]],[8,R[1463]],[3,R[1510]],[3,R[1378]],[3,R[1471]],[3,R[1381]],[3,R[1379]],[3,"Scope"],[3,R[1509]],[3,R[184]],[3,"Iter"],[3,R[184]],[3,"Iter"],[3,R[359]],[3,R[184]],[3,"Iter"],[3,R[184]],[3,"Iter"],[3,R[359]],[3,R[184]],[3,"Iter"],[3,R[184]],[3,"Iter"],[3,R[359]],[3,R[184]],[3,"Iter"],[3,R[359]],[3,"IterBridge"],[3,"Chain"],[3,"Chunks"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Flatten"],[3,"Fold"],[3,"FoldWith"],[3,"TryFold"],[3,R[1464]],[3,"Skip"],[3,"Split"],[3,"Take"],[3,"Map"],[3,"MapInit"],[3,"MapWith"],[3,"Zip"],[3,"ZipEq"],[3,R[266]],[3,R[267]],[3,R[277]],[3,"Update"],[3,"Rev"],[3,"MaxLen"],[3,"MinLen"],[3,"Cloned"],[3,"Inspect"],[3,"PanicFuse"],[3,R[270]],[3,"RepeatN"],[3,"Empty"],[3,"Once"],[3,R[184]],[3,"Iter"],[3,R[359]],[3,"Iter"],[3,"Iter"],[3,R[184]],[3,"Iter"],[3,R[359]],[3,"Iter"],[3,"Chunks"],[3,"Windows"],[3,R[359]],[3,"ChunksMut"],[3,"Split"],[3,"SplitMut"],[3,"Chars"],[3,R[1465]],[3,"Bytes"],[3,R[1466]],[3,"Split"],[3,R[1467]],[3,"Lines"],[3,R[1468]],[3,"Matches"],[3,R[1469]],[3,R[184]]]};
searchIndex["rayon_core"]={"doc":"Under construction","i":[[3,R[1378],"rayon_core",R[1470],N,N],[3,"Scope",E,R[1357],N,N],[3,R[1509],E,R[1357],N,N],[3,R[1471],E,R[1472],N,N],[3,R[1381],E,R[1473],N,N],[3,R[1379],E,R[1474],N,N],[3,R[1380],E,"Contains the rayon thread pool configuration. Use…",N,N],[3,R[1510],E,R[1475],N,N],[5,"join",E,R[1476],N,[[["a"],["b"]]]],[5,R[1477],E,R[1478],N,[[["a"],["b"]]]],[5,"scope",E,R[1479],N,[[["op"]],["r"]]],[5,R[1480],E,R[1481],N,[[["op"]],["r"]]],[5,"spawn",E,R[1358],N,[[["f"]]]],[5,R[1365],E,R[1358],N,[[["f"]]]],[5,R[1363],E,"If called from a Rayon worker thread, indicates whether…",N,[[],[[R[24],["bool"]],["bool"]]]],[5,R[1362],E,R[1482],N,[[],[[R[24],["usize"]],["usize"]]]],[5,R[1361],E,R[1483],N,[[],["usize"]]],[5,R[167],E,"Deprecated in favor of `ThreadPoolBuilder::build_global`.",N,[[[R[1360]]],[["box",["error"]],[R[2],["box"]]]]],[11,"index",E,R[1484],0,[[["self"]],["usize"]]],[11,"name",E,R[1485],0,[[["self"]],[["str"],[R[24],["str"]]]]],[11,R[1374],E,R[1486],0,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,"run",E,R[1487],0,[[]]],[11,"spawn",E,R[1359],1,[[["body"],["self"]]]],[11,R[1365],E,R[1359],2,[[["body"],["self"]]]],[11,"new",E,R[1370],3,[[[R[1360]]],[["box",["error"]],[R[2],[R[1367],"box"]],[R[1367]]]]],[11,"install",E,R[1488],3,[[["op"],["self"]],["r"]]],[11,R[1361],E,R[1489],3,[[["self"]],["usize"]]],[11,R[1362],E,R[1490],3,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1363],E,R[1491],3,[[["self"]],[[R[24],["bool"]],["bool"]]]],[11,"join",E,R[1492],3,[[["a"],["self"],["b"]]]],[11,"scope",E,R[1364],3,[[["op"],["self"]],["r"]]],[11,R[1480],E,R[1364],3,[[["op"],["self"]],["r"]]],[11,"spawn",E,R[1366],3,[[["op"],["self"]]]],[11,R[1365],E,R[1366],3,[[["op"],["self"]]]],[11,"new",E,R[1493],4,[[],["self"]]],[11,"build",E,R[1494],4,[[],[[R[1367]],[R[1368]],[R[2],[R[1367],R[1368]]]]]],[11,R[1495],E,R[1496],4,[[],[[R[2],[R[1368]]],[R[1368]]]]],[11,R[1497],E,R[1498],4,[[["w"],["f"]],[[R[1368]],[R[2],[R[1368]]]]]],[11,R[1499],E,R[1500],4,[[["f"]],[[R[1450],[R[1369]]],[R[1369]]]]],[11,R[1371],E,R[1501],4,[[["f"]],["self"]]],[11,R[1372],E,R[1502],4,[[["usize"]],["self"]]],[11,R[1373],E,R[1503],4,[[["h"]],["self"]]],[11,R[1374],E,R[1504],4,[[["usize"]],["self"]]],[11,R[1375],E,R[1505],4,[[],["self"]]],[11,R[1376],E,R[1506],4,[[["h"]],["self"]]],[11,R[1377],E,R[1507],4,[[["h"]],["self"]]],[11,"new",E,"Creates and return a valid rayon thread pool…",5,[[],[R[1360]]]],[11,"build",E,R[1370],5,[[],[[R[2],[R[1367],"box"]],[R[1367]],["box",["error"]]]]],[11,R[1371],E,"Deprecated in favor of `ThreadPoolBuilder::thread_name`.",5,[[["f"]],["self"]]],[11,R[1372],E,"Deprecated in favor of `ThreadPoolBuilder::num_threads`.",5,[[["usize"]],[R[1360]]]],[11,R[1373],E,"Deprecated in favor of `ThreadPoolBuilder::panic_handler`.",5,[[["h"]],[R[1360]]]],[11,R[1374],E,"Deprecated in favor of `ThreadPoolBuilder::stack_size`.",5,[[["usize"]],["self"]]],[11,R[1375],E,"Deprecated in favor of `ThreadPoolBuilder::breadth_first`.",5,[[],["self"]]],[11,R[1376],E,"Deprecated in favor of `ThreadPoolBuilder::start_handler`.",5,[[["h"]],[R[1360]]]],[11,R[1377],E,"Deprecated in favor of `ThreadPoolBuilder::exit_handler`.",5,[[["h"]],[R[1360]]]],[11,"migrated",E,R[1508],6,[[["self"]],["bool"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[161],E,E,7,[[["self"]],[R[34]]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[30]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[30]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[30]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[30]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,"drop",E,E,3,[[["self"]]]],[11,R[222],E,E,4,[[],["self"]]],[11,R[222],E,E,5,[[],["self"]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,1,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,2,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,3,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,7,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,4,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,5,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,6,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,7,[[[R[12]],["self"]],[R[2]]]],[11,R[485],E,E,7,[[["self"]],["str"]]]],"p":[[3,R[1378]],[3,"Scope"],[3,R[1509]],[3,R[1471]],[3,R[1379]],[3,R[1380]],[3,R[1510]],[3,R[1381]]]};
searchIndex["regex"]={"doc":"This crate provides a library for parsing, compiling, and…","i":[[3,R[1241],"regex",R[1242],N,N],[3,R[1243],E,R[1244],N,N],[3,"RegexSet",E,R[1257],N,N],[3,R[1332],E,R[1258],N,N],[3,R[1259],E,R[1260],N,N],[3,R[1261],E,R[1262],N,N],[3,"Regex",E,"A compiled regular expression for matching Unicode strings.",N,N],[3,"Match",E,R[1245],N,N],[3,"Captures",E,"Captures represents a group of captured strings for a…",N,N],[3,R[1251],E,R[1252],N,N],[3,"Matches",E,R[1246],N,N],[3,R[1247],E,R[1248],N,N],[3,R[1253],E,R[1254],N,N],[3,R[1255],E,R[1256],N,N],[3,"NoExpand",E,"`NoExpand` indicates literal string replacement.",N,N],[12,"0",E,E,0,N],[3,"Split",E,R[1249],N,N],[3,"SplitN",E,R[1250],N,N],[4,"Error",E,"An error that occurred during parsing or compiling a…",N,N],[13,"Syntax",E,"A syntax error.",1,N],[13,"CompiledTooBig",E,"The compiled program exceeded the set size limit. The…",1,N],[5,"escape",E,R[1333],N,[[["str"]],[R[34]]]],[0,"bytes",E,"Match regular expressions on arbitrary bytes.",N,N],[3,R[1241],R[1275],R[1242],N,N],[3,R[1243],E,R[1244],N,N],[3,"Match",E,R[1245],N,N],[3,"Regex",E,"A compiled regular expression for matching arbitrary bytes.",N,N],[3,"Matches",E,R[1246],N,N],[3,R[1247],E,R[1248],N,N],[3,"Split",E,R[1249],N,N],[3,"SplitN",E,R[1250],N,N],[3,R[1251],E,R[1252],N,N],[3,"Captures",E,"Captures represents a group of captured byte strings for a…",N,N],[3,R[1253],E,R[1254],N,N],[3,R[1255],E,R[1256],N,N],[3,"NoExpand",E,"`NoExpand` indicates literal byte string replacement.",N,N],[12,"0",E,E,2,N],[3,"RegexSet",E,R[1257],N,N],[3,R[1332],E,R[1258],N,N],[3,R[1259],E,R[1260],N,N],[3,R[1261],E,R[1262],N,N],[8,"Replacer",E,R[1325],N,N],[10,R[1326],E,R[1327],3,[[["self"],[R[1302]],["vec"]]]],[11,R[1279],E,R[1280],3,[[["self"]],[[R[24],["cow"]],["cow"]]]],[11,"by_ref",E,R[1281],3,[[["self"]],[R[1282]]]],[11,"new",E,R[1264],4,[[["str"]],[R[1263]]]],[11,"build",E,R[1265],4,[[["self"]],[["regex"],[R[2],["regex","error"]],["error"]]]],[11,R[449],E,R[1266],4,[[["self"],["bool"]],[R[1263]]]],[11,R[450],E,R[1267],4,[[["self"],["bool"]],[R[1263]]]],[11,R[451],E,R[1268],4,[[["self"],["bool"]],[R[1263]]]],[11,R[452],E,R[1269],4,[[["self"],["bool"]],[R[1263]]]],[11,R[447],E,R[1270],4,[[["self"],["bool"]],[R[1263]]]],[11,"unicode",E,R[1271],4,[[["self"],["bool"]],[R[1263]]]],[11,R[1277],E,R[1272],4,[[["self"],["usize"]],[R[1263]]]],[11,R[1273],E,R[1274],4,[[["self"],["usize"]],[R[1263]]]],[11,R[443],E,R[444],4,[[["u32"],["self"]],[R[1263]]]],[11,"new","regex",R[1264],5,[[["str"]],[R[1263]]]],[11,"build",E,R[1265],5,[[["self"]],[["error"],["regex"],[R[2],["regex","error"]]]]],[11,R[449],E,R[1266],5,[[["self"],["bool"]],[R[1263]]]],[11,R[450],E,R[1267],5,[[["self"],["bool"]],[R[1263]]]],[11,R[451],E,R[1268],5,[[["self"],["bool"]],[R[1263]]]],[11,R[452],E,R[1269],5,[[["self"],["bool"]],[R[1263]]]],[11,R[447],E,R[1270],5,[[["self"],["bool"]],[R[1263]]]],[11,"unicode",E,R[1271],5,[[["self"],["bool"]],[R[1263]]]],[11,R[1277],E,R[1272],5,[[["self"],["usize"]],[R[1263]]]],[11,R[1273],E,R[1274],5,[[["self"],["usize"]],[R[1263]]]],[11,R[443],E,R[444],5,[[["u32"],["self"]],[R[1263]]]],[11,"new",R[1275],R[1264],6,[[["i"]],[R[1276]]]],[11,"build",E,R[1278],6,[[["self"]],[[R[1284]],[R[2],[R[1284],"error"]],["error"]]]],[11,R[449],E,R[1266],6,[[["self"],["bool"]],[R[1276]]]],[11,R[450],E,R[1267],6,[[["self"],["bool"]],[R[1276]]]],[11,R[451],E,R[1268],6,[[["self"],["bool"]],[R[1276]]]],[11,R[452],E,R[1269],6,[[["self"],["bool"]],[R[1276]]]],[11,R[447],E,R[1270],6,[[["self"],["bool"]],[R[1276]]]],[11,"unicode",E,R[1271],6,[[["self"],["bool"]],[R[1276]]]],[11,R[1277],E,R[1272],6,[[["self"],["usize"]],[R[1276]]]],[11,R[1273],E,R[1274],6,[[["self"],["usize"]],[R[1276]]]],[11,R[443],E,R[444],6,[[["u32"],["self"]],[R[1276]]]],[11,"new","regex",R[1264],7,[[["i"]],[R[1276]]]],[11,"build",E,R[1278],7,[[["self"]],[[R[1284]],[R[2],[R[1284],"error"]],["error"]]]],[11,R[449],E,R[1266],7,[[["self"],["bool"]],[R[1276]]]],[11,R[450],E,R[1267],7,[[["self"],["bool"]],[R[1276]]]],[11,R[451],E,R[1268],7,[[["self"],["bool"]],[R[1276]]]],[11,R[452],E,R[1269],7,[[["self"],["bool"]],[R[1276]]]],[11,R[447],E,R[1270],7,[[["self"],["bool"]],[R[1276]]]],[11,"unicode",E,R[1271],7,[[["self"],["bool"]],[R[1276]]]],[11,R[1277],E,R[1272],7,[[["self"],["usize"]],[R[1276]]]],[11,R[1273],E,R[1274],7,[[["self"],["usize"]],[R[1276]]]],[11,R[443],E,R[444],7,[[["u32"],["self"]],[R[1276]]]],[11,R[1279],R[1275],R[1280],3,[[["self"]],[[R[24],["cow"]],["cow"]]]],[11,"by_ref",E,R[1281],3,[[["self"]],[R[1282]]]],[11,"start",E,R[1294],8,[[["self"]],["usize"]]],[11,"end",E,R[1295],8,[[["self"]],["usize"]]],[11,"as_bytes",E,R[1296],8,[[["self"]]]],[11,"new",E,R[1297],9,[[["str"]],[["regex"],[R[2],["regex","error"]],["error"]]]],[11,"is_match",E,R[1298],9,[[["self"]],["bool"]]],[11,"find",E,R[1299],9,[[["self"]],[["match"],[R[24],["match"]]]]],[11,"find_iter",E,R[1300],9,[[["self"]],["matches"]]],[11,R[1302],E,R[1301],9,[[["self"]],[[R[24],[R[1302]]],[R[1302]]]]],[11,R[1303],E,R[1304],9,[[["self"]],[R[1305]]]],[11,"split",E,R[1306],9,[[["self"]],["split"]]],[11,"splitn",E,R[1307],9,[[["self"],["usize"]],["splitn"]]],[11,"replace",E,R[1308],9,[[["replacer"],["self"]],["cow"]]],[11,R[1309],E,R[1310],9,[[["replacer"],["self"]],["cow"]]],[11,"replacen",E,R[1311],9,[[["replacer"],["self"],["usize"]],["cow"]]],[11,R[1312],E,R[1313],9,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,"as_str",E,R[1314],9,[[["self"]],["str"]]],[11,R[1315],E,R[1316],9,[[["self"]],[R[1317]]]],[11,R[1318],E,R[1319],9,[[["self"]],["usize"]]],[11,"get",E,R[1320],10,[[["self"],["usize"]],[["match"],[R[24],["match"]]]]],[11,"name",E,R[1321],10,[[["str"],["self"]],[["match"],[R[24],["match"]]]]],[11,"iter",E,R[1254],10,[[["self"]],[R[1322]]]],[11,"expand",E,R[1323],10,[[["self"],["vec"]]]],[11,"len",E,R[1324],10,[[["self"]],["usize"]]],[11,"new","regex",R[1283],11,[[["i"]],[[R[1284]],[R[2],[R[1284],"error"]],["error"]]]],[11,"is_match",E,R[1285],11,[[["str"],["self"]],["bool"]]],[11,"matches",E,R[1286],11,[[["str"],["self"]],[R[1328]]]],[11,"len",E,R[1287],11,[[["self"]],["usize"]]],[11,R[1288],E,R[1289],12,[[["self"]],["bool"]]],[11,"matched",E,R[1290],12,[[["self"],["usize"]],["bool"]]],[11,"len",E,R[1291],12,[[["self"]],["usize"]]],[11,"iter",E,R[1292],12,[[["self"]],[R[1293]]]],[11,"new",R[1275],R[1283],13,[[["i"]],[[R[1284]],[R[2],[R[1284],"error"]],["error"]]]],[11,"is_match",E,R[1285],13,[[["self"]],["bool"]]],[11,"matches",E,R[1286],13,[[["self"]],[R[1328]]]],[11,"len",E,R[1287],13,[[["self"]],["usize"]]],[11,R[1288],E,R[1289],14,[[["self"]],["bool"]]],[11,"matched",E,R[1290],14,[[["self"],["usize"]],["bool"]]],[11,"len",E,R[1291],14,[[["self"]],["usize"]]],[11,"iter",E,R[1292],14,[[["self"]],[R[1293]]]],[11,"start","regex",R[1294],15,[[["self"]],["usize"]]],[11,"end",E,R[1295],15,[[["self"]],["usize"]]],[11,"as_str",E,R[1296],15,[[["self"]],["str"]]],[11,"new",E,R[1297],16,[[["str"]],[["error"],["regex"],[R[2],["regex","error"]]]]],[11,"is_match",E,R[1298],16,[[["str"],["self"]],["bool"]]],[11,"find",E,R[1299],16,[[["str"],["self"]],[[R[24],["match"]],["match"]]]],[11,"find_iter",E,R[1300],16,[[["self"],["str"]],["matches"]]],[11,R[1302],E,R[1301],16,[[["str"],["self"]],[[R[24],[R[1302]]],[R[1302]]]]],[11,R[1303],E,R[1304],16,[[["self"],["str"]],[R[1305]]]],[11,"split",E,R[1306],16,[[["self"],["str"]],["split"]]],[11,"splitn",E,R[1307],16,[[["self"],["str"],["usize"]],["splitn"]]],[11,"replace",E,R[1308],16,[[["replacer"],["str"],["self"]],[["str"],["cow",["str"]]]]],[11,R[1309],E,R[1310],16,[[["replacer"],["str"],["self"]],[["str"],["cow",["str"]]]]],[11,"replacen",E,R[1311],16,[[["replacer"],["str"],["self"],["usize"]],[["str"],["cow",["str"]]]]],[11,R[1312],E,R[1313],16,[[["str"],["self"]],[[R[24],["usize"]],["usize"]]]],[11,"as_str",E,R[1314],16,[[["self"]],["str"]]],[11,R[1315],E,R[1316],16,[[["self"]],[R[1317]]]],[11,R[1318],E,R[1319],16,[[["self"]],["usize"]]],[11,"get",E,R[1320],17,[[["self"],["usize"]],[[R[24],["match"]],["match"]]]],[11,"name",E,R[1321],17,[[["str"],["self"]],[[R[24],["match"]],["match"]]]],[11,"iter",E,R[1254],17,[[["self"]],[R[1322]]]],[11,"expand",E,R[1323],17,[[[R[34]],["str"],["self"]]]],[11,"len",E,R[1324],17,[[["self"]],["usize"]]],[8,"Replacer",E,R[1325],N,N],[10,R[1326],E,R[1327],18,[[[R[34]],["self"],[R[1302]]]]],[11,R[1279],E,R[1331],18,[[["self"]],[[R[24],["cow"]],["cow",["str"]]]]],[11,"by_ref",E,R[1281],18,[[["self"]],[R[1282]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[30]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[30]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[66],E,E,11,[[["self"]],[T]]],[11,R[67],E,E,11,[[[T],["self"]]]],[11,R[8],E,E,11,[[[U]],[R[2]]]],[11,R[29],E,E,11,[[["self"]],[T]]],[11,R[15],E,E,11,[[["self"]],[R[30]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[],[R[2]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[22],E,E,12,[[],["i"]]],[11,"into",E,E,12,[[],[U]]],[11,R[66],E,E,12,[[["self"]],[T]]],[11,R[67],E,E,12,[[[T],["self"]]]],[11,R[8],E,E,12,[[[U]],[R[2]]]],[11,R[29],E,E,12,[[["self"]],[T]]],[11,R[15],E,E,12,[[["self"]],[R[30]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[],[R[2]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[22],E,E,19,[[],["i"]]],[11,"into",E,E,19,[[],[U]]],[11,R[8],E,E,19,[[[U]],[R[2]]]],[11,R[29],E,E,19,[[["self"]],[T]]],[11,R[15],E,E,19,[[["self"]],[R[30]]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[9],E,E,19,[[],[R[2]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[22],E,E,20,[[],["i"]]],[11,"into",E,E,20,[[],[U]]],[11,R[66],E,E,20,[[["self"]],[T]]],[11,R[67],E,E,20,[[[T],["self"]]]],[11,R[8],E,E,20,[[[U]],[R[2]]]],[11,R[29],E,E,20,[[["self"]],[T]]],[11,R[15],E,E,20,[[["self"]],[R[30]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[],[R[2]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[66],E,E,16,[[["self"]],[T]]],[11,R[67],E,E,16,[[[T],["self"]]]],[11,R[161],E,E,16,[[["self"]],[R[34]]]],[11,R[8],E,E,16,[[[U]],[R[2]]]],[11,R[29],E,E,16,[[["self"]],[T]]],[11,R[15],E,E,16,[[["self"]],[R[30]]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[9],E,E,16,[[],[R[2]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[66],E,E,15,[[["self"]],[T]]],[11,R[67],E,E,15,[[[T],["self"]]]],[11,R[8],E,E,15,[[[U]],[R[2]]]],[11,R[29],E,E,15,[[["self"]],[T]]],[11,R[15],E,E,15,[[["self"]],[R[30]]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[],[R[2]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[8],E,E,17,[[[U]],[R[2]]]],[11,R[29],E,E,17,[[["self"]],[T]]],[11,R[15],E,E,17,[[["self"]],[R[30]]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[9],E,E,17,[[],[R[2]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[22],E,E,21,[[],["i"]]],[11,"into",E,E,21,[[],[U]]],[11,R[8],E,E,21,[[[U]],[R[2]]]],[11,R[29],E,E,21,[[["self"]],[T]]],[11,R[15],E,E,21,[[["self"]],[R[30]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[],[R[2]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[22],E,E,22,[[],["i"]]],[11,"into",E,E,22,[[],[U]]],[11,R[8],E,E,22,[[[U]],[R[2]]]],[11,R[29],E,E,22,[[["self"]],[T]]],[11,R[15],E,E,22,[[["self"]],[R[30]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[],[R[2]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[22],E,E,23,[[],["i"]]],[11,"into",E,E,23,[[],[U]]],[11,R[8],E,E,23,[[[U]],[R[2]]]],[11,R[29],E,E,23,[[["self"]],[T]]],[11,R[15],E,E,23,[[["self"]],[R[30]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[],[R[2]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[22],E,E,24,[[],["i"]]],[11,"into",E,E,24,[[],[U]]],[11,R[8],E,E,24,[[[U]],[R[2]]]],[11,R[29],E,E,24,[[["self"]],[T]]],[11,R[15],E,E,24,[[["self"]],[R[30]]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[],[R[2]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[8],E,E,25,[[[U]],[R[2]]]],[11,R[29],E,E,25,[[["self"]],[T]]],[11,R[15],E,E,25,[[["self"]],[R[30]]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[9],E,E,25,[[],[R[2]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[22],E,E,26,[[],["i"]]],[11,"into",E,E,26,[[],[U]]],[11,R[8],E,E,26,[[[U]],[R[2]]]],[11,R[29],E,E,26,[[["self"]],[T]]],[11,R[15],E,E,26,[[["self"]],[R[30]]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[9],E,E,26,[[],[R[2]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[22],E,E,27,[[],["i"]]],[11,"into",E,E,27,[[],[U]]],[11,R[8],E,E,27,[[[U]],[R[2]]]],[11,R[29],E,E,27,[[["self"]],[T]]],[11,R[15],E,E,27,[[["self"]],[R[30]]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[],[R[2]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[66],E,E,1,[[["self"]],[T]]],[11,R[67],E,E,1,[[[T],["self"]]]],[11,R[161],E,E,1,[[["self"]],[R[34]]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"from",R[1275],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[30]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[30]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[66],E,E,8,[[["self"]],[T]]],[11,R[67],E,E,8,[[[T],["self"]]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[R[30]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[66],E,E,9,[[["self"]],[T]]],[11,R[67],E,E,9,[[[T],["self"]]]],[11,R[161],E,E,9,[[["self"]],[R[34]]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[29],E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"]],[R[30]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[22],E,E,28,[[],["i"]]],[11,"into",E,E,28,[[],[U]]],[11,R[8],E,E,28,[[[U]],[R[2]]]],[11,R[29],E,E,28,[[["self"]],[T]]],[11,R[15],E,E,28,[[["self"]],[R[30]]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[],[R[2]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[22],E,E,29,[[],["i"]]],[11,"into",E,E,29,[[],[U]]],[11,R[8],E,E,29,[[[U]],[R[2]]]],[11,R[29],E,E,29,[[["self"]],[T]]],[11,R[15],E,E,29,[[["self"]],[R[30]]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[],[R[2]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[22],E,E,30,[[],["i"]]],[11,"into",E,E,30,[[],[U]]],[11,R[8],E,E,30,[[[U]],[R[2]]]],[11,R[29],E,E,30,[[["self"]],[T]]],[11,R[15],E,E,30,[[["self"]],[R[30]]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[],[R[2]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[22],E,E,31,[[],["i"]]],[11,"into",E,E,31,[[],[U]]],[11,R[8],E,E,31,[[[U]],[R[2]]]],[11,R[29],E,E,31,[[["self"]],[T]]],[11,R[15],E,E,31,[[["self"]],[R[30]]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[],[R[2]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[22],E,E,32,[[],["i"]]],[11,"into",E,E,32,[[],[U]]],[11,R[8],E,E,32,[[[U]],[R[2]]]],[11,R[29],E,E,32,[[["self"]],[T]]],[11,R[15],E,E,32,[[["self"]],[R[30]]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[],[R[2]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[29],E,E,10,[[["self"]],[T]]],[11,R[15],E,E,10,[[["self"]],[R[30]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[22],E,E,33,[[],["i"]]],[11,"into",E,E,33,[[],[U]]],[11,R[8],E,E,33,[[[U]],[R[2]]]],[11,R[29],E,E,33,[[["self"]],[T]]],[11,R[15],E,E,33,[[["self"]],[R[30]]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[9],E,E,33,[[],[R[2]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[8],E,E,34,[[[U]],[R[2]]]],[11,R[29],E,E,34,[[["self"]],[T]]],[11,R[15],E,E,34,[[["self"]],[R[30]]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[9],E,E,34,[[],[R[2]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[66],E,E,13,[[["self"]],[T]]],[11,R[67],E,E,13,[[[T],["self"]]]],[11,R[8],E,E,13,[[[U]],[R[2]]]],[11,R[29],E,E,13,[[["self"]],[T]]],[11,R[15],E,E,13,[[["self"]],[R[30]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[],[R[2]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[22],E,E,14,[[],["i"]]],[11,"into",E,E,14,[[],[U]]],[11,R[66],E,E,14,[[["self"]],[T]]],[11,R[67],E,E,14,[[[T],["self"]]]],[11,R[8],E,E,14,[[[U]],[R[2]]]],[11,R[29],E,E,14,[[["self"]],[T]]],[11,R[15],E,E,14,[[["self"]],[R[30]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[],[R[2]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[22],E,E,35,[[],["i"]]],[11,"into",E,E,35,[[],[U]]],[11,R[8],E,E,35,[[[U]],[R[2]]]],[11,R[29],E,E,35,[[["self"]],[T]]],[11,R[15],E,E,35,[[["self"]],[R[30]]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[9],E,E,35,[[],[R[2]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[22],E,E,36,[[],["i"]]],[11,"into",E,E,36,[[],[U]]],[11,R[66],E,E,36,[[["self"]],[T]]],[11,R[67],E,E,36,[[[T],["self"]]]],[11,R[8],E,E,36,[[[U]],[R[2]]]],[11,R[29],E,E,36,[[["self"]],[T]]],[11,R[15],E,E,36,[[["self"]],[R[30]]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[9],E,E,36,[[],[R[2]]]],[11,R[1326],E,E,34,[[["self"],[R[1302]],["vec"]]]],[11,R[1279],E,E,34,[[["self"]],[[R[24],["cow"]],["cow"]]]],[11,R[1326],E,E,2,[[["self"],[R[1302]],["vec"]]]],[11,R[1279],E,E,2,[[["self"]],[[R[24],["cow"]],["cow"]]]],[11,R[1326],"regex",E,25,[[[R[34]],["self"],[R[1302]]]]],[11,R[1279],E,E,25,[[["self"]],[[R[24],["cow"]],["cow",["str"]]]]],[11,R[1326],E,E,0,[[[R[34]],["self"],[R[1302]]]]],[11,R[1279],E,E,0,[[["self"]],[[R[24],["cow"]],["cow",["str"]]]]],[11,"eq",E,E,1,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["error"]],["bool"]]],[11,"eq",R[1275],E,8,[[["match"],["self"]],["bool"]]],[11,"ne",E,E,8,[[["match"],["self"]],["bool"]]],[11,"eq","regex",E,15,[[["match"],["self"]],["bool"]]],[11,"ne",E,E,15,[[["match"],["self"]],["bool"]]],[11,R[101],E,E,19,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[101],E,E,20,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[101],R[1275],E,35,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[101],E,E,36,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,"clone","regex",E,1,[[["self"]],["error"]]],[11,"clone",R[1275],E,8,[[["self"]],["match"]]],[11,"clone",E,E,9,[[["self"]],["regex"]]],[11,"clone","regex",E,11,[[["self"]],[R[1284]]]],[11,"clone",E,E,12,[[["self"]],[R[1328]]]],[11,"clone",E,E,20,[[["self"]],[R[1293]]]],[11,"clone",R[1275],E,13,[[["self"]],[R[1284]]]],[11,"clone",E,E,14,[[["self"]],[R[1328]]]],[11,"clone",E,E,36,[[["self"]],[R[1293]]]],[11,"clone","regex",E,15,[[["self"]],["match"]]],[11,"clone",E,E,16,[[["self"]],["regex"]]],[11,"from",E,E,1,[[["error"]],["error"]]],[11,R[22],E,E,12,[[]]],[11,R[22],R[1275],E,14,[[]]],[11,"next",E,E,28,[[["self"]],[["match"],[R[24],["match"]]]]],[11,"next",E,E,29,[[["self"]],[[R[24],[R[1302]]],[R[1302]]]]],[11,"next",E,E,30,[[["self"]],[R[24]]]],[11,"next",E,E,31,[[["self"]],[R[24]]]],[11,"next",E,E,32,[[["self"]],[[R[24],[R[24]]],[R[24],["str"]]]]],[11,R[104],E,E,32,[[["self"]]]],[11,"next",E,E,33,[[["self"]],[[R[24],["match"]],[R[24],[R[24]]]]]],[11,"next","regex",E,19,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,"next",E,E,20,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,"next",R[1275],E,35,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,"next",E,E,36,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,"next","regex",E,21,[[["self"]],[[R[24],[R[24]]],[R[24],["str"]]]]],[11,R[104],E,E,21,[[["self"]]]],[11,"next",E,E,26,[[["self"]],[[R[24],["str"]],["str"]]]],[11,"next",E,E,27,[[["self"]],[[R[24],["str"]],["str"]]]],[11,"next",E,E,24,[[["self"]],[[R[24],[R[24]]],[R[24],["match"]]]]],[11,"next",E,E,23,[[["self"]],[[R[24],[R[1302]]],[R[1302]]]]],[11,"next",E,E,22,[[["self"]],[[R[24],["match"]],["match"]]]],[11,"fmt",E,E,1,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[1275],E,8,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,R[1329],9,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,10,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,34,[[[R[12]],["self"]],[R[2]]]],[11,"fmt","regex",E,12,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,11,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[1275],E,14,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,13,[[[R[12]],["self"]],[R[2]]]],[11,"fmt","regex",E,15,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,R[1329],16,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,17,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,25,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,1,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[1275],R[1329],9,[[[R[12]],["self"]],[R[2]]]],[11,"fmt","regex",R[1329],16,[[[R[12]],["self"]],[R[2]]]],[11,"index",R[1275],E,10,[[["self"],["usize"]]]],[11,"index",E,E,10,[[["str"],["self"]]]],[11,"index","regex",E,17,[[["self"],["usize"]],["str"]]],[11,"index",E,E,17,[[["str"],["self"]],["str"]]],[11,"from_str",R[1275],R[1330],9,[[["str"]],[["regex"],[R[2],["regex","error"]],["error"]]]],[11,"from_str","regex",R[1330],16,[[["str"]],[["error"],["regex"],[R[2],["regex","error"]]]]],[11,R[485],E,E,1,[[["self"]],["str"]]],[11,"cause",E,E,1,[[["self"]],[[R[24],["error"]],["error"]]]],[11,R[1279],E,R[1331],18,[[["self"]],[[R[24],["cow"]],["cow",["str"]]]]],[11,"by_ref",E,R[1281],18,[[["self"]],[R[1282]]]]],"p":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,R[1241]],[3,R[1241]],[3,R[1243]],[3,R[1243]],[3,"Match"],[3,"Regex"],[3,"Captures"],[3,"RegexSet"],[3,R[1332]],[3,"RegexSet"],[3,R[1332]],[3,"Match"],[3,"Regex"],[3,"Captures"],[8,"Replacer"],[3,R[1259]],[3,R[1261]],[3,R[1251]],[3,"Matches"],[3,R[1247]],[3,R[1253]],[3,R[1255]],[3,"Split"],[3,"SplitN"],[3,"Matches"],[3,R[1247]],[3,"Split"],[3,"SplitN"],[3,R[1251]],[3,R[1253]],[3,R[1255]],[3,R[1259]],[3,R[1261]]]};
searchIndex["strsim"]={"doc":"This library implements string similarity metrics.","i":[[4,R[126],"strsim",E,N,N],[13,"DifferentLengthArgs",E,E,0,N],[5,"hamming",E,"Calculates the number of positions in the two strings…",N,[[["str"]],["hammingresult"]]],[5,"jaro",E,"Calculates the Jaro similarity between two strings. The…",N,[[["str"]],["f64"]]],[5,"jaro_winkler",E,"Like Jaro but gives a boost to strings that have a common…",N,[[["str"]],["f64"]]],[5,"levenshtein",E,"Calculates the minimum number of insertions, deletions,…",N,[[["str"]],["usize"]]],[5,"normalized_levenshtein",E,"Calculates a normalized score of the Levenshtein algorithm…",N,[[["str"]],["f64"]]],[5,"osa_distance",E,"Like Levenshtein but allows for adjacent transpositions.…",N,[[["str"]],["usize"]]],[5,"damerau_levenshtein",E,"Like optimal string alignment, but substrings can be…",N,[[["str"]],["usize"]]],[5,"normalized_damerau_levenshtein",E,"Calculates a normalized score of the Damerau–Levenshtein…",N,[[["str"]],["f64"]]],[6,"HammingResult",E,E,N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"eq",E,E,0,[[["strsimerror"],["self"]],["bool"]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[R[2]]]]],"p":[[4,R[126]]]};
searchIndex["textwrap"]={"doc":"`textwrap` provides functions for word wrapping and…","i":[[3,R[344],"textwrap","Simple and default way to split words: splitting on…",N,N],[3,R[345],E,"Use this as a [`Wrapper.splitter`] to avoid any kind of…",N,N],[3,"Wrapper",E,"A Wrapper holds settings for wrapping and filling text.…",N,N],[12,"width",E,"The width in columns at which the text will be wrapped.",0,N],[12,R[336],E,"Indentation used for the first line of output.",0,N],[12,R[337],E,"Indentation used for subsequent lines of output.",0,N],[12,R[338],E,"Allow long words to be broken if they cannot fit on a…",0,N],[12,"splitter",E,"The method for splitting words. If the `hyphenation`…",0,N],[3,R[346],E,"An iterator over the lines of the input string which owns…",N,N],[3,"WrapIter",E,"An iterator over the lines of the input string which…",N,N],[5,"dedent",E,"Removes common leading whitespace from each line.",N,[[["str"]],[R[34]]]],[5,"indent",E,"Add prefix to each non-empty line.",N,[[["str"]],[R[34]]]],[5,"fill",E,"Fill a line of text at `width` characters. Strings are…",N,[[["str"],["usize"]],[R[34]]]],[5,"wrap",E,"Wrap a line of text at `width` characters. Strings are…",N,[[["str"],["usize"]],[["vec",["cow"]],["cow",["str"]]]]],[5,R[339],E,"Lazily wrap a line of text at `width` characters. Strings…",N,[[["str"],["usize"]],[[R[341],[R[335]]],[R[335]]]]],[8,R[343],E,"An interface for splitting words.",N,N],[10,"split",E,"Return all possible splits of word. Each split is a triple…",1,[[["self"],["str"]],["vec"]]],[11,"new",E,"Create a new Wrapper for wrapping at the specified width.…",0,[[["usize"]],[[R[342],[R[335]]],[R[335]]]]],[11,"with_splitter",E,"Use the given [`WordSplitter`] to create a new Wrapper for…",0,[[["s"],["usize"]],[R[342]]]],[11,R[336],E,"Change [`self.initial_indent`]. The initial indentation is…",0,[[["str"]],[R[342]]]],[11,R[337],E,"Change [`self.subsequent_indent`]. The subsequent…",0,[[["str"]],[R[342]]]],[11,R[338],E,"Change [`self.break_words`]. This controls if words longer…",0,[[["bool"]],[R[342]]]],[11,"fill",E,"Fill a line of text at `self.width` characters. Strings…",0,[[["str"],["self"]],[R[34]]]],[11,"wrap",E,"Wrap a line of text at `self.width` characters. Strings…",0,[[["str"],["self"]],[["cow",["str"]],["vec",["cow"]]]]],[11,R[339],E,R[340],0,[[["str"],["self"]],["wrapiter"]]],[11,"into_wrap_iter",E,R[340],0,[[["str"]],[R[341]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[66],E,E,2,[[["self"]],[T]]],[11,R[67],E,E,2,[[[T],["self"]]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[66],E,E,3,[[["self"]],[T]]],[11,R[67],E,E,3,[[[T],["self"]]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[66],E,E,0,[[["self"]],[T]]],[11,R[67],E,E,0,[[[T],["self"]]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[22],E,E,4,[[],["i"]]],[11,"into",E,E,4,[[],[U]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[30]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[22],E,E,5,[[],["i"]]],[11,"into",E,E,5,[[],[U]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[30]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,"split",E,E,3,[[["self"],["str"]],["vec"]]],[11,"split",E,E,2,[[["self"],["str"]],["vec"]]],[11,"clone",E,E,3,[[["self"]],["nohyphenation"]]],[11,"clone",E,E,2,[[["self"]],[R[335]]]],[11,"clone",E,E,0,[[["self"]],[R[342]]]],[11,"next",E,E,4,[[["self"]],[["cow",["str"]],[R[24],["cow"]]]]],[11,"next",E,E,5,[[["self"]],[["cow",["str"]],[R[24],["cow"]]]]],[11,"fmt",E,E,3,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,2,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,4,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,5,[[[R[12]],["self"]],[R[2]]]]],"p":[[3,"Wrapper"],[8,R[343]],[3,R[344]],[3,R[345]],[3,R[346]],[3,"WrapIter"]]};
searchIndex["time"]={"doc":"Simple time handling.","i":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision. This…",N,N],[3,R[811],E,"Represents error when converting `Duration` to/from a…",N,N],[3,"Timespec",E,"A record specifying a time value in seconds and…",N,N],[12,"sec",E,E,0,N],[12,"nsec",E,E,0,N],[3,R[809],E,"An opaque structure representing a moment in time.",N,N],[3,R[810],E,"A structure representing a moment in time.",N,N],[3,"Tm",E,"Holds a calendar date and time broken down into its…",N,N],[12,"tm_sec",E,"Seconds after the minute - [0, 60]",1,N],[12,"tm_min",E,"Minutes after the hour - [0, 59]",1,N],[12,"tm_hour",E,"Hours after midnight - [0, 23]",1,N],[12,"tm_mday",E,"Day of the month - [1, 31]",1,N],[12,"tm_mon",E,"Months since January - [0, 11]",1,N],[12,"tm_year",E,"Years since 1900",1,N],[12,"tm_wday",E,"Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6…",1,N],[12,"tm_yday",E,"Days since January 1 - [0, 365]",1,N],[12,"tm_isdst",E,"Daylight Saving Time flag.",1,N],[12,"tm_utcoff",E,"Identifies the time zone that was used to compute this…",1,N],[12,"tm_nsec",E,"Nanoseconds after the second - [0, 109 - 1]",1,N],[3,"TmFmt",E,"A wrapper around a `Tm` and format string that implements…",N,N],[4,R[808],E,E,N,N],[13,"InvalidSecond",E,E,2,N],[13,"InvalidMinute",E,E,2,N],[13,"InvalidHour",E,E,2,N],[13,"InvalidDay",E,E,2,N],[13,"InvalidMonth",E,E,2,N],[13,"InvalidYear",E,E,2,N],[13,"InvalidDayOfWeek",E,E,2,N],[13,"InvalidDayOfMonth",E,E,2,N],[13,"InvalidDayOfYear",E,E,2,N],[13,"InvalidZoneOffset",E,E,2,N],[13,"InvalidTime",E,E,2,N],[13,"InvalidSecondsSinceEpoch",E,E,2,N],[13,"MissingFormatConverter",E,E,2,N],[13,"InvalidFormatSpecifier",E,E,2,N],[13,"UnexpectedCharacter",E,E,2,N],[5,"strptime",E,"Parses the time from the string according to the format…",N,[[["str"]],[[R[798]],["tm"],[R[2],["tm",R[798]]]]]],[5,"get_time",E,"Returns the current time as a `timespec` containing the…",N,[[],[R[621]]]],[5,"precise_time_ns",E,R[799],N,[[],["u64"]]],[5,"precise_time_s",E,R[799],N,[[],["f64"]]],[5,"tzset",E,E,N,[[]]],[5,"empty_tm",E,E,N,[[],["tm"]]],[5,"at_utc",E,"Returns the specified time in UTC",N,[[[R[621]]],["tm"]]],[5,"now_utc",E,"Returns the current time in UTC",N,[[],["tm"]]],[5,"at",E,"Returns the specified time in the local timezone",N,[[[R[621]]],["tm"]]],[5,"now",E,"Returns the current time in the local timezone",N,[[],["tm"]]],[5,"strftime",E,R[805],N,[[["str"],["tm"]],[[R[34]],[R[798]],[R[2],[R[34],R[798]]]]]],[11,"weeks",E,"Makes a new `Duration` with given number of weeks.…",3,[[["i64"]],[R[800]]]],[11,"days",E,"Makes a new `Duration` with given number of days.…",3,[[["i64"]],[R[800]]]],[11,"hours",E,"Makes a new `Duration` with given number of hours.…",3,[[["i64"]],[R[800]]]],[11,"minutes",E,"Makes a new `Duration` with given number of minutes.…",3,[[["i64"]],[R[800]]]],[11,"seconds",E,"Makes a new `Duration` with given number of seconds.…",3,[[["i64"]],[R[800]]]],[11,"milliseconds",E,"Makes a new `Duration` with given number of milliseconds.",3,[[["i64"]],[R[800]]]],[11,"microseconds",E,"Makes a new `Duration` with given number of microseconds.",3,[[["i64"]],[R[800]]]],[11,"nanoseconds",E,"Makes a new `Duration` with given number of nanoseconds.",3,[[["i64"]],[R[800]]]],[11,"span",E,"Runs a closure, returning the duration of time it took to…",3,[[["f"]],[R[800]]]],[11,"num_weeks",E,"Returns the total number of whole weeks in the duration.",3,[[["self"]],["i64"]]],[11,"num_days",E,"Returns the total number of whole days in the duration.",3,[[["self"]],["i64"]]],[11,"num_hours",E,"Returns the total number of whole hours in the duration.",3,[[["self"]],["i64"]]],[11,"num_minutes",E,"Returns the total number of whole minutes in the duration.",3,[[["self"]],["i64"]]],[11,"num_seconds",E,"Returns the total number of whole seconds in the duration.",3,[[["self"]],["i64"]]],[11,"num_milliseconds",E,"Returns the total number of whole milliseconds in the…",3,[[["self"]],["i64"]]],[11,"num_microseconds",E,"Returns the total number of whole microseconds in the…",3,[[["self"]],[[R[24],["i64"]],["i64"]]]],[11,"num_nanoseconds",E,"Returns the total number of whole nanoseconds in the…",3,[[["self"]],[[R[24],["i64"]],["i64"]]]],[11,R[960],E,"Add two durations, returning `None` if overflow occurred.",3,[[[R[800]],["self"]],[[R[800]],[R[24],[R[800]]]]]],[11,R[961],E,"Subtract two durations, returning `None` if overflow…",3,[[[R[800]],["self"]],[[R[800]],[R[24],[R[800]]]]]],[11,R[866],E,"The minimum possible `Duration`: `i64::MIN` milliseconds.",3,[[],[R[800]]]],[11,R[867],E,"The maximum possible `Duration`: `i64::MAX` milliseconds.",3,[[],[R[800]]]],[11,"zero",E,"A duration where the stored seconds and nanoseconds are…",3,[[],[R[800]]]],[11,"is_zero",E,"Returns `true` if the duration equals `Duration::zero()`.",3,[[["self"]],["bool"]]],[11,"from_std",E,"Creates a `time::Duration` object from `std::time::Duration`",3,[[[R[802]]],[[R[2],[R[800],R[801]]],[R[801]],[R[800]]]]],[11,"to_std",E,"Creates a `std::time::Duration` object from `time::Duration`",3,[[["self"]],[[R[2],[R[802],R[801]]],[R[801]],[R[802]]]]],[11,"new",E,E,0,[[["i32"],["i64"]],[R[621]]]],[11,"now",E,"Returns a `PreciseTime` representing the current moment in…",4,[[],[R[803]]]],[11,"to",E,"Returns a `Duration` representing the span of time from…",4,[[[R[803]],["self"]],[R[800]]]],[11,"now",E,"Returns a `SteadyTime` representing the current moment in…",5,[[],[R[806]]]],[11,"to_timespec",E,"Convert time to the seconds from January 1, 1970",1,[[["self"]],[R[621]]]],[11,"to_local",E,"Convert time to the local timezone",1,[[["self"]],["tm"]]],[11,"to_utc",E,"Convert time to the UTC",1,[[["self"]],["tm"]]],[11,"ctime",E,R[804],1,[[["self"]],["tmfmt"]]],[11,"asctime",E,R[804],1,[[["self"]],["tmfmt"]]],[11,"strftime",E,R[805],1,[[["str"],["self"]],[[R[798]],[R[2],["tmfmt",R[798]]],["tmfmt"]]]],[11,"rfc822",E,"Returns a TmFmt that outputs according to RFC 822.",1,[[["self"]],["tmfmt"]]],[11,"rfc822z",E,"Returns a TmFmt that outputs according to RFC 822 with…",1,[[["self"]],["tmfmt"]]],[11,"rfc3339",E,"Returns a TmFmt that outputs according to RFC 3339. RFC…",1,[[["self"]],["tmfmt"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[66],E,E,3,[[["self"]],[T]]],[11,R[67],E,E,3,[[[T],["self"]]]],[11,R[161],E,E,3,[[["self"]],[R[34]]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[66],E,E,6,[[["self"]],[T]]],[11,R[67],E,E,6,[[[T],["self"]]]],[11,R[161],E,E,6,[[["self"]],[R[34]]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[30]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[66],E,E,0,[[["self"]],[T]]],[11,R[67],E,E,0,[[[T],["self"]]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[66],E,E,4,[[["self"]],[T]]],[11,R[67],E,E,4,[[[T],["self"]]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[30]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[66],E,E,5,[[["self"]],[T]]],[11,R[67],E,E,5,[[[T],["self"]]]],[11,R[161],E,E,5,[[["self"]],[R[34]]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[30]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[66],E,E,1,[[["self"]],[T]]],[11,R[67],E,E,1,[[[T],["self"]]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[161],E,E,7,[[["self"]],[R[34]]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[30]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[66],E,E,2,[[["self"]],[T]]],[11,R[67],E,E,2,[[[T],["self"]]]],[11,R[161],E,E,2,[[["self"]],[R[34]]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"eq",E,E,3,[[[R[800]],["self"]],["bool"]]],[11,"ne",E,E,3,[[[R[800]],["self"]],["bool"]]],[11,"eq",E,E,6,[[[R[801]],["self"]],["bool"]]],[11,"ne",E,E,6,[[[R[801]],["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[621]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[621]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[806]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[806]]],["bool"]]],[11,"eq",E,E,1,[[["tm"],["self"]],["bool"]]],[11,"ne",E,E,1,[[["tm"],["self"]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[798]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[798]]],["bool"]]],[11,"clone",E,E,3,[[["self"]],[R[800]]]],[11,"clone",E,E,6,[[["self"]],[R[801]]]],[11,"clone",E,E,0,[[["self"]],[R[621]]]],[11,"clone",E,E,4,[[["self"]],[R[803]]]],[11,"clone",E,E,5,[[["self"]],[R[806]]]],[11,"clone",E,E,1,[[["self"]],["tm"]]],[11,"clone",E,E,2,[[["self"]],[R[798]]]],[11,"cmp",E,E,3,[[[R[800]],["self"]],[R[23]]]],[11,"cmp",E,E,0,[[["self"],[R[621]]],[R[23]]]],[11,"cmp",E,E,5,[[["self"],[R[806]]],[R[23]]]],[11,"cmp",E,E,1,[[["tm"],["self"]],[R[23]]]],[11,R[62],E,E,3,[[[R[800]],["self"]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,3,[[[R[800]],["self"]],["bool"]]],[11,"le",E,E,3,[[[R[800]],["self"]],["bool"]]],[11,"gt",E,E,3,[[[R[800]],["self"]],["bool"]]],[11,"ge",E,E,3,[[[R[800]],["self"]],["bool"]]],[11,R[62],E,E,0,[[["self"],[R[621]]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,0,[[["self"],[R[621]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[621]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[621]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[621]]],["bool"]]],[11,R[62],E,E,5,[[["self"],[R[806]]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,5,[[["self"],[R[806]]],["bool"]]],[11,"le",E,E,5,[[["self"],[R[806]]],["bool"]]],[11,"gt",E,E,5,[[["self"],[R[806]]],["bool"]]],[11,"ge",E,E,5,[[["self"],[R[806]]],["bool"]]],[11,R[62],E,E,1,[[["tm"],["self"]],[[R[24],[R[23]]],[R[23]]]]],[11,"fmt",E,E,3,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,6,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,5,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,1,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,2,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,7,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,7,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,3,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,6,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,5,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,2,[[[R[12]],["self"]],[R[2]]]],[11,"div",E,E,3,[[["i32"]],[R[800]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"add",E,E,3,[[[R[800]]],[R[800]]]],[11,"add",E,E,0,[[[R[800]]],[R[621]]]],[11,"add",E,E,5,[[[R[800]]],[R[806]]]],[11,"add",E,R[807],1,[[[R[800]]],["tm"]]],[11,"sub",E,E,3,[[[R[800]]],[R[800]]]],[11,"sub",E,E,0,[[[R[800]]],[R[621]]]],[11,"sub",E,E,0,[[[R[621]]],[R[800]]]],[11,"sub",E,E,5,[[[R[806]]],[R[800]]]],[11,"sub",E,E,5,[[[R[800]]],[R[806]]]],[11,"sub",E,R[807],1,[[[R[800]]],["tm"]]],[11,"sub",E,E,1,[[["tm"]],[R[800]]]],[11,"mul",E,E,3,[[["i32"]],[R[800]]]],[11,"neg",E,E,3,[[],[R[800]]]],[11,R[485],E,E,6,[[["self"]],["str"]]],[11,R[485],E,E,2,[[["self"]],["str"]]]],"p":[[3,"Timespec"],[3,"Tm"],[4,R[808]],[3,"Duration"],[3,R[809]],[3,R[810]],[3,R[811]],[3,"TmFmt"]]};
searchIndex["vec_map"]={"doc":"A simple map based on a vector for small integer keys.…","i":[[3,"VecMap","vec_map","A map optimized for small integer keys.",N,N],[3,R[132],E,"A vacant Entry.",N,N],[3,R[133],E,"An occupied Entry.",N,N],[3,"Iter",E,"An iterator over the key-value pairs of a map.",N,N],[3,R[359],E,"An iterator over the key-value pairs of a map, with the…",N,N],[3,"Keys",E,"An iterator over the keys of a map.",N,N],[3,"Values",E,R[127],N,N],[3,R[134],E,R[127],N,N],[3,R[184],E,"A consuming iterator over the key-value pairs of a map.",N,N],[3,"Drain",E,"A draining iterator over the key-value pairs of a map.",N,N],[4,"Entry",E,"A view into a single entry in a map, which may either be…",N,N],[13,"Vacant",E,"A vacant Entry",0,N],[13,"Occupied",E,"An occupied Entry",0,N],[11,"new",E,"Creates an empty `VecMap`.",1,[[],["self"]]],[11,"with_capacity",E,"Creates an empty `VecMap` with space for at least…",1,[[["usize"]],["self"]]],[11,R[664],E,"Returns the number of elements the `VecMap` can hold…",1,[[["self"]],["usize"]]],[11,"reserve_len",E,"Reserves capacity for the given `VecMap` to contain `len`…",1,[[["self"],["usize"]]]],[11,"reserve_len_exact",E,"Reserves the minimum capacity for the given `VecMap` to…",1,[[["self"],["usize"]]]],[11,"shrink_to_fit",E,"Trims the `VecMap` of any excess capacity.",1,[[["self"]]]],[11,"keys",E,"Returns an iterator visiting all keys in ascending order…",1,[[["self"]],["keys"]]],[11,"values",E,R[128],1,[[["self"]],["values"]]],[11,"values_mut",E,R[128],1,[[["self"]],["valuesmut"]]],[11,"iter",E,R[129],1,[[["self"]],["iter"]]],[11,R[175],E,R[129],1,[[["self"]],["itermut"]]],[11,"append",E,"Moves all elements from `other` into the map while…",1,[[["self"]]]],[11,R[356],E,"Splits the collection into two at the given key.",1,[[["self"],["usize"]],["self"]]],[11,"drain",E,R[129],1,[[["self"]],["drain"]]],[11,"len",E,"Returns the number of elements in the map.",1,[[["self"]],["usize"]]],[11,R[404],E,"Returns true if the map contains no elements.",1,[[["self"]],["bool"]]],[11,"clear",E,"Clears the map, removing all key-value pairs.",1,[[["self"]]]],[11,"get",E,"Returns a reference to the value corresponding to the key.",1,[[["self"],["usize"]],[[R[24]],["v"]]]],[11,"contains_key",E,"Returns true if the map contains a value for the specified…",1,[[["self"],["usize"]],["bool"]]],[11,R[221],E,"Returns a mutable reference to the value corresponding to…",1,[[["self"],["usize"]],[["v"],[R[24]]]]],[11,"insert",E,"Inserts a key-value pair into the map. If the key already…",1,[[["self"],["v"],["usize"]],[R[24]]]],[11,"remove",E,"Removes a key from the map, returning the value at the key…",1,[[["self"],["usize"]],[R[24]]]],[11,"entry",E,"Gets the given key's corresponding entry in the map for…",1,[[["self"],["usize"]],["entry"]]],[11,"retain",E,R[130],1,[[["self"],["f"]]]],[11,"or_insert",E,"Ensures a value is in the entry by inserting the default…",0,[[["v"]],["v"]]],[11,"or_insert_with",E,"Ensures a value is in the entry by inserting the result of…",0,[[["fnonce"]],["v"]]],[11,"insert",E,"Sets the value of the entry with the VacantEntry's key,…",2,[[["v"]],["v"]]],[11,"get",E,"Gets a reference to the value in the entry.",3,[[["self"]],["v"]]],[11,R[221],E,"Gets a mutable reference to the value in the entry.",3,[[["self"]],["v"]]],[11,"into_mut",E,"Converts the entry into a mutable reference to its value.",3,[[],["v"]]],[11,"insert",E,"Sets the value of the entry with the OccupiedEntry's key,…",3,[[["self"],["v"]],["v"]]],[11,"remove",E,"Takes the value of the entry out of the map, and returns it.",3,[[],["v"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[22],E,E,1,[[],["i"]]],[11,"into",E,E,1,[[],[U]]],[11,R[66],E,E,1,[[["self"]],[T]]],[11,R[67],E,E,1,[[[T],["self"]]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[22],E,E,4,[[],["i"]]],[11,"into",E,E,4,[[],[U]]],[11,R[66],E,E,4,[[["self"]],[T]]],[11,R[67],E,E,4,[[[T],["self"]]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[30]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[22],E,E,5,[[],["i"]]],[11,"into",E,E,5,[[],[U]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[30]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[22],E,E,6,[[],["i"]]],[11,"into",E,E,6,[[],[U]]],[11,R[66],E,E,6,[[["self"]],[T]]],[11,R[67],E,E,6,[[[T],["self"]]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[30]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[22],E,E,7,[[],["i"]]],[11,"into",E,E,7,[[],[U]]],[11,R[66],E,E,7,[[["self"]],[T]]],[11,R[67],E,E,7,[[[T],["self"]]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[30]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[22],E,E,8,[[],["i"]]],[11,"into",E,E,8,[[],[U]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[R[30]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[22],E,E,9,[[],["i"]]],[11,"into",E,E,9,[[],[U]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[29],E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"]],[R[30]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[22],E,E,10,[[],["i"]]],[11,"into",E,E,10,[[],[U]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[29],E,E,10,[[["self"]],[T]]],[11,R[15],E,E,10,[[["self"]],[R[30]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"eq",E,E,1,[[["self"]],["bool"]]],[11,R[101],E,E,4,[[["self"]],[R[24]]]],[11,R[101],E,E,5,[[["self"]],[R[24]]]],[11,R[101],E,E,10,[[["self"]],[R[24]]]],[11,R[101],E,E,6,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[101],E,E,7,[[["self"]],[[R[24]],["v"]]]],[11,R[101],E,E,8,[[["self"]],[["v"],[R[24]]]]],[11,R[101],E,E,9,[[["self"]],[R[24]]]],[11,"clone",E,E,1,[[["self"]],["self"]]],[11,R[660],E,E,1,[[["self"],["self"]]]],[11,"clone",E,E,4,[[["self"]],["iter"]]],[11,"clone",E,E,6,[[["self"]],["keys"]]],[11,"clone",E,E,7,[[["self"]],["values"]]],[11,"cmp",E,E,1,[[["self"]],[R[23]]]],[11,R[22],E,R[129],1,[[],[R[358]]]],[11,"extend",E,E,1,[[["self"],[R[131]]]]],[11,"extend",E,E,1,[[[R[131]],["self"]]]],[11,R[62],E,E,1,[[["self"]],[[R[24],[R[23]]],[R[23]]]]],[11,"next",E,E,4,[[["self"]],[R[24]]]],[11,R[104],E,E,4,[[["self"]]]],[11,"next",E,E,5,[[["self"]],[R[24]]]],[11,R[104],E,E,5,[[["self"]]]],[11,"next",E,E,10,[[["self"]],[R[24]]]],[11,R[104],E,E,10,[[["self"]]]],[11,"next",E,E,6,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[104],E,E,6,[[["self"]]]],[11,"next",E,E,7,[[["self"]],[[R[24]],["v"]]]],[11,R[104],E,E,7,[[["self"]]]],[11,"next",E,E,8,[[["self"]],[["v"],[R[24]]]]],[11,R[104],E,E,8,[[["self"]]]],[11,"next",E,E,9,[[["self"]],[R[24]]]],[11,R[104],E,E,9,[[["self"]]]],[11,R[222],E,E,1,[[],["self"]]],[11,"fmt",E,E,1,[[[R[12]],["self"]],[R[2]]]],[11,"hash",E,E,1,[[["h"],["self"]]]],[11,"index",E,E,1,[[["self"],["usize"]],["v"]]],[11,"index",E,E,1,[[["self"],["usize"]],["v"]]],[11,R[106],E,E,1,[[["self"],["usize"]],["v"]]],[11,R[106],E,E,1,[[["self"],["usize"]],["v"]]],[11,R[357],E,E,1,[[[R[131]]],["self"]]]],"p":[[4,"Entry"],[3,"VecMap"],[3,R[132]],[3,R[133]],[3,"Iter"],[3,R[359]],[3,"Keys"],[3,"Values"],[3,R[134]],[3,R[184]],[3,"Drain"]]};
searchIndex["void"]={"doc":"Void","i":[[4,"Void","void","The empty type for cases which can't occur.",N,N],[5,R[347],E,"A safe version of `intrinsincs::unreachable`.",N,[[["void"]]]],[8,R[60],E,"Extensions to `Result<T, Void>`",N,N],[10,"void_unwrap",E,"Get the value out of a wrapper.",0,[[],[T]]],[8,R[61],E,"Extensions to `Result<Void, E>`",N,N],[10,"void_unwrap_err",E,"Get the error out of a wrapper.",1,[[],["e"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"into",E,E,2,[[],[U]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,"fmt",E,E,2,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[12]]],[R[2]]]],[11,"eq",E,E,2,[[[T],["self"]],["bool"]]],[11,R[62],E,E,2,[[[T],["self"]],[[R[23]],[R[24],[R[23]]]]]],[11,"clone",E,E,2,[[["self"]],["void"]]]],"p":[[8,R[60]],[8,R[61]],[4,"Void"]]};
searchIndex[R[0]]={"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,R[0],R[0],"The main macro provided by this crate. See crate…",N,N]],"p":[]};
searchIndex[R[1231]]={"doc":"Integer trait and functions.","i":[[3,R[1237],R[1231],"Greatest common divisor and Bézout coefficients",N,N],[12,"gcd",E,E,0,N],[12,"x",E,E,0,N],[12,"y",E,E,0,N],[3,R[1238],E,"An iterator over binomial coefficients.",N,N],[5,"cbrt",E,R[1234],N,[[["roots"]],["roots"]]],[5,"nth_root",E,R[1232],N,[[["u32"],["roots"]],["roots"]]],[5,"sqrt",E,R[1233],N,[[["roots"]],["roots"]]],[5,"div_rem",E,"Simultaneous integer division and modulus",N,[[["integer"]]]],[5,"div_floor",E,"Floored integer division",N,[[["integer"]],["integer"]]],[5,"mod_floor",E,"Floored integer modulus",N,[[["integer"]],["integer"]]],[5,R[1235],E,"Simultaneous floored integer division and modulus",N,[[["integer"]]]],[5,"div_ceil",E,"Ceiled integer division",N,[[["integer"]],["integer"]]],[5,"gcd",E,"Calculates the Greatest Common Divisor (GCD) of the number…",N,[[["integer"]],["integer"]]],[5,"lcm",E,"Calculates the Lowest Common Multiple (LCM) of the number…",N,[[["integer"]],["integer"]]],[5,"gcd_lcm",E,"Calculates the Greatest Common Divisor (GCD) and Lowest…",N,[[["integer"]]]],[5,"binomial",E,"Calculate the binomial coefficient.",N,[[["integer"],["clone"]],[["integer"],["clone"]]]],[5,"multinomial",E,"Calculate the multinomial coefficient.",N,[[],[["integer"],["clone"]]]],[8,"Roots",E,"Provides methods to compute an integer's square root, cube…",N,N],[10,"nth_root",E,R[1232],1,[[["u32"],["self"]],["self"]]],[11,"sqrt",E,R[1233],1,[[["self"]],["self"]]],[11,"cbrt",E,R[1234],1,[[["self"]],["self"]]],[8,"Integer",E,E,N,N],[10,"div_floor",E,"Floored integer division.",2,[[["self"]],["self"]]],[10,"mod_floor",E,"Floored integer modulo, satisfying:",2,[[["self"]],["self"]]],[11,"div_ceil",E,"Ceiled integer division.",2,[[["self"]],["self"]]],[10,"gcd",E,"Greatest Common Divisor (GCD).",2,[[["self"]],["self"]]],[10,"lcm",E,"Lowest Common Multiple (LCM).",2,[[["self"]],["self"]]],[11,"gcd_lcm",E,"Greatest Common Divisor (GCD) and Lowest Common Multiple…",2,[[["self"]]]],[11,"extended_gcd",E,"Greatest common divisor and Bézout coefficients.",2,[[["self"]],[R[1236]]]],[11,"extended_gcd_lcm",E,"Greatest common divisor, least common multiple, and Bézout…",2,[[["self"]]]],[10,"divides",E,"Deprecated, use `is_multiple_of` instead.",2,[[["self"]],["bool"]]],[10,"is_multiple_of",E,"Returns `true` if `self` is a multiple of `other`.",2,[[["self"]],["bool"]]],[10,"is_even",E,"Returns `true` if the number is even.",2,[[["self"]],["bool"]]],[10,"is_odd",E,"Returns `true` if the number is odd.",2,[[["self"]],["bool"]]],[10,"div_rem",E,"Simultaneous truncated integer division and modulus.…",2,[[["self"]]]],[11,R[1235],E,"Simultaneous floored integer division and modulus. Returns…",2,[[["self"]]]],[11,"next_multiple_of",E,"Rounds up to nearest multiple of argument.",2,[[["self"]],["self"]]],[11,"prev_multiple_of",E,"Rounds down to nearest multiple of argument.",2,[[["self"]],["self"]]],[11,"new",E,"For a given n, iterate over all binomial coefficients…",3,[[[T]],["iterbinomial"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[66],E,E,0,[[["self"]],[T]]],[11,R[67],E,E,0,[[[T],["self"]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[22],E,E,3,[[],["i"]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"into",E,E,3,[[],[U]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,"fmt",E,E,0,[[["self"],[R[12]]],[R[2]]]],[11,"eq",E,E,0,[[["self"],[R[1236]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[1236]]],["bool"]]],[11,"next",E,E,3,[[["self"]],[R[24]]]],[11,"clone",E,E,0,[[["self"]],[R[1236]]]],[11,"sqrt",E,R[1233],1,[[["self"]],["self"]]],[11,"cbrt",E,R[1234],1,[[["self"]],["self"]]]],"p":[[3,R[1237]],[8,"Roots"],[8,"Integer"],[3,R[1238]]]};
searchIndex[R[1239]]={"doc":"A concurrent work-stealing deque.","i":[[3,"Worker",R[1239],"The worker side of a deque.",N,N],[3,"Stealer",E,"The stealer side of a deque.",N,N],[4,"Pop",E,"Possible outcomes of a pop operation.",N,N],[13,"Empty",E,"The deque was empty at the time of popping.",0,N],[13,"Data",E,"Some data has been successfully popped.",0,N],[13,"Retry",E,"Lost the race for popping data to another concurrent steal…",0,N],[4,"Steal",E,"Possible outcomes of a steal operation.",N,N],[13,"Empty",E,"The deque was empty at the time of stealing.",1,N],[13,"Data",E,"Some data has been successfully stolen.",1,N],[13,"Retry",E,"Lost the race for stealing data to another concurrent…",1,N],[5,"fifo",E,"Creates a work-stealing deque with the first-in first-out…",N,[[]]],[5,"lifo",E,"Creates a work-stealing deque with the last-in first-out…",N,[[]]],[11,R[404],E,R[1240],2,[[["self"]],["bool"]]],[11,"push",E,"Pushes an element into the back of the deque.",2,[[["self"],[T]]]],[11,"pop",E,"Pops an element from the deque.",2,[[["self"]],["pop"]]],[11,R[404],E,R[1240],3,[[["self"]],["bool"]]],[11,"steal",E,"Steals an element from the front of the deque.",3,[[["self"]],["steal"]]],[11,"steal_many",E,"Steals elements from the front of the deque.",3,[[["self"],["worker"]],["steal"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[66],E,E,3,[[["self"]],[T]]],[11,R[67],E,E,3,[[[T],["self"]]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[66],E,E,0,[[["self"]],[T]]],[11,R[67],E,E,0,[[[T],["self"]]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[66],E,E,1,[[["self"]],[T]]],[11,R[67],E,E,1,[[[T],["self"]]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"eq",E,E,0,[[["pop"],["self"]],["bool"]]],[11,"ne",E,E,0,[[["pop"],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"clone",E,E,0,[[["self"]],["pop"]]],[11,"clone",E,E,1,[[["self"]],["steal"]]],[11,"clone",E,E,3,[[["self"]],["stealer"]]],[11,"cmp",E,E,0,[[["pop"],["self"]],[R[23]]]],[11,"cmp",E,E,1,[[["self"],["steal"]],[R[23]]]],[11,R[62],E,E,0,[[["pop"],["self"]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,0,[[["pop"],["self"]],["bool"]]],[11,"le",E,E,0,[[["pop"],["self"]],["bool"]]],[11,"gt",E,E,0,[[["pop"],["self"]],["bool"]]],[11,"ge",E,E,0,[[["pop"],["self"]],["bool"]]],[11,R[62],E,E,1,[[["self"],["steal"]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"le",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"gt",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"ge",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,1,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,2,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,3,[[[R[12]],["self"]],[R[2]]]]],"p":[[4,"Pop"],[4,"Steal"],[3,"Worker"],[3,"Stealer"]]};
searchIndex[R[125]]={"doc":"This crate provides a stable, safe and scoped threadpool.","i":[[3,"Pool",R[125],"A threadpool that acts as a handle to a number of threads…",N,N],[3,"Scope",E,"Handle to the scope during which the threadpool is borrowed.",N,N],[11,"new",E,"Construct a threadpool with the given number of threads.…",0,[[["u32"]],["pool"]]],[11,"scoped",E,"Borrows the pool and allows executing jobs on other…",0,[[["self"],["f"]],["r"]]],[11,"thread_count",E,"Returns the number of threads inside this pool.",0,[[["self"]],["u32"]]],[11,"execute",E,"Execute a job on the threadpool.",1,[[["self"],["f"]]]],[11,"join_all",E,"Blocks until all currently queued jobs have run to…",1,[[["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"drop",E,E,0,[[["self"]]]],[11,"drop",E,E,1,[[["self"]]]]],"p":[[3,"Pool"],[3,"Scope"]]};
searchIndex[R[1334]]={"doc":"This crate exports a macro `enum_from_primitive!` that…","i":[[4,"Option",R[1334],"The `Option` type. See the module level documentation for…",N,N],[13,"None",E,"No value",0,N],[13,"Some",E,"Some value `T`",0,N],[8,R[940],E,R[1146],N,N],[11,R[1203],E,R[1147],1,[[["isize"]],[R[24]]]],[11,"from_i8",E,R[1148],1,[[["i8"]],[R[24]]]],[11,"from_i16",E,R[1149],1,[[["i16"]],[R[24]]]],[11,"from_i32",E,R[1150],1,[[["i32"]],[R[24]]]],[10,R[1352],E,R[1151],1,[[["i64"]],[R[24]]]],[11,R[1339],E,R[1152],1,[[["i128"]],[R[24]]]],[11,R[973],E,R[1153],1,[[["usize"]],[R[24]]]],[11,"from_u8",E,R[1154],1,[[["u8"]],[R[24]]]],[11,"from_u16",E,R[1155],1,[[["u16"]],[R[24]]]],[11,"from_u32",E,R[1156],1,[[["u32"]],[R[24]]]],[10,R[1353],E,R[1157],1,[[["u64"]],[R[24]]]],[11,R[1340],E,R[1158],1,[[["u128"]],[R[24]]]],[11,R[1354],E,R[1159],1,[[["f32"]],[R[24]]]],[11,R[1355],E,R[1160],1,[[["f64"]],[R[24]]]],[14,"enum_from_primitive_impl_ty",E,R[1335],N,N],[14,"enum_from_primitive_impl",E,R[1335],N,N],[14,"enum_from_primitive",E,"Wrap this macro around an `enum` declaration to get an…",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[22],E,E,0,[[],["i"]]],[11,"into",E,E,0,[[],[U]]],[11,R[66],E,E,0,[[["self"]],[T]]],[11,R[67],E,E,0,[[[T],["self"]]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"hash",E,E,0,[[["self"],["__ht"]]]],[11,R[22],E,"Returns a consuming iterator over the possibly contained…",0,[[],[R[358]]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"from",E,E,0,[[[R[24]]],[[R[24]],[T]]]],[11,"from",E,E,0,[[[R[24]]],[[T],[R[24]]]]],[11,"from",E,E,0,[[[T]],[R[24]]]],[11,R[222],E,"Returns [`None`][Option::None].",0,[[],[R[24]]]],[11,R[357],E,"Takes each element in the [`Iterator`]: if it is…",0,[[["i"]],[R[24]]]],[11,"cmp",E,E,0,[[["self"],[R[24]]],[R[23]]]],[11,"eq",E,E,0,[[["self"],[R[24]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[24]]],["bool"]]],[11,"into_result",E,E,0,[[],[[R[2],["noneerror"]],["noneerror"]]]],[11,"from_ok",E,E,0,[[[T]],[R[24]]]],[11,"from_error",E,E,0,[[["noneerror"]],[R[24]]]],[11,"clone",E,E,0,[[["self"]],[R[24]]]],[11,R[62],E,E,0,[[["self"],[R[24]]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,0,[[["self"],[R[24]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[24]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[24]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[24]]],["bool"]]],[11,"is_some",E,"Returns `true` if the option is a [`Some`] value.",0,[[["self"]],["bool"]]],[11,"is_none",E,"Returns `true` if the option is a [`None`] value.",0,[[["self"]],["bool"]]],[11,"as_ref",E,"Converts from `&Option<T>` to `Option<&T>`.",0,[[["self"]],[[T],[R[24]]]]],[11,"as_mut",E,"Converts from `&mut Option<T>` to `Option<&mut T>`.",0,[[["self"]],[[R[24]],[T]]]],[11,"as_pin_ref",E,"Converts from `Pin<&Option<T>>` to `Option<Pin<&T>>`",0,[[[R[24]],["pin",[R[24]]]],[["pin"],[R[24],["pin"]]]]],[11,"as_pin_mut",E,"Converts from `Pin<&mut Option<T>>` to `Option<Pin<&mut T>>`",0,[[["pin",[R[24]]],[R[24]]],[["pin"],[R[24],["pin"]]]]],[11,"expect",E,"Unwraps an option, yielding the content of a [`Some`].",0,[[["str"]],[T]]],[11,"unwrap",E,"Moves the value `v` out of the `Option<T>` if it is…",0,[[],[T]]],[11,"unwrap_or",E,"Returns the contained value or a default.",0,[[[T]],[T]]],[11,"unwrap_or_else",E,"Returns the contained value or computes it from a closure.",0,[[["f"]],[T]]],[11,"map",E,"Maps an `Option<T>` to `Option<U>` by applying a function…",0,[[["f"]],[R[24]]]],[11,"map_or",E,R[1336],0,[[[U],["f"]],[U]]],[11,"map_or_else",E,R[1336],0,[[["f"],["d"]],[U]]],[11,"ok_or",E,R[1337],0,[[["e"]],[R[2]]]],[11,"ok_or_else",E,R[1337],0,[[["f"]],[R[2]]]],[11,"iter",E,"Returns an iterator over the possibly contained value.",0,[[["self"]],["iter"]]],[11,R[175],E,"Returns a mutable iterator over the possibly contained…",0,[[["self"]],["itermut"]]],[11,"and",E,R[1338],0,[[[R[24]]],[R[24]]]],[11,"and_then",E,R[1338],0,[[["f"]],[R[24]]]],[11,"filter",E,"Returns `None` if the option is `None`, otherwise calls…",0,[[["p"]],[R[24]]]],[11,"or",E,"Returns the option if it contains a value, otherwise…",0,[[[R[24]]],[R[24]]]],[11,"or_else",E,"Returns the option if it contains a value, otherwise calls…",0,[[["f"]],[R[24]]]],[11,"xor",E,"Returns [`Some`] if exactly one of `self`, `optb` is…",0,[[[R[24]]],[R[24]]]],[11,"get_or_insert",E,"Inserts `v` into the option if it is [`None`], then…",0,[[["self"],[T]],[T]]],[11,"get_or_insert_with",E,"Inserts a value computed from `f` into the option if it is…",0,[[["self"],["f"]],[T]]],[11,"take",E,"Takes the value out of the option, leaving a [`None`] in…",0,[[["self"]],[R[24]]]],[11,"replace",E,"Replaces the actual value in the option by the value given…",0,[[["self"],[T]],[R[24]]]],[11,"copied",E,"Maps an `Option<&T>` to an `Option<T>` by copying the…",0,[[],[R[24]]]],[11,"copied",E,"Maps an `Option<&mut T>` to an `Option<T>` by copying the…",0,[[],[R[24]]]],[11,"cloned",E,"Maps an `Option<&T>` to an `Option<T>` by cloning the…",0,[[],[R[24]]]],[11,"cloned",E,"Maps an `Option<&mut T>` to an `Option<T>` by cloning the…",0,[[],[R[24]]]],[11,"unwrap_or_default",E,"Returns the contained value or a default",0,[[],[T]]],[11,"deref",E,"Converts from `&Option<T>` to `Option<&T::Target>`.",0,[[["self"]],[R[24]]]],[11,"transpose",E,"Transposes an `Option` of a `Result` into a `Result` of an…",0,[[],[[R[24]],[R[2],[R[24]]]]]]],"p":[[4,"Option"],[8,R[940]]]};
searchIndex[R[1345]]={"doc":"Rational numbers","i":[[3,"Ratio",R[1345],"Represents the ratio between 2 numbers.",N,N],[3,R[1356],E,E,N,N],[6,"Rational",E,"Alias for a `Ratio` of machine-sized integers.",N,N],[6,"Rational32",E,E,N,N],[6,"Rational64",E,E,N,N],[11,"new",E,"Creates a new `Ratio`. Fails if `denom` is zero.",0,[[[T]],["ratio"]]],[11,"from_integer",E,"Creates a `Ratio` representing the integer `t`.",0,[[[T]],["ratio"]]],[11,"new_raw",E,"Creates a `Ratio` without checking for `denom == 0` or…",0,[[[T]],["ratio"]]],[11,"to_integer",E,"Converts to an integer, rounding towards zero.",0,[[["self"]],[T]]],[11,"numer",E,"Gets an immutable reference to the numerator.",0,[[["self"]],[T]]],[11,"denom",E,"Gets an immutable reference to the denominator.",0,[[["self"]],[T]]],[11,"is_integer",E,"Returns true if the rational number is an integer…",0,[[["self"]],["bool"]]],[11,"reduced",E,"Returns a reduced copy of self.",0,[[["self"]],["ratio"]]],[11,"recip",E,"Returns the reciprocal.",0,[[["self"]],["ratio"]]],[11,"floor",E,"Rounds towards minus infinity.",0,[[["self"]],["ratio"]]],[11,"ceil",E,"Rounds towards plus infinity.",0,[[["self"]],["ratio"]]],[11,"round",E,"Rounds to the nearest integer. Rounds half-way cases away…",0,[[["self"]],["ratio"]]],[11,"trunc",E,"Rounds towards zero.",0,[[["self"]],["ratio"]]],[11,"fract",E,"Returns the fractional part of a number, with division…",0,[[["self"]],["ratio"]]],[11,"pow",E,"Raises the `Ratio` to the power of an exponent.",0,[[["i32"],["self"]],["ratio"]]],[11,"approximate_float",E,E,0,[[["numcast"],["float"]],[["ratio"],[R[24],["ratio"]]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[66],E,E,0,[[["self"]],[T]]],[11,R[67],E,E,0,[[[T],["self"]]]],[11,R[161],E,E,0,[[["self"]],[R[34]]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[66],E,E,1,[[["self"]],[T]]],[11,R[67],E,E,1,[[[T],["self"]]]],[11,R[161],E,E,1,[[["self"]],[R[34]]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"eq",E,E,1,[[[R[1346]],["self"]],["bool"]]],[11,"ne",E,E,1,[[[R[1346]],["self"]],["bool"]]],[11,"clone",E,E,0,[[["self"]],["ratio"]]],[11,"clone",E,E,1,[[["self"]],[R[1346]]]],[11,"cmp",E,E,0,[[["self"]],[R[23]]]],[11,"from",E,E,0,[[[T]],["ratio"]]],[11,"from",E,E,0,[[],["ratio"]]],[11,"into",E,E,0,[[]]],[11,R[62],E,E,0,[[["self"]],[[R[23]],[R[24],[R[23]]]]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,1,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,"Renders as `numer/denom`. If denom=1, renders as numer.",0,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,1,[[[R[12]],["self"]],[R[2]]]],[11,"div",E,E,0,[[["ratio"]],["ratio"]]],[11,"div",E,E,0,[[[T]],["ratio"]]],[11,"div",E,E,0,[[["ratio"]],["ratio"]]],[11,"div",E,E,0,[[[T]],["ratio"]]],[11,"hash",E,E,0,[[["h"],["self"]]]],[11,"add",E,E,0,[[["ratio"]],["ratio"]]],[11,"add",E,E,0,[[[T]],["ratio"]]],[11,"add",E,E,0,[[["ratio"]],["ratio"]]],[11,"add",E,E,0,[[[T]],["ratio"]]],[11,"sub",E,E,0,[[["ratio"]],["ratio"]]],[11,"sub",E,E,0,[[[T]],["ratio"]]],[11,"sub",E,E,0,[[["ratio"]],["ratio"]]],[11,"sub",E,E,0,[[[T]],["ratio"]]],[11,"mul",E,E,0,[[["ratio"]],["ratio"]]],[11,"mul",E,E,0,[[[T]],["ratio"]]],[11,"mul",E,E,0,[[["ratio"]],["ratio"]]],[11,"mul",E,E,0,[[[T]],["ratio"]]],[11,"rem",E,E,0,[[["ratio"]],["ratio"]]],[11,"rem",E,E,0,[[[T]],["ratio"]]],[11,"rem",E,E,0,[[["ratio"]],["ratio"]]],[11,"rem",E,E,0,[[[T]],["ratio"]]],[11,"neg",E,E,0,[[],["ratio"]]],[11,R[1347],E,E,0,[[["ratio"],["self"]]]],[11,R[1347],E,E,0,[[["self"],[T]]]],[11,R[1347],E,E,0,[[["self"],["ratio"]]]],[11,R[1347],E,E,0,[[["self"],[T]]]],[11,R[1348],E,E,0,[[["ratio"],["self"]]]],[11,R[1348],E,E,0,[[["self"],[T]]]],[11,R[1348],E,E,0,[[["self"],["ratio"]]]],[11,R[1348],E,E,0,[[["self"],[T]]]],[11,R[1349],E,E,0,[[["ratio"],["self"]]]],[11,R[1349],E,E,0,[[["self"],[T]]]],[11,R[1349],E,E,0,[[["self"],["ratio"]]]],[11,R[1349],E,E,0,[[["self"],[T]]]],[11,R[1350],E,E,0,[[["ratio"],["self"]]]],[11,R[1350],E,E,0,[[["self"],[T]]]],[11,R[1350],E,E,0,[[["self"],["ratio"]]]],[11,R[1350],E,E,0,[[["self"],[T]]]],[11,R[1351],E,E,0,[[["ratio"],["self"]]]],[11,R[1351],E,E,0,[[["self"],[T]]]],[11,R[1351],E,E,0,[[["self"],["ratio"]]]],[11,R[1351],E,E,0,[[["self"],[T]]]],[11,"from_str",E,"Parses `numer/denom` or just `numer`.",0,[[["str"]],[["ratio"],[R[1346]],[R[2],["ratio",R[1346]]]]]],[11,R[485],E,E,1,[[["self"]],["str"]]],[11,R[1352],E,E,0,[[["i64"]],[R[24]]]],[11,R[1353],E,E,0,[[["u64"]],[R[24]]]],[11,R[1354],E,E,0,[[["f32"]],[R[24]]]],[11,R[1355],E,E,0,[[["f64"]],[R[24]]]],[11,R[1352],E,E,0,[[["i64"]],[R[24]]]],[11,R[1353],E,E,0,[[["u64"]],[R[24]]]],[11,R[1354],E,E,0,[[["f32"]],[R[24]]]],[11,R[1355],E,E,0,[[["f64"]],[R[24]]]],[11,R[1352],E,E,0,[[["i64"]],[R[24]]]],[11,R[1353],E,E,0,[[["u64"]],[R[24]]]],[11,R[1354],E,E,0,[[["f32"]],[R[24]]]],[11,R[1355],E,E,0,[[["f64"]],[R[24]]]],[11,R[1352],E,E,0,[[["i64"]],[R[24]]]],[11,R[1353],E,E,0,[[["u64"]],[R[24]]]],[11,R[1354],E,E,0,[[["f32"]],[R[24]]]],[11,R[1355],E,E,0,[[["f64"]],[R[24]]]],[11,R[1352],E,E,0,[[["i64"]],[R[24]]]],[11,R[1353],E,E,0,[[["u64"]],[R[24]]]],[11,R[1354],E,E,0,[[["f32"]],[R[24]]]],[11,R[1355],E,E,0,[[["f64"]],[R[24]]]],[11,R[1352],E,E,0,[[["i64"]],[R[24]]]],[11,R[1353],E,E,0,[[["u64"]],[R[24]]]],[11,R[1354],E,E,0,[[["f32"]],[R[24]]]],[11,R[1355],E,E,0,[[["f64"]],[R[24]]]],[11,R[1352],E,E,0,[[["i64"]],[R[24]]]],[11,R[1353],E,E,0,[[["u64"]],[R[24]]]],[11,R[1354],E,E,0,[[["f32"]],[R[24]]]],[11,R[1355],E,E,0,[[["f64"]],[R[24]]]],[11,R[1352],E,E,0,[[["i64"]],[R[24]]]],[11,R[1353],E,E,0,[[["u64"]],[R[24]]]],[11,R[1354],E,E,0,[[["f32"]],[R[24]]]],[11,R[1355],E,E,0,[[["f64"]],[R[24]]]],[11,R[1352],E,E,0,[[["i64"]],[R[24]]]],[11,R[1353],E,E,0,[[["u64"]],[R[24]]]],[11,R[1354],E,E,0,[[["f32"]],[R[24]]]],[11,R[1355],E,E,0,[[["f64"]],[R[24]]]],[11,R[1352],E,E,0,[[["i64"]],[R[24]]]],[11,R[1353],E,E,0,[[["u64"]],[R[24]]]],[11,R[1354],E,E,0,[[["f32"]],[R[24]]]],[11,R[1355],E,E,0,[[["f64"]],[R[24]]]],[11,R[1221],E,"Parses `numer/denom` where the numbers are in base `radix`.",0,[[["u32"],["str"]],[["ratio"],[R[1346]],[R[2],["ratio",R[1346]]]]]],[11,"zero",E,E,0,[[],["ratio"]]],[11,"is_zero",E,E,0,[[["self"]],["bool"]]],[11,"one",E,E,0,[[],["ratio"]]],[11,R[1095],E,E,0,[[["ratio"],["self"]],[["ratio"],[R[24],["ratio"]]]]],[11,R[1098],E,E,0,[[["ratio"],["self"]],[["ratio"],[R[24],["ratio"]]]]],[11,R[960],E,E,0,[[["ratio"],["self"]],[["ratio"],[R[24],["ratio"]]]]],[11,R[961],E,E,0,[[["ratio"],["self"]],[["ratio"],[R[24],["ratio"]]]]],[11,"abs",E,E,0,[[["self"]],["ratio"]]],[11,"abs_sub",E,E,0,[[["ratio"],["self"]],["ratio"]]],[11,"signum",E,E,0,[[["self"]],["ratio"]]],[11,R[1080],E,E,0,[[["self"]],["bool"]]],[11,R[1082],E,E,0,[[["self"]],["bool"]]]],"p":[[3,"Ratio"],[3,R[1356]]]};
searchIndex[R[135]]={"doc":"This is a library for controlling colours and formatting,…","i":[[3,"Prefix",R[135],"Like `ANSIString`, but only displays the style prefix.",N,N],[3,"Infix",E,"Like `ANSIString`, but only displays the difference…",N,N],[3,"Suffix",E,"Like `ANSIString`, but only displays the style suffix.",N,N],[3,"Style",E,"A style is a collection of properties that can format a…",N,N],[12,"foreground",E,"The style's foreground colour, if it has one.",0,N],[12,"background",E,"The style's background colour, if it has one.",0,N],[12,"is_bold",E,"Whether this style is bold.",0,N],[12,"is_dimmed",E,"Whether this style is dimmed.",0,N],[12,"is_italic",E,"Whether this style is italic.",0,N],[12,"is_underline",E,"Whether this style is underlined.",0,N],[12,"is_blink",E,"Whether this style is blinking.",0,N],[12,"is_reverse",E,"Whether this style has reverse colours.",0,N],[12,"is_hidden",E,"Whether this style is hidden.",0,N],[12,"is_strikethrough",E,"Whether this style is struckthrough.",0,N],[3,R[163],E,"An `ANSIGenericString` includes a generic string type and…",N,N],[3,R[162],E,"A set of `ANSIGenericString`s collected together, in order…",N,N],[12,"0",E,E,1,N],[4,"Colour",E,R[136],N,N],[13,"Black",E,R[137],2,N],[13,"Red",E,R[138],2,N],[13,"Green",E,R[139],2,N],[13,"Yellow",E,R[140],2,N],[13,"Blue",E,R[141],2,N],[13,"Purple",E,R[142],2,N],[13,"Cyan",E,R[143],2,N],[13,"White",E,R[144],2,N],[13,"Fixed",E,R[145],2,N],[13,"RGB",E,R[146],2,N],[4,"Color",E,R[136],N,N],[13,"Black",E,R[137],2,N],[13,"Red",E,R[138],2,N],[13,"Green",E,R[139],2,N],[13,"Yellow",E,R[140],2,N],[13,"Blue",E,R[141],2,N],[13,"Purple",E,R[142],2,N],[13,"Cyan",E,R[143],2,N],[13,"White",E,R[144],2,N],[13,"Fixed",E,R[145],2,N],[13,"RGB",E,R[146],2,N],[5,R[159],E,"A function to construct an `ANSIStrings` instance.",N,[[],["ansistrings"]]],[5,R[160],E,"A function to construct an `ANSIByteStrings` instance.",N,[[],["ansibytestrings"]]],[11,"prefix",E,"The prefix for this style.",0,[[],["prefix"]]],[11,"infix",E,"The infix between this style and another.",0,[[["style"]],["infix"]]],[11,"suffix",E,"The suffix for this style.",0,[[],["suffix"]]],[11,"prefix",E,"The prefix for this colour.",2,[[],["prefix"]]],[11,"infix",E,"The infix between this colour and another.",2,[[["colour"]],["infix"]]],[11,"suffix",E,"The suffix for this colour.",2,[[],["suffix"]]],[11,"new",E,"Creates a new Style with no differences.",0,[[],["style"]]],[11,"bold",E,R[148],0,[[["self"]],["style"]]],[11,"dimmed",E,R[149],0,[[["self"]],["style"]]],[11,"italic",E,R[150],0,[[["self"]],["style"]]],[11,R[151],E,R[152],0,[[["self"]],["style"]]],[11,"blink",E,R[153],0,[[["self"]],["style"]]],[11,"reverse",E,R[154],0,[[["self"]],["style"]]],[11,"hidden",E,R[147],0,[[["self"]],["style"]]],[11,R[155],E,R[147],0,[[["self"]],["style"]]],[11,"fg",E,"Returns a `Style` with the foreground colour property set.",0,[[["colour"],["self"]],["style"]]],[11,"on",E,R[156],0,[[["colour"],["self"]],["style"]]],[11,"is_plain",E,"Return true if this `Style` has no actual styles, and can…",0,[[],["bool"]]],[11,"normal",E,"Return a `Style` with the foreground colour set to this…",2,[[],["style"]]],[11,"bold",E,R[148],2,[[],["style"]]],[11,"dimmed",E,R[149],2,[[],["style"]]],[11,"italic",E,R[150],2,[[],["style"]]],[11,R[151],E,R[152],2,[[],["style"]]],[11,"blink",E,R[153],2,[[],["style"]]],[11,"reverse",E,R[154],2,[[],["style"]]],[11,"hidden",E,R[147],2,[[],["style"]]],[11,R[155],E,"Returns a `Style` with the strikethrough property set.",2,[[],["style"]]],[11,"on",E,R[156],2,[[["colour"]],["style"]]],[11,"paint",E,R[157],0,[[["i"]],[[R[158]],["toowned"],["sized"]]]],[11,"paint",E,R[157],2,[[["i"]],[[R[158]],["toowned"],["sized"]]]],[6,R[164],E,"An ANSI String is a string coupled with the `Style` to…",N,N],[6,R[165],E,"An `ANSIByteString` represents a formatted series of…",N,N],[6,R[159],E,"A set of `ANSIString`s collected together, in order to be…",N,N],[6,R[160],E,"A set of `ANSIByteString`s collected together, in order to…",N,N],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[66],E,E,3,[[["self"]],[T]]],[11,R[67],E,E,3,[[[T],["self"]]]],[11,R[161],E,E,3,[[["self"]],[R[34]]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[66],E,E,4,[[["self"]],[T]]],[11,R[67],E,E,4,[[[T],["self"]]]],[11,R[161],E,E,4,[[["self"]],[R[34]]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[30]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[66],E,E,5,[[["self"]],[T]]],[11,R[67],E,E,5,[[[T],["self"]]]],[11,R[161],E,E,5,[[["self"]],[R[34]]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[30]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[66],E,E,0,[[["self"]],[T]]],[11,R[67],E,E,0,[[[T],["self"]]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[66],E,E,6,[[["self"]],[T]]],[11,R[67],E,E,6,[[[T],["self"]]]],[11,R[161],E,E,6,[[["self"]],[R[34]]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[30]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[161],E,E,1,[[["self"]],[R[34]]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[66],E,E,2,[[["self"]],[T]]],[11,R[67],E,E,2,[[[T],["self"]]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"eq",E,E,0,[[["style"],["self"]],["bool"]]],[11,"ne",E,E,0,[[["style"],["self"]],["bool"]]],[11,"eq",E,E,2,[[["self"],["colour"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["colour"]],["bool"]]],[11,"eq",E,E,6,[[[R[158]],["self"]],["bool"]]],[11,"ne",E,E,6,[[[R[158]],["self"]],["bool"]]],[11,"clone",E,E,3,[[["self"]],["prefix"]]],[11,"clone",E,E,4,[[["self"]],["infix"]]],[11,"clone",E,E,5,[[["self"]],["suffix"]]],[11,"clone",E,E,0,[[["self"]],["style"]]],[11,"clone",E,E,2,[[["self"]],["colour"]]],[11,"clone",E,E,6,[[["self"]],[R[158]]]],[11,"from",E,"You can turn a `Colour` into a `Style` with the foreground…",0,[[["colour"]],["style"]]],[11,"from",E,E,6,[[["i"]],[R[158]]]],[11,R[222],E,"Returns a style with no properties set. Formatting text…",0,[[],["style"]]],[11,"fmt",E,E,3,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,4,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,5,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,2,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,6,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,3,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,4,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,5,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,7,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,8,[[[R[12]],["self"]],[R[2]]]],[11,"deref",E,E,6,[[["self"]],["s"]]],[11,"write_to",E,"Write an `ANSIByteString` to an `io::Write`. This writes…",9,[[["self"],["w"]],[R[2]]]],[11,"write_to",E,"Write `ANSIByteStrings` to an `io::Write`. This writes the…",10,[[["self"],["w"]],[R[2]]]]],"p":[[3,"Style"],[3,R[162]],[4,"Colour"],[3,"Prefix"],[3,"Infix"],[3,"Suffix"],[3,R[163]],[6,R[164]],[6,R[159]],[6,R[165]],[6,R[160]]]};
searchIndex[R[1513]]={"doc":"This crate contains a JPEG decoder.","i":[[3,"Decoder",R[1513],R[1636],N,N],[3,"ImageInfo",E,"Represents metadata of an image.",N,N],[12,"width",E,"The width of the image, in pixels.",0,N],[12,"height",E,"The height of the image, in pixels.",0,N],[12,"pixel_format",E,"The pixel format of the image.",0,N],[4,R[1516],E,"An enumeration over combinations of color spaces and bit…",N,N],[13,"L8",E,"Luminance (grayscale), 8 bits",1,N],[13,"RGB24",E,"RGB, 8 bits per channel",1,N],[13,"CMYK32",E,"CMYK, 8 bits per channel",1,N],[4,"Error",E,"Errors that can occur while decoding a JPEG image.",N,N],[13,"Format",E,"The image is not formatted properly. The string contains…",2,N],[13,"Unsupported",E,"The image makes use of a JPEG feature not (currently)…",2,N],[13,"Io",E,"An I/O error occurred while decoding the image.",2,N],[13,"Internal",E,"An internal error occurred while decoding the image.",2,N],[4,R[1517],E,"An enumeration over JPEG features (currently) unsupported…",N,N],[13,"Hierarchical",E,"Hierarchical JPEG.",3,N],[13,"Lossless",E,"Lossless JPEG.",3,N],[13,"ArithmeticEntropyCoding",E,"JPEG using arithmetic entropy coding instead of Huffman…",3,N],[13,"SamplePrecision",E,"Sample precision in bits. 8 bit sample precision is what…",3,N],[13,"ComponentCount",E,"Number of components in an image. 1, 3 and 4 components…",3,N],[13,"DNL",E,"An image can specify a zero height in the frame header and…",3,N],[13,"SubsamplingRatio",E,"Subsampling ratio.",3,N],[13,"NonIntegerSubsamplingRatio",E,"A subsampling ratio not representable as an integer.",3,N],[11,"new",E,"Creates a new `Decoder` using the reader `reader`.",4,[[["r"]],["decoder"]]],[11,"info",E,"Returns metadata about the image.",4,[[["self"]],[[R[24],[R[1514]]],[R[1514]]]]],[11,"read_info",E,"Tries to read metadata from the image without decoding it.",4,[[["self"]],[[R[2],["error"]],["error"]]]],[11,"decode",E,"Decodes the image and returns the decoded pixels if…",4,[[["self"]],[[R[2],["vec","error"]],["error"],["vec",["u8"]]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[30]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[66],E,E,0,[[["self"]],[T]]],[11,R[67],E,E,0,[[[T],["self"]]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[66],E,E,1,[[["self"]],[T]]],[11,R[67],E,E,1,[[[T],["self"]]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[161],E,E,2,[[["self"]],[R[34]]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"eq",E,E,1,[[["self"],[R[1515]]],["bool"]]],[11,"eq",E,E,0,[[[R[1514]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[1514]],["self"]],["bool"]]],[11,"clone",E,E,1,[[["self"]],[R[1515]]]],[11,"clone",E,E,0,[[["self"]],[R[1514]]]],[11,"from",E,E,2,[[["ioerror"]],["error"]]],[11,"from",E,E,2,[[["recverror"]],["error"]]],[11,"from",E,E,2,[[["senderror"]],["error"]]],[11,"fmt",E,E,1,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,3,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,2,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,2,[[[R[12]],["self"]],[R[2]]]],[11,R[485],E,E,2,[[["self"]],["str"]]],[11,"cause",E,E,2,[[["self"]],[[R[24],["stderror"]],["stderror"]]]]],"p":[[3,"ImageInfo"],[4,R[1516]],[4,"Error"],[4,R[1517]],[3,"Decoder"]]};
searchIndex[R[171]]={"doc":"Per-object thread-local storage","i":[[3,R[182],R[171],"Thread-local variable wrapper",N,N],[3,R[359],E,"Mutable iterator over the contents of a `ThreadLocal`.",N,N],[3,R[184],E,"An iterator that moves out of a `ThreadLocal`.",N,N],[3,R[183],E,"Wrapper around `ThreadLocal` which adds a fast path for a…",N,N],[6,"CachedIterMut",E,"Mutable iterator over the contents of a `CachedThreadLocal`.",N,N],[6,"CachedIntoIter",E,"An iterator that moves out of a `CachedThreadLocal`.",N,N],[11,"new",E,"Creates a new empty `ThreadLocal`.",0,[[],[R[180]]]],[11,"get",E,R[173],0,[[["self"]],[[R[24]],[T]]]],[11,"get_or",E,R[172],0,[[["self"],["f"]],[T]]],[11,R[174],E,R[172],0,[[["self"],["f"]],[[R[2]],[T]]]],[11,R[175],E,R[176],0,[[["self"]],["itermut"]]],[11,"clear",E,R[177],0,[[["self"]]]],[11,R[178],E,R[179],0,[[["self"]],[T]]],[11,"new",E,"Creates a new empty `CachedThreadLocal`.",1,[[],[R[181]]]],[11,"get",E,R[173],1,[[["self"]],[[R[24]],[T]]]],[11,"get_or",E,R[172],1,[[["self"],["f"]],[T]]],[11,R[174],E,R[172],1,[[["self"],["f"]],[[R[2]],[T]]]],[11,R[175],E,R[176],1,[[["self"]],["cacheditermut"]]],[11,"clear",E,R[177],1,[[["self"]]]],[11,R[178],E,R[179],1,[[["self"]],[T]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[22],E,E,0,[[],["i"]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[22],E,E,2,[[],["i"]]],[11,"into",E,E,2,[[],[U]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[22],E,E,3,[[],["i"]]],[11,"into",E,E,3,[[],[U]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[22],E,E,1,[[],["i"]]],[11,"into",E,E,1,[[],[U]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[22],E,E,0,[[],[R[358]]]],[11,R[22],E,E,1,[[],["cachedintoiter"]]],[11,"drop",E,E,0,[[["self"]]]],[11,"next",E,E,2,[[["self"]],[["box"],[R[24],["box"]]]]],[11,R[104],E,E,2,[[["self"]]]],[11,"next",E,E,3,[[["self"]],[[R[24],["box"]],["box"]]]],[11,R[104],E,E,3,[[["self"]]]],[11,R[222],E,E,0,[[],[R[180]]]],[11,R[222],E,E,1,[[],[R[181]]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,1,[[[R[12]],["self"]],[R[2]]]]],"p":[[3,R[182]],[3,R[183]],[3,R[359]],[3,R[184]]]};
searchIndex[R[17]]={"doc":"The enum [`Either`] with variants `Left` and `Right` is a…","i":[[4,"Either",R[17],R[285],N,N],[13,"Left",E,R[286],0,N],[13,"Right",E,R[287],0,N],[11,"is_left",E,R[288],0,[[["self"]],["bool"]]],[11,"is_right",E,R[289],0,[[["self"]],["bool"]]],[11,"left",E,R[290],0,[[],[R[24]]]],[11,"right",E,R[291],0,[[],[R[24]]]],[11,"as_ref",E,R[292],0,[[["self"]],[[R[17]],["r"],["l"]]]],[11,"as_mut",E,R[293],0,[[["self"]],[["r"],["l"],[R[17]]]]],[11,"flip",E,R[294],0,[[],[R[17]]]],[11,"map_left",E,R[18],0,[[["f"]],[R[17]]]],[11,R[295],E,R[19],0,[[["f"]],[R[17]]]],[11,R[17],E,R[296],0,[[["g"],["f"]],[T]]],[11,R[297],E,R[298],0,[[["ctx"],["g"],["f"]],[T]]],[11,R[299],E,R[18],0,[[["f"]],[R[17]]]],[11,R[300],E,R[19],0,[[["f"]],[R[17]]]],[11,R[22],E,R[301],0,[[],[R[17]]]],[11,"left_or",E,R[302],0,[[["l"]],["l"]]],[11,R[303],E,R[304],0,[[],["l"]]],[11,R[305],E,R[20],0,[[["f"]],["l"]]],[11,"right_or",E,R[306],0,[[["r"]],["r"]]],[11,R[307],E,R[308],0,[[],["r"]]],[11,R[309],E,R[20],0,[[["f"]],["r"]]],[11,R[310],E,R[21],0,[[]]],[11,R[311],E,R[21],0,[[]]],[11,R[25],E,R[312],0,[[],[T]]],[14,"try_left",E,"Macro for unwrapping the left side of an `Either`, which…",N,N],[14,"try_right",E,"Dual to `try_left!`, see its documentation for more…",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[22],E,E,0,[[],["i"]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[16],E,E,0,[[["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[12]]],[R[2]]]],[11,"eq",E,E,0,[[[R[17]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[17]],["self"]],["bool"]]],[11,"cmp",E,E,0,[[[R[17]],["self"]],[R[23]]]],[11,R[62],E,E,0,[[[R[17]],["self"]],[[R[24],[R[23]]],[R[23]]]]],[11,"lt",E,E,0,[[[R[17]],["self"]],["bool"]]],[11,"le",E,E,0,[[[R[17]],["self"]],["bool"]]],[11,"gt",E,E,0,[[[R[17]],["self"]],["bool"]]],[11,"ge",E,E,0,[[[R[17]],["self"]],["bool"]]],[11,"from",E,E,0,[[[R[2]]],["self"]]],[11,"hash",E,E,0,[[["__hlr"],["self"]]]],[11,"deref",E,E,0,[[["self"]]]],[11,"extend",E,E,0,[[["self"],[T]]]],[11,"next",E,E,0,[[["self"]],[R[24]]]],[11,R[104],E,E,0,[[["self"]]]],[11,"fold",E,E,0,[[["g"],["acc"]],["acc"]]],[11,"count",E,E,0,[[],["usize"]]],[11,"last",E,E,0,[[],[R[24]]]],[11,"nth",E,E,0,[[["self"],["usize"]],[R[24]]]],[11,"collect",E,E,0,[[],["b"]]],[11,"all",E,E,0,[[["self"],["f"]],["bool"]]],[11,R[101],E,E,0,[[["self"]],[R[24]]]],[11,"clone",E,E,0,[[["self"]],[R[17]]]],[11,"into",E,E,0,[[],[R[2]]]],[11,"as_mut",E,E,0,[[["self"]],["str"]]],[11,"as_mut",E,E,0,[[["self"]],["target"]]],[11,"as_mut",E,E,0,[[["self"]]]],[11,"as_ref",E,E,0,[[["self"]],["target"]]],[11,"as_ref",E,E,0,[[["self"]],["str"]]],[11,"as_ref",E,E,0,[[["self"]]]]],"p":[[4,"Either"]]};
searchIndex[R[185]]={"doc":"Miscellaneous tools for concurrent programming.","i":[[3,R[214],R[185],R[197],N,N],[3,"Backoff",E,"Performs exponential backoff in spin loops.",N,N],[0,"atomic",E,"Atomic types.",N,N],[3,R[212],R[204],"A thread-safe mutable memory location.",N,N],[11,"new",E,"Creates a new atomic cell initialized with `val`.",0,[[[T]],[R[210]]]],[11,R[221],E,"Returns a mutable reference to the inner value.",0,[[["self"]],[T]]],[11,R[25],E,"Unwraps the atomic cell and returns its inner value.",0,[[],[T]]],[11,"is_lock_free",E,"Returns `true` if operations on values of this type are…",0,[[],["bool"]]],[11,"store",E,"Stores `val` into the atomic cell.",0,[[["self"],[T]]]],[11,"swap",E,"Stores `val` into the atomic cell and returns the previous…",0,[[["self"],[T]],[T]]],[11,"load",E,"Loads a value.",0,[[["self"]],[T]]],[11,"compare_and_swap",E,R[186],0,[[["self"],[T]],[T]]],[11,"compare_exchange",E,R[186],0,[[["self"],[T]],[R[2]]]],[11,R[187],E,R[188],0,[[["u8"],["self"]],["u8"]]],[11,R[189],E,R[190],0,[[["u8"],["self"]],["u8"]]],[11,R[191],E,R[192],0,[[["u8"],["self"]],["u8"]]],[11,R[196],E,R[193],0,[[["u8"],["self"]],["u8"]]],[11,R[194],E,R[195],0,[[["u8"],["self"]],["u8"]]],[11,R[187],E,R[188],0,[[["self"],["i8"]],["i8"]]],[11,R[189],E,R[190],0,[[["self"],["i8"]],["i8"]]],[11,R[191],E,R[192],0,[[["self"],["i8"]],["i8"]]],[11,R[196],E,R[193],0,[[["self"],["i8"]],["i8"]]],[11,R[194],E,R[195],0,[[["self"],["i8"]],["i8"]]],[11,R[187],E,R[188],0,[[["u16"],["self"]],["u16"]]],[11,R[189],E,R[190],0,[[["u16"],["self"]],["u16"]]],[11,R[191],E,R[192],0,[[["u16"],["self"]],["u16"]]],[11,R[196],E,R[193],0,[[["u16"],["self"]],["u16"]]],[11,R[194],E,R[195],0,[[["u16"],["self"]],["u16"]]],[11,R[187],E,R[188],0,[[["i16"],["self"]],["i16"]]],[11,R[189],E,R[190],0,[[["i16"],["self"]],["i16"]]],[11,R[191],E,R[192],0,[[["i16"],["self"]],["i16"]]],[11,R[196],E,R[193],0,[[["i16"],["self"]],["i16"]]],[11,R[194],E,R[195],0,[[["i16"],["self"]],["i16"]]],[11,R[187],E,R[188],0,[[["u32"],["self"]],["u32"]]],[11,R[189],E,R[190],0,[[["u32"],["self"]],["u32"]]],[11,R[191],E,R[192],0,[[["u32"],["self"]],["u32"]]],[11,R[196],E,R[193],0,[[["u32"],["self"]],["u32"]]],[11,R[194],E,R[195],0,[[["u32"],["self"]],["u32"]]],[11,R[187],E,R[188],0,[[["i32"],["self"]],["i32"]]],[11,R[189],E,R[190],0,[[["i32"],["self"]],["i32"]]],[11,R[191],E,R[192],0,[[["i32"],["self"]],["i32"]]],[11,R[196],E,R[193],0,[[["i32"],["self"]],["i32"]]],[11,R[194],E,R[195],0,[[["i32"],["self"]],["i32"]]],[11,R[187],E,R[188],0,[[["self"],["u64"]],["u64"]]],[11,R[189],E,R[190],0,[[["self"],["u64"]],["u64"]]],[11,R[191],E,R[192],0,[[["self"],["u64"]],["u64"]]],[11,R[196],E,R[193],0,[[["self"],["u64"]],["u64"]]],[11,R[194],E,R[195],0,[[["self"],["u64"]],["u64"]]],[11,R[187],E,R[188],0,[[["i64"],["self"]],["i64"]]],[11,R[189],E,R[190],0,[[["i64"],["self"]],["i64"]]],[11,R[191],E,R[192],0,[[["i64"],["self"]],["i64"]]],[11,R[196],E,R[193],0,[[["i64"],["self"]],["i64"]]],[11,R[194],E,R[195],0,[[["i64"],["self"]],["i64"]]],[11,R[187],E,R[188],0,[[["u128"],["self"]],["u128"]]],[11,R[189],E,R[190],0,[[["u128"],["self"]],["u128"]]],[11,R[191],E,R[192],0,[[["u128"],["self"]],["u128"]]],[11,R[196],E,R[193],0,[[["u128"],["self"]],["u128"]]],[11,R[194],E,R[195],0,[[["u128"],["self"]],["u128"]]],[11,R[187],E,R[188],0,[[["i128"],["self"]],["i128"]]],[11,R[189],E,R[190],0,[[["i128"],["self"]],["i128"]]],[11,R[191],E,R[192],0,[[["i128"],["self"]],["i128"]]],[11,R[196],E,R[193],0,[[["i128"],["self"]],["i128"]]],[11,R[194],E,R[195],0,[[["i128"],["self"]],["i128"]]],[11,R[187],E,R[188],0,[[["self"],["usize"]],["usize"]]],[11,R[189],E,R[190],0,[[["self"],["usize"]],["usize"]]],[11,R[191],E,R[192],0,[[["self"],["usize"]],["usize"]]],[11,R[196],E,R[193],0,[[["self"],["usize"]],["usize"]]],[11,R[194],E,R[195],0,[[["self"],["usize"]],["usize"]]],[11,R[187],E,R[188],0,[[["isize"],["self"]],["isize"]]],[11,R[189],E,R[190],0,[[["isize"],["self"]],["isize"]]],[11,R[191],E,R[192],0,[[["isize"],["self"]],["isize"]]],[11,R[196],E,R[193],0,[[["isize"],["self"]],["isize"]]],[11,R[194],E,R[195],0,[[["isize"],["self"]],["isize"]]],[11,R[191],E,"Applies logical \"and\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,R[196],E,"Applies logical \"or\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,R[194],E,"Applies logical \"xor\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[8,R[213],E,"Trait which allows reading from primitive atomic types…",N,N],[16,"Val",E,"Type returned by `load_consume`.",1,N],[10,R[979],E,"Loads a value from the atomic using a \"consume\" memory…",1,[[["self"]]]],[11,"new",R[185],R[197],2,[[[T]],[R[207]]]],[11,R[25],E,"Returns the value value.",2,[[],[T]]],[11,"new",E,"Creates a new `Backoff`.",3,[[],["self"]]],[11,"reset",E,"Resets the `Backoff`.",3,[[["self"]]]],[11,"spin",E,"Backs off in a lock-free loop.",3,[[["self"]]]],[11,"snooze",E,"Backs off in a blocking loop.",3,[[["self"]]]],[11,"is_completed",E,"Returns `true` if exponential backoff has completed and…",3,[[["self"]],["bool"]]],[0,"sync",E,"Thread synchronization primitives.",N,N],[3,R[215],R[205],"A sharded reader-writer lock.",N,N],[3,R[219],E,"A guard used to release the shared read access of a…",N,N],[3,R[220],E,"A guard used to release the exclusive write access of a…",N,N],[3,"Parker",E,"A thread parking primitive.",N,N],[3,"Unparker",E,"Unparks a thread parked by the associated [`Parker`].",N,N],[3,R[216],E,"Enables threads to synchronize the beginning or end of…",N,N],[11,"new",E,"Creates a new `Parker`.",4,[[],["parker"]]],[11,"park",E,"Blocks the current thread until the token is made available.",4,[[["self"]]]],[11,"park_timeout",E,"Blocks the current thread until the token is made…",4,[[["self"],[R[800]]]]],[11,R[208],E,"Returns a reference to an associated [`Unparker`].",4,[[["self"]],[R[208]]]],[11,"unpark",E,"Atomically makes the token available if it is not already.",5,[[["self"]]]],[11,"new",E,"Creates a new sharded reader-writer lock.",6,[[[T]],[R[211]]]],[11,R[25],E,"Consumes this lock, returning the underlying data.",6,[[],[R[198]]]],[11,"is_poisoned",E,"Returns `true` if the lock is poisoned.",6,[[["self"]],["bool"]]],[11,R[221],E,"Returns a mutable reference to the underlying data.",6,[[["self"]],[[T],[R[198]]]]],[11,"try_read",E,"Attempts to acquire this lock with shared read access.",6,[[["self"]],[[R[200],[R[199]]],[R[199]]]]],[11,"read",E,"Locks with shared read access, blocking the current thread…",6,[[["self"]],[[R[198],[R[199]]],[R[199]]]]],[11,"try_write",E,"Attempts to acquire this lock with exclusive write access.",6,[[["self"]],[[R[201]],[R[200],[R[201]]]]]],[11,"write",E,"Locks with exclusive write access, blocking the current…",6,[[["self"]],[[R[201]],[R[198],[R[201]]]]]],[11,"new",E,"Creates a new wait group and returns the single reference…",7,[[],[R[209]]]],[11,"wait",E,"Drops this reference and waits until all other references…",7,[[]]],[0,"thread",R[185],"Threads that can borrow variables from the stack.",N,N],[3,"Scope",R[206],"A scope for spawning threads.",N,N],[3,R[217],E,"Configures the properties of a new thread.",N,N],[3,R[218],E,"A handle that can be used to join its scoped thread.",N,N],[5,"scope",E,"Creates a new scope for spawning threads.",N,[[["f"]],[R[2]]]],[11,"spawn",E,"Spawns a scoped thread.",8,[[["self"],["f"]],[R[203]]]],[11,"builder",E,"Creates a builder that can configure a thread before…",8,[[["self"]],[R[202]]]],[11,"name",E,"Sets the name for the new thread.",9,[[[R[34]]],[R[202]]]],[11,R[1374],E,"Sets the size of the stack for the new thread.",9,[[["usize"]],[R[202]]]],[11,"spawn",E,"Spawns a scoped thread with this configuration.",9,[[["f"]],[[R[203]],[R[2],[R[203]]]]]],[11,"join",E,"Waits for the thread to finish and returns its result.",10,[[],[R[2]]]],[11,"thread",E,"Returns a handle to the underlying thread.",10,[[["self"]],["thread"]]],[11,"from",R[185],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[66],E,E,2,[[["self"]],[T]]],[11,R[67],E,E,2,[[[T],["self"]]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"from",R[204],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",R[205],E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[30]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[161],E,E,11,[[["self"]],[R[34]]]],[11,R[8],E,E,11,[[[U]],[R[2]]]],[11,R[29],E,E,11,[[["self"]],[T]]],[11,R[15],E,E,11,[[["self"]],[R[30]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[],[R[2]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[161],E,E,12,[[["self"]],[R[34]]]],[11,R[8],E,E,12,[[[U]],[R[2]]]],[11,R[29],E,E,12,[[["self"]],[T]]],[11,R[15],E,E,12,[[["self"]],[R[30]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[],[R[2]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[30]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[66],E,E,5,[[["self"]],[T]]],[11,R[67],E,E,5,[[[T],["self"]]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[30]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[66],E,E,7,[[["self"]],[T]]],[11,R[67],E,E,7,[[[T],["self"]]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[30]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,"from",R[206],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[R[30]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[29],E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"]],[R[30]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[29],E,E,10,[[["self"]],[T]]],[11,R[15],E,E,10,[[["self"]],[R[30]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,"eq",R[185],E,2,[[[R[207]],["self"]],["bool"]]],[11,"ne",E,E,2,[[[R[207]],["self"]],["bool"]]],[11,"clone",E,E,2,[[["self"]],[R[207]]]],[11,"clone",R[205],E,5,[[["self"]],[R[208]]]],[11,"clone",E,E,7,[[["self"]],[R[209]]]],[11,"from",R[185],E,2,[[[T]],["self"]]],[11,"from",R[205],E,6,[[[T]],["self"]]],[11,"drop",E,E,12,[[["self"]]]],[11,"drop",E,E,7,[[["self"]]]],[11,R[222],R[204],E,0,[[],[R[210]]]],[11,R[222],R[185],E,2,[[],[R[207]]]],[11,R[222],E,E,3,[[],["backoff"]]],[11,R[222],R[205],E,6,[[],[R[211]]]],[11,R[16],R[185],E,2,[[["self"]],[T]]],[11,R[16],R[205],E,12,[[["self"]],[T]]],[11,"fmt",R[204],E,0,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[185],E,2,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,3,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[205],E,4,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,5,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,6,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,11,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,12,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,7,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[206],E,8,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,9,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,10,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[205],E,11,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,12,[[[R[12]],["self"]],[R[2]]]],[11,"hash",R[185],E,2,[[["self"],["__ht"]]]],[11,"deref",E,E,2,[[["self"]],[T]]],[11,"deref",R[205],E,11,[[["self"]],[T]]],[11,"deref",E,E,12,[[["self"]],[T]]]],"p":[[3,R[212]],[8,R[213]],[3,R[214]],[3,"Backoff"],[3,"Parker"],[3,"Unparker"],[3,R[215]],[3,R[216]],[3,"Scope"],[3,R[217]],[3,R[218]],[3,R[219]],[3,R[220]]]};
searchIndex[R[1]]={"doc":"The nodrop crate has the following cargo feature flags:","i":[[3,R[3],R[1],"A type holding T that will not call its destructor on drop",N,N],[11,"new",E,"Create a new NoDrop.",0,[[[T]],[R[1]]]],[11,R[25],E,"Extract the inner value.",0,[[],[T]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"drop",E,E,0,[[["self"]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,"deref",E,E,0,[[["self"]],[T]]]],"p":[[3,R[3]]]};
searchIndex[R[223]]={"doc":"Itertools — extra iterator adaptors, functions and macros.","i":[[4,"Either",R[223],R[285],N,N],[13,"Left",E,R[286],0,N],[13,"Right",E,R[287],0,N],[4,"Diff",E,"A type returned by the `diff_with` function.",N,N],[13,"FirstMismatch",E,"The index of the first non-matching element along with…",1,N],[13,"Shorter",E,"The total number of elements that were in `J` along with…",1,N],[13,"Longer",E,"The total number of elements that were in `I` along with…",1,N],[4,R[260],E,"`MinMaxResult` is an enum returned by `minmax`. See…",N,N],[13,"NoElements",E,"Empty iterator",2,N],[13,"OneElement",E,"Iterator with one element, so the minimum and maximum are…",2,N],[13,"MinMax",E,"More than one element in the iterator, the first element…",2,N],[4,R[531],E,"A value yielded by `WithPosition`. Indicates the position…",N,N],[13,"First",E,"This is the first element.",3,N],[13,"Middle",E,"This is neither the first nor the last element.",3,N],[13,"Last",E,"This is the last element.",3,N],[13,"Only",E,"This is the only element.",3,N],[4,R[261],E,"A value yielded by `ZipLongest`. Contains one or two…",N,N],[13,"Both",E,"Neither input iterator is exhausted yet, yielding two…",4,N],[13,"Left",E,"The parameter iterator of `.zip_longest()` is exhausted,…",4,N],[13,"Right",E,"The `self` iterator of `.zip_longest()` is exhausted, only…",4,N],[4,R[262],E,"An enum used for controlling the execution of…",N,N],[13,"Continue",E,"Continue folding with this value",5,N],[13,"Done",E,"Fold is complete and will return this value",5,N],[5,"concat",E,R[247],N,[[["i"]]]],[5,"cons_tuples",E,"Create an iterator that maps for example iterators of…",N,[[["i"]],["constuples"]]],[5,"diff_with",E,"Compares every element yielded by both `i` and `j` with…",N,[[["i"],["f"],["j"]],[["diff"],[R[24],["diff"]]]]],[5,R[241],E,R[226],N,[[["i"],["f"]],["kmergeby"]]],[5,"process_results",E,"“Lift” a function of the values of an iterator so that it…",N,[[["i"],["f"]],[R[2]]]],[5,"repeat_n",E,"Create an iterator that produces `n` repetitions of…",N,[[["a"],["usize"]],["repeatn"]]],[5,"repeat_call",E,"An iterator source that produces elements indefinitely by…",N,[[["f"]],["repeatcall"]]],[5,"unfold",E,"Creates a new unfold source with the specified closure as…",N,[[["st"],["f"]],["unfold"]]],[5,"iterate",E,"Creates a new iterator that infinitely applies function to…",N,[[["st"],["f"]],["iterate"]]],[5,"multizip",E,"An iterator that generalizes .zip() and allows running…",N,[[[U]],["zip"]]],[5,R[224],E,"Create an iterator that interleaves elements in `i` and `j`.",N,[[["i"],["j"]],[R[224]]]],[5,"merge",E,"Create an iterator that merges elements in `i` and `j`.",N,[[["i"],["j"]],["merge"]]],[5,R[234],E,"Create an iterator where you can put back a single item",N,[[["i"]],["putback"]]],[5,"put_back_n",E,"Create an iterator where you can put back multiple values…",N,[[["i"]],["putbackn"]]],[5,R[225],E,"An iterator adaptor that allows the user to peek at…",N,[[["i"]],[R[225]]]],[5,"kmerge",E,R[226],N,[[["i"]],["kmerge"]]],[5,"zip_eq",E,R[228],N,[[["i"],["j"]],["zipeq"]]],[5,"rciter",E,"Return an iterator inside a `Rc<RefCell<_>>` wrapper.",N,[[["i"]],["rciter"]]],[5,R[227],E,"Iterate `iterable` with a running index.",N,[[["i"]],[R[227]]]],[5,"rev",E,"Iterate `iterable` in reverse.",N,[[["i"]],["rev"]]],[5,"zip",E,R[228],N,[[["i"],["j"]],["zip"]]],[5,"chain",E,"Create an iterator that first iterates `i` and then `j`.",N,[[["i"],["j"]],["chain"]]],[5,"cloned",E,"Create an iterator that clones each element from &T to T",N,[[["i"]],["cloned"]]],[5,"fold",E,"Perform a fold operation over the iterable.",N,[[["i"],["f"],["b"]],["b"]]],[5,"all",E,"Test whether the predicate holds for all elements in the…",N,[[["i"],["f"]],["bool"]]],[5,"any",E,"Test whether the predicate holds for any elements in the…",N,[[["i"],["f"]],["bool"]]],[5,"max",E,"Return the maximum value of the iterable.",N,[[["i"]],[R[24]]]],[5,"min",E,"Return the minimum value of the iterable.",N,[[["i"]],[R[24]]]],[5,"join",E,R[248],N,[[["str"],["i"]],[R[34]]]],[5,"sorted",E,"Collect all the iterable's elements into a sorted vector…",N,[[["i"]],["vec"]]],[5,"equal",E,"Return `true` if both iterators produce equal sequences…",N,[[["i"],["j"]],["bool"]]],[5,"assert_equal",E,"Assert that two iterators produce equal sequences, with…",N,[[["i"],["j"]]]],[5,"partition",E,"Partition a sequence using predicate `pred` so that…",N,[[["i"],["f"]],["usize"]]],[0,"structs",E,"The concrete iterator types.",N,N],[3,"Dedup",R[235],"An iterator adaptor that removes repeated duplicates.",N,N],[3,R[266],E,"An iterator adaptor that alternates elements from two…",N,N],[3,R[267],E,"An iterator adaptor that alternates elements from the two…",N,N],[3,"Product",E,"An iterator adaptor that iterates over the cartesian…",N,N],[3,"PutBack",E,"An iterator adaptor that allows putting back a single item…",N,N],[3,"PutBackN",E,"An iterator adaptor that allows putting multiple items in…",N,N],[3,"Batching",E,R[239],N,N],[3,"Step",E,"An iterator adaptor that steps a number elements in the…",N,N],[3,R[268],E,"An iterator adapter to apply a transformation within a…",N,N],[3,"Merge",E,R[229],N,N],[3,"MergeBy",E,R[229],N,N],[3,R[263],E,"See `multipeek()` for more information.",N,N],[3,R[269],E,"An iterator adaptor that borrows from a `Clone`-able…",N,N],[3,R[270],E,"An iterator adaptor that filters `Option<A>` iterator…",N,N],[3,"Coalesce",E,"An iterator adaptor that may join together adjacent…",N,N],[3,R[271],E,"An iterator to iterate through all combinations in a…",N,N],[3,R[272],E,"An iterator to iterate through all the `n`-length…",N,N],[3,"Unique",E,R[230],N,N],[3,"UniqueBy",E,R[230],N,N],[3,"Flatten",E,"An iterator adapter to simply flatten a structure.",N,N],[3,R[273],E,"An iterator adapter to get the positions of each element…",N,N],[3,R[274],E,"An iterator that maps an iterator of tuples like `((A, B),…",N,N],[3,"Format",E,R[231],N,N],[3,R[275],E,R[231],N,N],[3,R[276],E,"`ChunkLazy` is the storage for a lazy chunking operation.",N,N],[3,"Chunk",E,"An iterator for the elements in a single chunk.",N,N],[3,"Chunks",E,"An iterator that yields the Chunk iterators.",N,N],[3,"GroupBy",E,"`GroupBy` is the storage for the lazy grouping operation.",N,N],[3,"Group",E,"An iterator for the elements in a single group.",N,N],[3,"Groups",E,"An iterator that yields the Group iterators.",N,N],[3,R[277],E,R[236],N,N],[3,"KMerge",E,R[232],N,N],[3,"KMergeBy",E,R[232],N,N],[3,"PadUsing",E,"An iterator adaptor that pads a sequence to a minimum…",N,N],[3,R[278],E,"An iterator adaptor that takes items while a closure…",N,N],[3,R[279],E,"An iterator that produces only the `T` values as long as…",N,N],[3,"RcIter",E,"A wrapper for `Rc<RefCell<I>>`, that implements the…",N,N],[12,"rciter",E,"The boxed iterator.",6,N],[3,"RepeatN",E,"An iterator that produces n repetitions of an element.",N,N],[3,R[280],E,"See `repeat_call` for more information.",N,N],[3,"Unfold",E,"See `unfold` for more information.",N,N],[12,"state",E,"Internal state that will be passed to the closure on the…",7,N],[3,"Iterate",E,"An iterator that infinitely applies function to value and…",N,N],[3,"Tee",E,"One half of an iterator pair where both return the same…",N,N],[3,R[281],E,"An iterator over a incomplete tuple.",N,N],[3,R[282],E,"An iterator over all contiguous windows that produces…",N,N],[3,"Tuples",E,"An iterator that groups the items in tuples of a specific…",N,N],[3,R[283],E,"An iterator adaptor that wraps each element in an…",N,N],[3,"ZipEq",E,R[233],N,N],[3,R[284],E,R[233],N,N],[3,"Zip",E,"See `multizip` for more information.",N,N],[11,"reset_peek",E,"Reset the peeking “cursor”",8,[[["self"]]]],[11,"peek",E,"Works exactly like `.next()` with the only difference that…",8,[[["self"]],[R[24]]]],[11,"with_value",E,"put back value `value` (builder method)",9,[[],["self"]]],[11,"into_parts",E,"Split the `PutBack` into its parts.",9,[[]]],[11,R[234],E,"Put back a single value to the front of the iterator.",9,[[["self"]]]],[11,R[234],E,"Puts x in front of the iterator. The values are yielded in…",10,[[["self"]]]],[11,"into_option",R[223],"`into_option` creates an `Option` of type `(T, T)`. The…",2,[[],[R[24]]]],[11,R[1637],R[235],"Return a buffer with the produced items that was not…",11,[[],["tuplebuffer"]]],[11,R[25],R[223],"Return the inner value.",3,[[],[T]]],[11,"new",R[235],"Deprecated: renamed to multizip",12,[[[U]],["zip"]]],[8,R[264],R[223],"An iterator that allows peeking at an element before…",N,N],[10,R[252],E,"Pass a reference to the next iterator element to the…",13,[[["self"],["f"]],[R[24]]]],[8,R[265],E,"The trait `Itertools`: extra iterator adaptors and methods…",N,N],[11,R[224],E,"Alternate elements from two iterators until both have run…",14,[[["j"]],[R[224]]]],[11,R[1511],E,"Alternate elements from two iterators until at least one…",14,[[["j"]],[R[254]]]],[11,R[237],E,R[236],14,[[],[R[237]]]],[11,"zip_longest",E,R[238],14,[[["j"]],[R[258]]]],[11,"zip_eq",E,R[238],14,[[["j"]],["zipeq"]]],[11,R[255],E,R[239],14,[[["f"]],[R[255]]]],[11,"group_by",E,"Return an iterable that can group iterator elements.…",14,[[["f"]],["groupby"]]],[11,"chunks",E,"Return an iterable that can chunk the iterator.",14,[[["usize"]],["intochunks"]]],[11,"tuple_windows",E,"Return an iterator over all contiguous windows producing…",14,[[],["tuplewindows"]]],[11,"tuples",E,"Return an iterator that groups the items in tuples of a…",14,[[],["tuples"]]],[11,"tee",E,"Split into an iterator pair that both yield all elements…",14,[[]]],[11,"step",E,"Return an iterator adaptor that steps `n` elements in the…",14,[[["usize"]],["step"]]],[11,"map_results",E,"Return an iterator adaptor that applies the provided…",14,[[["f"]],["mapresults"]]],[11,"merge",E,R[240],14,[[["j"]],["merge"]]],[11,"merge_by",E,R[240],14,[[["f"],["j"]],["mergeby"]]],[11,"kmerge",E,R[242],14,[[],["kmerge"]]],[11,R[241],E,R[242],14,[[["f"]],["kmergeby"]]],[11,"cartesian_product",E,R[244],14,[[["j"]],["product"]]],[11,"coalesce",E,"Return an iterator adaptor that uses the passed-in closure…",14,[[["f"]],["coalesce"]]],[11,"dedup",E,"Remove duplicates from sections of consecutive identical…",14,[[],["dedup"]]],[11,"unique",E,R[243],14,[[],["unique"]]],[11,"unique_by",E,R[243],14,[[["f"]],["uniqueby"]]],[11,"peeking_take_while",E,"Return an iterator adaptor that borrows from this iterator…",14,[[["self"],["f"]],["peekingtakewhile"]]],[11,"take_while_ref",E,"Return an iterator adaptor that borrows from a…",14,[[["self"],["f"]],["takewhileref"]]],[11,"while_some",E,"Return an iterator adaptor that filters `Option<A>`…",14,[[],[R[256]]]],[11,"tuple_combinations",E,R[244],14,[[],["tuplecombinations"]]],[11,R[245],E,R[244],14,[[["usize"]],[R[245]]]],[11,"pad_using",E,"Return an iterator adaptor that pads the sequence to a…",14,[[["f"],["usize"]],["padusing"]]],[11,"flatten",E,"Unravel a nested iterator.",14,[[],["flatten"]]],[11,"with_position",E,"Return an iterator adaptor that wraps each element in a…",14,[[],["withposition"]]],[11,R[246],E,"Return an iterator adaptor that yields the indices of all…",14,[[["p"]],[R[246]]]],[11,"next_tuple",E,"Advances the iterator and returns the next items grouped…",14,[[["self"]],[R[24]]]],[11,"find_position",E,"Find the position and value of the first element…",14,[[["self"],["p"]],[R[24]]]],[11,"all_equal",E,"Check whether all elements compare equal.",14,[[["self"]],["bool"]]],[11,"dropping",E,"Consume the first `n` elements from the iterator eagerly,…",14,[[["usize"]],["self"]]],[11,"dropping_back",E,"Consume the last `n` elements from the iterator eagerly,…",14,[[["usize"]],["self"]]],[11,"foreach",E,"Run the closure `f` eagerly on each element of the iterator.",14,[[["f"]]]],[11,"concat",E,R[247],14,[[]]],[11,"collect_vec",E,"`.collect_vec()` is simply a type specialization of…",14,[[],["vec"]]],[11,"set_from",E,"Assign to each reference in `self` from the `from`…",14,[[["self"],["j"]],["usize"]]],[11,"join",E,R[248],14,[[["str"],["self"]],[R[34]]]],[11,"format",E,R[249],14,[[["str"]],["format"]]],[11,"format_with",E,R[249],14,[[["str"],["f"]],["formatwith"]]],[11,"fold_results",E,"Fold `Result` values from an iterator.",14,[[["self"],["f"],["b"]],[R[2]]]],[11,"fold_options",E,"Fold `Option` values from an iterator.",14,[[["self"],["f"],["b"]],[R[24]]]],[11,"fold1",E,"Accumulator of the elements in the iterator.",14,[[["f"]],[R[24]]]],[11,"fold_while",E,"An iterator method that applies a function, producing a…",14,[[["self"],["f"],["b"]],[R[259]]]],[11,"sorted",E,"Collect all iterator elements into a sorted vector in…",14,[[],["vec"]]],[11,"sorted_by",E,"Collect all iterator elements into a sorted vector.",14,[[["f"]],["vec"]]],[11,R[1512],E,"Collect all iterator elements into one of two partitions.…",14,[[["f"]]]],[11,"minmax",E,"Return the minimum and maximum elements in the iterator.",14,[[],[R[250]]]],[11,"minmax_by_key",E,R[251],14,[[["f"]],[R[250]]]],[11,"minmax_by",E,R[251],14,[[["f"]],[R[250]]]],[11,R[25],E,"Return the value in the continue or done.",5,[[],[T]]],[11,"is_done",E,"Return true if `self` is `Done`, false if it is `Continue`.",5,[[["self"]],["bool"]]],[14,"iproduct",E,"Create an iterator over the “cartesian product” of…",N,N],[14,"izip",E,"Create an iterator running multiple iterators in lockstep.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[22],E,E,0,[[],["i"]]],[11,"into",E,E,0,[[],[U]]],[11,R[66],E,E,0,[[["self"]],[T]]],[11,R[67],E,E,0,[[[T],["self"]]]],[11,R[161],E,E,0,[[["self"]],[R[34]]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[66],E,E,2,[[["self"]],[T]]],[11,R[67],E,E,2,[[[T],["self"]]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[66],E,E,3,[[["self"]],[T]]],[11,R[67],E,E,3,[[[T],["self"]]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[66],E,E,4,[[["self"]],[T]]],[11,R[67],E,E,4,[[[T],["self"]]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[30]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[66],E,E,5,[[["self"]],[T]]],[11,R[67],E,E,5,[[[T],["self"]]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[30]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,"from",R[235],E,15,[[[T]],[T]]],[11,R[22],E,E,15,[[],["i"]]],[11,"into",E,E,15,[[],[U]]],[11,R[66],E,E,15,[[["self"]],[T]]],[11,R[67],E,E,15,[[[T],["self"]]]],[11,R[8],E,E,15,[[[U]],[R[2]]]],[11,R[29],E,E,15,[[["self"]],[T]]],[11,R[15],E,E,15,[[["self"]],[R[30]]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[],[R[2]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[22],E,E,16,[[],["i"]]],[11,"into",E,E,16,[[],[U]]],[11,R[66],E,E,16,[[["self"]],[T]]],[11,R[67],E,E,16,[[[T],["self"]]]],[11,R[8],E,E,16,[[[U]],[R[2]]]],[11,R[29],E,E,16,[[["self"]],[T]]],[11,R[15],E,E,16,[[["self"]],[R[30]]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[9],E,E,16,[[],[R[2]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[22],E,E,17,[[],["i"]]],[11,"into",E,E,17,[[],[U]]],[11,R[66],E,E,17,[[["self"]],[T]]],[11,R[67],E,E,17,[[[T],["self"]]]],[11,R[8],E,E,17,[[[U]],[R[2]]]],[11,R[29],E,E,17,[[["self"]],[T]]],[11,R[15],E,E,17,[[["self"]],[R[30]]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[9],E,E,17,[[],[R[2]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[22],E,E,18,[[],["i"]]],[11,"into",E,E,18,[[],[U]]],[11,R[66],E,E,18,[[["self"]],[T]]],[11,R[67],E,E,18,[[[T],["self"]]]],[11,R[8],E,E,18,[[[U]],[R[2]]]],[11,R[29],E,E,18,[[["self"]],[T]]],[11,R[15],E,E,18,[[["self"]],[R[30]]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[9],E,E,18,[[],[R[2]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[22],E,E,9,[[],["i"]]],[11,"into",E,E,9,[[],[U]]],[11,R[66],E,E,9,[[["self"]],[T]]],[11,R[67],E,E,9,[[[T],["self"]]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[29],E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"]],[R[30]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[22],E,E,10,[[],["i"]]],[11,"into",E,E,10,[[],[U]]],[11,R[66],E,E,10,[[["self"]],[T]]],[11,R[67],E,E,10,[[[T],["self"]]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[29],E,E,10,[[["self"]],[T]]],[11,R[15],E,E,10,[[["self"]],[R[30]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[22],E,E,19,[[],["i"]]],[11,"into",E,E,19,[[],[U]]],[11,R[66],E,E,19,[[["self"]],[T]]],[11,R[67],E,E,19,[[[T],["self"]]]],[11,R[8],E,E,19,[[[U]],[R[2]]]],[11,R[29],E,E,19,[[["self"]],[T]]],[11,R[15],E,E,19,[[["self"]],[R[30]]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[9],E,E,19,[[],[R[2]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[22],E,E,20,[[],["i"]]],[11,"into",E,E,20,[[],[U]]],[11,R[66],E,E,20,[[["self"]],[T]]],[11,R[67],E,E,20,[[[T],["self"]]]],[11,R[8],E,E,20,[[[U]],[R[2]]]],[11,R[29],E,E,20,[[["self"]],[T]]],[11,R[15],E,E,20,[[["self"]],[R[30]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[],[R[2]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[22],E,E,21,[[],["i"]]],[11,"into",E,E,21,[[],[U]]],[11,R[8],E,E,21,[[[U]],[R[2]]]],[11,R[29],E,E,21,[[["self"]],[T]]],[11,R[15],E,E,21,[[["self"]],[R[30]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[],[R[2]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[22],E,E,22,[[],["i"]]],[11,"into",E,E,22,[[],[U]]],[11,R[66],E,E,22,[[["self"]],[T]]],[11,R[67],E,E,22,[[[T],["self"]]]],[11,R[8],E,E,22,[[[U]],[R[2]]]],[11,R[29],E,E,22,[[["self"]],[T]]],[11,R[15],E,E,22,[[["self"]],[R[30]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[],[R[2]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[22],E,E,23,[[],["i"]]],[11,"into",E,E,23,[[],[U]]],[11,R[66],E,E,23,[[["self"]],[T]]],[11,R[67],E,E,23,[[[T],["self"]]]],[11,R[8],E,E,23,[[[U]],[R[2]]]],[11,R[29],E,E,23,[[["self"]],[T]]],[11,R[15],E,E,23,[[["self"]],[R[30]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[],[R[2]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[22],E,E,8,[[],["i"]]],[11,"into",E,E,8,[[],[U]]],[11,R[66],E,E,8,[[["self"]],[T]]],[11,R[67],E,E,8,[[[T],["self"]]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[R[30]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[22],E,E,24,[[],["i"]]],[11,"into",E,E,24,[[],[U]]],[11,R[8],E,E,24,[[[U]],[R[2]]]],[11,R[29],E,E,24,[[["self"]],[T]]],[11,R[15],E,E,24,[[["self"]],[R[30]]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[],[R[2]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[22],E,E,25,[[],["i"]]],[11,"into",E,E,25,[[],[U]]],[11,R[66],E,E,25,[[["self"]],[T]]],[11,R[67],E,E,25,[[[T],["self"]]]],[11,R[8],E,E,25,[[[U]],[R[2]]]],[11,R[29],E,E,25,[[["self"]],[T]]],[11,R[15],E,E,25,[[["self"]],[R[30]]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[9],E,E,25,[[],[R[2]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[22],E,E,26,[[],["i"]]],[11,"into",E,E,26,[[],[U]]],[11,R[66],E,E,26,[[["self"]],[T]]],[11,R[67],E,E,26,[[[T],["self"]]]],[11,R[8],E,E,26,[[[U]],[R[2]]]],[11,R[29],E,E,26,[[["self"]],[T]]],[11,R[15],E,E,26,[[["self"]],[R[30]]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[9],E,E,26,[[],[R[2]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[22],E,E,27,[[],["i"]]],[11,"into",E,E,27,[[],[U]]],[11,R[8],E,E,27,[[[U]],[R[2]]]],[11,R[29],E,E,27,[[["self"]],[T]]],[11,R[15],E,E,27,[[["self"]],[R[30]]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[],[R[2]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[22],E,E,28,[[],["i"]]],[11,"into",E,E,28,[[],[U]]],[11,R[8],E,E,28,[[[U]],[R[2]]]],[11,R[29],E,E,28,[[["self"]],[T]]],[11,R[15],E,E,28,[[["self"]],[R[30]]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[],[R[2]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[22],E,E,29,[[],["i"]]],[11,"into",E,E,29,[[],[U]]],[11,R[66],E,E,29,[[["self"]],[T]]],[11,R[67],E,E,29,[[[T],["self"]]]],[11,R[8],E,E,29,[[[U]],[R[2]]]],[11,R[29],E,E,29,[[["self"]],[T]]],[11,R[15],E,E,29,[[["self"]],[R[30]]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[],[R[2]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[22],E,E,30,[[],["i"]]],[11,"into",E,E,30,[[],[U]]],[11,R[66],E,E,30,[[["self"]],[T]]],[11,R[67],E,E,30,[[[T],["self"]]]],[11,R[8],E,E,30,[[[U]],[R[2]]]],[11,R[29],E,E,30,[[["self"]],[T]]],[11,R[15],E,E,30,[[["self"]],[R[30]]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[],[R[2]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[22],E,E,31,[[],["i"]]],[11,"into",E,E,31,[[],[U]]],[11,R[66],E,E,31,[[["self"]],[T]]],[11,R[67],E,E,31,[[[T],["self"]]]],[11,R[8],E,E,31,[[[U]],[R[2]]]],[11,R[29],E,E,31,[[["self"]],[T]]],[11,R[15],E,E,31,[[["self"]],[R[30]]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[],[R[2]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[22],E,E,32,[[],["i"]]],[11,"into",E,E,32,[[],[U]]],[11,R[8],E,E,32,[[[U]],[R[2]]]],[11,R[29],E,E,32,[[["self"]],[T]]],[11,R[15],E,E,32,[[["self"]],[R[30]]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[],[R[2]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[22],E,E,33,[[],["i"]]],[11,"into",E,E,33,[[],[U]]],[11,R[66],E,E,33,[[["self"]],[T]]],[11,R[67],E,E,33,[[[T],["self"]]]],[11,R[8],E,E,33,[[[U]],[R[2]]]],[11,R[29],E,E,33,[[["self"]],[T]]],[11,R[15],E,E,33,[[["self"]],[R[30]]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[9],E,E,33,[[],[R[2]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[66],E,E,34,[[["self"]],[T]]],[11,R[67],E,E,34,[[[T],["self"]]]],[11,R[161],E,E,34,[[["self"]],[R[34]]]],[11,R[8],E,E,34,[[[U]],[R[2]]]],[11,R[29],E,E,34,[[["self"]],[T]]],[11,R[15],E,E,34,[[["self"]],[R[30]]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[9],E,E,34,[[],[R[2]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[161],E,E,35,[[["self"]],[R[34]]]],[11,R[8],E,E,35,[[[U]],[R[2]]]],[11,R[29],E,E,35,[[["self"]],[T]]],[11,R[15],E,E,35,[[["self"]],[R[30]]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[9],E,E,35,[[],[R[2]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[8],E,E,36,[[[U]],[R[2]]]],[11,R[29],E,E,36,[[["self"]],[T]]],[11,R[15],E,E,36,[[["self"]],[R[30]]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[9],E,E,36,[[],[R[2]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[22],E,E,37,[[],["i"]]],[11,"into",E,E,37,[[],[U]]],[11,R[8],E,E,37,[[[U]],[R[2]]]],[11,R[29],E,E,37,[[["self"]],[T]]],[11,R[15],E,E,37,[[["self"]],[R[30]]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[9],E,E,37,[[],[R[2]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[22],E,E,38,[[],["i"]]],[11,"into",E,E,38,[[],[U]]],[11,R[8],E,E,38,[[[U]],[R[2]]]],[11,R[29],E,E,38,[[["self"]],[T]]],[11,R[15],E,E,38,[[["self"]],[R[30]]]],[11,R[10],E,E,38,[[["self"]],[T]]],[11,R[9],E,E,38,[[],[R[2]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[8],E,E,39,[[[U]],[R[2]]]],[11,R[29],E,E,39,[[["self"]],[T]]],[11,R[15],E,E,39,[[["self"]],[R[30]]]],[11,R[10],E,E,39,[[["self"]],[T]]],[11,R[9],E,E,39,[[],[R[2]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[22],E,E,40,[[],["i"]]],[11,"into",E,E,40,[[],[U]]],[11,R[8],E,E,40,[[[U]],[R[2]]]],[11,R[29],E,E,40,[[["self"]],[T]]],[11,R[15],E,E,40,[[["self"]],[R[30]]]],[11,R[10],E,E,40,[[["self"]],[T]]],[11,R[9],E,E,40,[[],[R[2]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[22],E,E,41,[[],["i"]]],[11,"into",E,E,41,[[],[U]]],[11,R[8],E,E,41,[[[U]],[R[2]]]],[11,R[29],E,E,41,[[["self"]],[T]]],[11,R[15],E,E,41,[[["self"]],[R[30]]]],[11,R[10],E,E,41,[[["self"]],[T]]],[11,R[9],E,E,41,[[],[R[2]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[22],E,E,42,[[],["i"]]],[11,"into",E,E,42,[[],[U]]],[11,R[66],E,E,42,[[["self"]],[T]]],[11,R[67],E,E,42,[[[T],["self"]]]],[11,R[8],E,E,42,[[[U]],[R[2]]]],[11,R[29],E,E,42,[[["self"]],[T]]],[11,R[15],E,E,42,[[["self"]],[R[30]]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[9],E,E,42,[[],[R[2]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[22],E,E,43,[[],["i"]]],[11,"into",E,E,43,[[],[U]]],[11,R[66],E,E,43,[[["self"]],[T]]],[11,R[67],E,E,43,[[[T],["self"]]]],[11,R[8],E,E,43,[[[U]],[R[2]]]],[11,R[29],E,E,43,[[["self"]],[T]]],[11,R[15],E,E,43,[[["self"]],[R[30]]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[9],E,E,43,[[],[R[2]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[22],E,E,44,[[],["i"]]],[11,"into",E,E,44,[[],[U]]],[11,R[8],E,E,44,[[[U]],[R[2]]]],[11,R[29],E,E,44,[[["self"]],[T]]],[11,R[15],E,E,44,[[["self"]],[R[30]]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[9],E,E,44,[[],[R[2]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[22],E,E,45,[[],["i"]]],[11,"into",E,E,45,[[],[U]]],[11,R[66],E,E,45,[[["self"]],[T]]],[11,R[67],E,E,45,[[[T],["self"]]]],[11,R[8],E,E,45,[[[U]],[R[2]]]],[11,R[29],E,E,45,[[["self"]],[T]]],[11,R[15],E,E,45,[[["self"]],[R[30]]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[9],E,E,45,[[],[R[2]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[22],E,E,46,[[],["i"]]],[11,"into",E,E,46,[[],[U]]],[11,R[8],E,E,46,[[[U]],[R[2]]]],[11,R[29],E,E,46,[[["self"]],[T]]],[11,R[15],E,E,46,[[["self"]],[R[30]]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[9],E,E,46,[[],[R[2]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[22],E,E,47,[[],["i"]]],[11,"into",E,E,47,[[],[U]]],[11,R[8],E,E,47,[[[U]],[R[2]]]],[11,R[29],E,E,47,[[["self"]],[T]]],[11,R[15],E,E,47,[[["self"]],[R[30]]]],[11,R[10],E,E,47,[[["self"]],[T]]],[11,R[9],E,E,47,[[],[R[2]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[22],E,E,6,[[],["i"]]],[11,"into",E,E,6,[[],[U]]],[11,R[66],E,E,6,[[["self"]],[T]]],[11,R[67],E,E,6,[[[T],["self"]]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[30]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[22],E,E,48,[[],["i"]]],[11,"into",E,E,48,[[],[U]]],[11,R[8],E,E,48,[[[U]],[R[2]]]],[11,R[29],E,E,48,[[["self"]],[T]]],[11,R[15],E,E,48,[[["self"]],[R[30]]]],[11,R[10],E,E,48,[[["self"]],[T]]],[11,R[9],E,E,48,[[],[R[2]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[22],E,E,49,[[],["i"]]],[11,"into",E,E,49,[[],[U]]],[11,R[8],E,E,49,[[[U]],[R[2]]]],[11,R[29],E,E,49,[[["self"]],[T]]],[11,R[15],E,E,49,[[["self"]],[R[30]]]],[11,R[10],E,E,49,[[["self"]],[T]]],[11,R[9],E,E,49,[[],[R[2]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[22],E,E,7,[[],["i"]]],[11,"into",E,E,7,[[],[U]]],[11,R[66],E,E,7,[[["self"]],[T]]],[11,R[67],E,E,7,[[[T],["self"]]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[30]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[22],E,E,50,[[],["i"]]],[11,"into",E,E,50,[[],[U]]],[11,R[66],E,E,50,[[["self"]],[T]]],[11,R[67],E,E,50,[[[T],["self"]]]],[11,R[8],E,E,50,[[[U]],[R[2]]]],[11,R[29],E,E,50,[[["self"]],[T]]],[11,R[15],E,E,50,[[["self"]],[R[30]]]],[11,R[10],E,E,50,[[["self"]],[T]]],[11,R[9],E,E,50,[[],[R[2]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[22],E,E,51,[[],["i"]]],[11,"into",E,E,51,[[],[U]]],[11,R[8],E,E,51,[[[U]],[R[2]]]],[11,R[29],E,E,51,[[["self"]],[T]]],[11,R[15],E,E,51,[[["self"]],[R[30]]]],[11,R[10],E,E,51,[[["self"]],[T]]],[11,R[9],E,E,51,[[],[R[2]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[22],E,E,52,[[],["i"]]],[11,"into",E,E,52,[[],[U]]],[11,R[8],E,E,52,[[[U]],[R[2]]]],[11,R[29],E,E,52,[[["self"]],[T]]],[11,R[15],E,E,52,[[["self"]],[R[30]]]],[11,R[10],E,E,52,[[["self"]],[T]]],[11,R[9],E,E,52,[[],[R[2]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[22],E,E,53,[[],["i"]]],[11,"into",E,E,53,[[],[U]]],[11,R[8],E,E,53,[[[U]],[R[2]]]],[11,R[29],E,E,53,[[["self"]],[T]]],[11,R[15],E,E,53,[[["self"]],[R[30]]]],[11,R[10],E,E,53,[[["self"]],[T]]],[11,R[9],E,E,53,[[],[R[2]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[22],E,E,11,[[],["i"]]],[11,"into",E,E,11,[[],[U]]],[11,R[8],E,E,11,[[[U]],[R[2]]]],[11,R[29],E,E,11,[[["self"]],[T]]],[11,R[15],E,E,11,[[["self"]],[R[30]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[],[R[2]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[22],E,E,54,[[],["i"]]],[11,"into",E,E,54,[[],[U]]],[11,R[8],E,E,54,[[[U]],[R[2]]]],[11,R[29],E,E,54,[[["self"]],[T]]],[11,R[15],E,E,54,[[["self"]],[R[30]]]],[11,R[10],E,E,54,[[["self"]],[T]]],[11,R[9],E,E,54,[[],[R[2]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[22],E,E,55,[[],["i"]]],[11,"into",E,E,55,[[],[U]]],[11,R[66],E,E,55,[[["self"]],[T]]],[11,R[67],E,E,55,[[[T],["self"]]]],[11,R[8],E,E,55,[[[U]],[R[2]]]],[11,R[29],E,E,55,[[["self"]],[T]]],[11,R[15],E,E,55,[[["self"]],[R[30]]]],[11,R[10],E,E,55,[[["self"]],[T]]],[11,R[9],E,E,55,[[],[R[2]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[22],E,E,56,[[],["i"]]],[11,"into",E,E,56,[[],[U]]],[11,R[66],E,E,56,[[["self"]],[T]]],[11,R[67],E,E,56,[[[T],["self"]]]],[11,R[8],E,E,56,[[[U]],[R[2]]]],[11,R[29],E,E,56,[[["self"]],[T]]],[11,R[15],E,E,56,[[["self"]],[R[30]]]],[11,R[10],E,E,56,[[["self"]],[T]]],[11,R[9],E,E,56,[[],[R[2]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[22],E,E,12,[[],["i"]]],[11,"into",E,E,12,[[],[U]]],[11,R[66],E,E,12,[[["self"]],[T]]],[11,R[67],E,E,12,[[[T],["self"]]]],[11,R[8],E,E,12,[[[U]],[R[2]]]],[11,R[29],E,E,12,[[["self"]],[T]]],[11,R[15],E,E,12,[[["self"]],[R[30]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[],[R[2]]]],[11,R[62],R[223],E,0,[[["self"],[R[17]]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,0,[[["self"],[R[17]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[17]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[17]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[17]]],["bool"]]],[11,"from",E,E,0,[[[R[2]]],[R[17]]]],[11,"as_ref",E,E,0,[[["self"]],["target"]]],[11,"as_ref",E,E,0,[[["self"]]]],[11,"as_ref",E,E,0,[[["self"]],["str"]]],[11,"as_mut",E,E,0,[[["self"]],["str"]]],[11,"as_mut",E,E,0,[[["self"]]]],[11,"as_mut",E,E,0,[[["self"]],["target"]]],[11,"extend",E,E,0,[[["self"],[T]]]],[11,"clone",E,E,0,[[["self"]],[R[17]]]],[11,"cmp",E,E,0,[[["self"],[R[17]]],[R[23]]]],[11,R[101],E,E,0,[[["self"]],[R[24]]]],[11,"hash",E,E,0,[[["__hlr"],["self"]]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"next",E,E,0,[[["self"]],[R[24]]]],[11,R[104],E,E,0,[[["self"]]]],[11,"fold",E,E,0,[[["g"],["acc"]],["acc"]]],[11,"count",E,E,0,[[],["usize"]]],[11,"last",E,E,0,[[],[R[24]]]],[11,"nth",E,E,0,[[["self"],["usize"]],[R[24]]]],[11,"collect",E,E,0,[[],["b"]]],[11,"all",E,E,0,[[["self"],["f"]],["bool"]]],[11,R[16],E,E,0,[[["self"]]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"eq",E,E,0,[[["self"],[R[17]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[17]]],["bool"]]],[11,"deref",E,E,0,[[["self"]]]],[11,"into",E,E,0,[[],[R[2]]]],[11,R[252],R[235],E,9,[[["self"],["f"]],[R[24]]]],[11,R[252],E,E,10,[[["self"],["f"]],[R[24]]]],[11,"eq",R[223],E,2,[[["self"],[R[250]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[250]]],["bool"]]],[11,"eq",E,E,3,[[[R[257]],["self"]],["bool"]]],[11,"ne",E,E,3,[[[R[257]],["self"]],["bool"]]],[11,"eq",E,E,4,[[[R[253]],["self"]],["bool"]]],[11,"ne",E,E,4,[[[R[253]],["self"]],["bool"]]],[11,R[101],R[235],E,32,[[["self"]],[R[24]]]],[11,R[101],E,E,33,[[["self"]],[R[24]]]],[11,R[101],E,E,33,[[["self"]],[R[24]]]],[11,R[101],E,E,33,[[["self"]],[R[24]]]],[11,R[101],E,E,33,[[["self"]],[R[24]]]],[11,R[101],E,E,33,[[["self"]],[R[24]]]],[11,R[101],E,E,33,[[["self"]],[R[24]]]],[11,R[101],E,E,45,[[["self"]],[R[24]]]],[11,R[101],E,E,6,[[["self"]],[R[24]]]],[11,R[101],E,E,48,[[["self"]],[R[24]]]],[11,R[101],E,E,56,[[["self"]],[R[24]]]],[11,"clone",E,E,8,[[["self"]],[R[225]]]],[11,"clone",E,E,16,[[["self"]],[R[224]]]],[11,"clone",E,E,17,[[["self"]],[R[254]]]],[11,"clone",E,E,9,[[["self"]],["putback"]]],[11,"clone",E,E,10,[[["self"]],["putbackn"]]],[11,"clone",E,E,18,[[["self"]],["product"]]],[11,"clone",E,E,19,[[["self"]],[R[255]]]],[11,"clone",E,E,20,[[["self"]],["step"]]],[11,"clone",E,E,22,[[["self"]],["self"]]],[11,"clone",E,E,23,[[["self"]],["self"]]],[11,"clone",E,E,26,[[["self"]],["self"]]],[11,"clone",E,E,15,[[["self"]],["self"]]],[11,"clone",E,E,25,[[["self"]],[R[256]]]],[11,"clone",E,E,30,[[["self"]],["uniqueby"]]],[11,"clone",E,E,29,[[["self"]],["unique"]]],[11,"clone",E,E,31,[[["self"]],["flatten"]]],[11,"clone",E,E,33,[[["self"]],["self"]]],[11,"clone",E,E,34,[[["self"]],["format"]]],[11,"clone",E,E,42,[[["self"]],[R[237]]]],[11,"clone",E,E,43,[[["self"]],["kmerge"]]],[11,"clone",R[223],E,2,[[["self"]],[R[250]]]],[11,"clone",R[235],E,45,[[["self"]],["padusing"]]],[11,"clone",E,E,6,[[["self"]],["rciter"]]],[11,"clone",E,E,7,[[["self"]],["unfold"]]],[11,"clone",E,E,50,[[["self"]],["iterate"]]],[11,"clone",R[223],E,3,[[["self"]],[R[257]]]],[11,"clone",R[235],E,55,[[["self"]],["zipeq"]]],[11,"clone",E,E,56,[[["self"]],[R[258]]]],[11,"clone",R[223],E,4,[[["self"]],[R[253]]]],[11,"clone",R[235],E,12,[[["self"]],["zip"]]],[11,"clone",R[223],E,5,[[["self"]],[R[259]]]],[11,"from",R[235],E,12,[[],["self"]]],[11,"from",E,E,12,[[],["self"]]],[11,"from",E,E,12,[[],["self"]]],[11,"from",E,E,12,[[],["self"]]],[11,"from",E,E,12,[[],["self"]]],[11,"from",E,E,12,[[],["self"]]],[11,"from",E,E,12,[[],["self"]]],[11,"from",E,E,12,[[],["self"]]],[11,"drop",E,E,40,[[["self"]]]],[11,"drop",E,E,37,[[["self"]]]],[11,"next",E,E,8,[[["self"]],[R[24]]]],[11,R[104],E,E,8,[[["self"]]]],[11,"next",E,E,16,[[["self"]],[R[24]]]],[11,R[104],E,E,16,[[["self"]]]],[11,"next",E,E,17,[[["self"]],[R[24]]]],[11,R[104],E,E,17,[[["self"]]]],[11,"next",E,E,9,[[["self"]],[R[24]]]],[11,R[104],E,E,9,[[["self"]]]],[11,"all",E,E,9,[[["self"],["g"]],["bool"]]],[11,"fold",E,E,9,[[["g"],["acc"]],["acc"]]],[11,"next",E,E,10,[[["self"]],[R[24]]]],[11,R[104],E,E,10,[[["self"]]]],[11,"next",E,E,18,[[["self"]],[R[24]]]],[11,R[104],E,E,18,[[["self"]]]],[11,"fold",E,E,18,[[["g"],["acc"]],["acc"]]],[11,"next",E,E,19,[[["self"]],[R[24]]]],[11,R[104],E,E,19,[[["self"]]]],[11,"next",E,E,20,[[["self"]],[R[24]]]],[11,R[104],E,E,20,[[["self"]]]],[11,"next",E,E,22,[[["self"]],[R[24]]]],[11,R[104],E,E,22,[[["self"]]]],[11,"next",E,E,23,[[["self"]],[R[24]]]],[11,R[104],E,E,23,[[["self"]]]],[11,"next",E,E,26,[[["self"]],[R[24]]]],[11,R[104],E,E,26,[[["self"]]]],[11,"next",E,E,15,[[["self"]],[R[24]]]],[11,R[104],E,E,15,[[["self"]]]],[11,"fold",E,E,15,[[["g"],["acc"]],["acc"]]],[11,"next",E,E,24,[[["self"]],[R[24]]]],[11,R[104],E,E,24,[[["self"]]]],[11,"next",E,E,25,[[["self"]],[R[24]]]],[11,R[104],E,E,25,[[["self"]]]],[11,"next",E,E,27,[[["self"]],[R[24]]]],[11,"next",E,E,28,[[["self"]],[R[24]]]],[11,"next",E,E,30,[[["self"]],[R[24]]]],[11,R[104],E,E,30,[[["self"]]]],[11,"next",E,E,29,[[["self"]],[R[24]]]],[11,R[104],E,E,29,[[["self"]]]],[11,"next",E,E,31,[[["self"]],[R[24]]]],[11,"fold",E,E,31,[[["g"],["acc"]],["acc"]]],[11,"next",E,E,21,[[["self"]],[R[24]]]],[11,R[104],E,E,21,[[["self"]]]],[11,"next",E,E,32,[[["self"]],[R[24]]]],[11,R[104],E,E,32,[[["self"]]]],[11,"next",E,E,33,[[["self"]],[R[24]]]],[11,R[104],E,E,33,[[["self"]]]],[11,"fold",E,E,33,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,33,[[["self"]],[R[24]]]],[11,R[104],E,E,33,[[["self"]]]],[11,"fold",E,E,33,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,33,[[["self"]],[R[24]]]],[11,R[104],E,E,33,[[["self"]]]],[11,"fold",E,E,33,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,33,[[["self"]],[R[24]]]],[11,R[104],E,E,33,[[["self"]]]],[11,"fold",E,E,33,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,33,[[["self"]],[R[24]]]],[11,R[104],E,E,33,[[["self"]]]],[11,"fold",E,E,33,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,33,[[["self"]],[R[24]]]],[11,R[104],E,E,33,[[["self"]]]],[11,"fold",E,E,33,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,41,[[["self"]],[R[24]]]],[11,"next",E,E,40,[[["self"]],[R[24]]]],[11,"next",E,E,38,[[["self"]],[R[24]]]],[11,"next",E,E,37,[[["self"]],[R[24]]]],[11,"next",E,E,42,[[["self"]],[R[24]]]],[11,R[104],E,E,42,[[["self"]]]],[11,"next",E,E,43,[[["self"]],[R[24]]]],[11,R[104],E,E,43,[[["self"]]]],[11,"next",E,E,44,[[["self"]],[R[24]]]],[11,R[104],E,E,44,[[["self"]]]],[11,"next",E,E,45,[[["self"]],[R[24]]]],[11,R[104],E,E,45,[[["self"]]]],[11,"next",E,E,46,[[["self"]],[R[24]]]],[11,R[104],E,E,46,[[["self"]]]],[11,"next",E,E,47,[[["self"]],[R[24]]]],[11,R[104],E,E,47,[[["self"]]]],[11,"next",E,E,6,[[["self"]],[R[24]]]],[11,R[104],E,E,6,[[["self"]]]],[11,"next",E,E,48,[[["self"]],[R[24]]]],[11,R[104],E,E,48,[[["self"]]]],[11,"next",E,E,49,[[["self"]],[R[24]]]],[11,R[104],E,E,49,[[["self"]]]],[11,"next",E,E,7,[[["self"]],[R[24]]]],[11,R[104],E,E,7,[[["self"]]]],[11,"next",E,E,50,[[["self"]],[R[24]]]],[11,R[104],E,E,50,[[["self"]]]],[11,"next",E,E,51,[[["self"]],[R[24]]]],[11,R[104],E,E,51,[[["self"]]]],[11,"next",E,E,52,[[["self"]],[R[24]]]],[11,R[104],E,E,52,[[["self"]]]],[11,"next",E,E,11,[[["self"]],[R[24]]]],[11,"next",E,E,53,[[["self"]],[R[24]]]],[11,"next",E,E,54,[[["self"]],[R[24]]]],[11,R[104],E,E,54,[[["self"]]]],[11,"next",E,E,55,[[["self"]],[R[24]]]],[11,R[104],E,E,55,[[["self"]]]],[11,"next",E,E,56,[[["self"]],[R[24]]]],[11,R[104],E,E,56,[[["self"]]]],[11,"next",E,E,12,[[["self"]],[R[24]]]],[11,R[104],E,E,12,[[["self"]]]],[11,"next",E,E,12,[[["self"]],[R[24]]]],[11,R[104],E,E,12,[[["self"]]]],[11,"next",E,E,12,[[["self"]],[R[24]]]],[11,R[104],E,E,12,[[["self"]]]],[11,"next",E,E,12,[[["self"]],[R[24]]]],[11,R[104],E,E,12,[[["self"]]]],[11,"next",E,E,12,[[["self"]],[R[24]]]],[11,R[104],E,E,12,[[["self"]]]],[11,"next",E,E,12,[[["self"]],[R[24]]]],[11,R[104],E,E,12,[[["self"]]]],[11,"next",E,E,12,[[["self"]],[R[24]]]],[11,R[104],E,E,12,[[["self"]]]],[11,"next",E,E,12,[[["self"]],[R[24]]]],[11,R[104],E,E,12,[[["self"]]]],[11,"fmt",E,E,8,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,16,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,17,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,9,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,10,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,18,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,19,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",E,E,20,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,22,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",E,E,23,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",E,E,26,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",E,E,15,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",E,E,24,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",E,E,25,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,27,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,28,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",E,E,30,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",E,E,29,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",E,E,31,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,34,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[223],E,2,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[235],E,49,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",E,E,50,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",R[223],E,3,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,4,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,5,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[235],E,34,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,35,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,34,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,34,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,34,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,34,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,34,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,34,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,34,[[[R[12]],["self"]],[R[2]]]],[11,"is_left",R[223],R[288],0,[[["self"]],["bool"]]],[11,"is_right",E,R[289],0,[[["self"]],["bool"]]],[11,"left",E,R[290],0,[[],[R[24]]]],[11,"right",E,R[291],0,[[],[R[24]]]],[11,"as_ref",E,R[292],0,[[["self"]],[[R[17]],["r"],["l"]]]],[11,"as_mut",E,R[293],0,[[["self"]],[["r"],["l"],[R[17]]]]],[11,"flip",E,R[294],0,[[],[R[17]]]],[11,"map_left",E,R[18],0,[[["f"]],[R[17]]]],[11,R[295],E,R[19],0,[[["f"]],[R[17]]]],[11,R[17],E,R[296],0,[[["g"],["f"]],[T]]],[11,R[297],E,R[298],0,[[["ctx"],["g"],["f"]],[T]]],[11,R[299],E,R[18],0,[[["f"]],[R[17]]]],[11,R[300],E,R[19],0,[[["f"]],[R[17]]]],[11,R[22],E,R[301],0,[[],[R[17]]]],[11,"left_or",E,R[302],0,[[["l"]],["l"]]],[11,R[303],E,R[304],0,[[],["l"]]],[11,R[305],E,R[20],0,[[["f"]],["l"]]],[11,"right_or",E,R[306],0,[[["r"]],["r"]]],[11,R[307],E,R[308],0,[[],["r"]]],[11,R[309],E,R[20],0,[[["f"]],["r"]]],[11,R[310],E,R[21],0,[[]]],[11,R[311],E,R[21],0,[[]]],[11,R[25],E,R[312],0,[[],[T]]]],"p":[[4,"Either"],[4,"Diff"],[4,R[260]],[4,R[531]],[4,R[261]],[4,R[262]],[3,"RcIter"],[3,"Unfold"],[3,R[263]],[3,"PutBack"],[3,"PutBackN"],[3,"Tuples"],[3,"Zip"],[8,R[264]],[8,R[265]],[3,"Dedup"],[3,R[266]],[3,R[267]],[3,"Product"],[3,"Batching"],[3,"Step"],[3,R[268]],[3,"Merge"],[3,"MergeBy"],[3,R[269]],[3,R[270]],[3,"Coalesce"],[3,R[271]],[3,R[272]],[3,"Unique"],[3,"UniqueBy"],[3,"Flatten"],[3,R[273]],[3,R[274]],[3,"Format"],[3,R[275]],[3,R[276]],[3,"Chunk"],[3,"Chunks"],[3,"GroupBy"],[3,"Group"],[3,"Groups"],[3,R[277]],[3,"KMerge"],[3,"KMergeBy"],[3,"PadUsing"],[3,R[278]],[3,R[279]],[3,"RepeatN"],[3,R[280]],[3,"Iterate"],[3,"Tee"],[3,R[281]],[3,R[282]],[3,R[283]],[3,"ZipEq"],[3,R[284]]]};
searchIndex[R[26]]={"doc":"A minimal implementation of Adler32 for Rust.","i":[[3,R[28],R[26],"A rolling version of the Adler32 hash, which can 'forget'…",N,N],[5,R[26],E,"Consume a Read object and returns the Adler32 hash.",N,[[["read"]],[[R[2],["u32"]],["u32"]]]],[11,"new",E,"Creates an empty Adler32 context (with hash 1).",0,[[],[R[27]]]],[11,"from_value",E,"Creates an Adler32 context with the given initial value.",0,[[["u32"]],[R[27]]]],[11,"from_buffer",E,"Convenience function initializing a context from the hash…",0,[[],[R[27]]]],[11,"hash",E,"Returns the current hash.",0,[[["self"]],["u32"]]],[11,"remove",E,"Removes the given `byte` that was fed to the algorithm…",0,[[["self"],["u8"],["usize"]]]],[11,"update",E,"Feeds a new `byte` to the algorithm to update the hash.",0,[[["self"],["u8"]]]],[11,"update_buffer",E,"Feeds a vector of bytes to the algorithm to update the hash.",0,[[["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]]],"p":[[3,R[28]]]};
searchIndex[R[347]]={"doc":R[347],"i":[[5,R[347],R[347],"Hint to the optimizer that any code path which calls this…",N,[[]]],[8,R[348],E,"An extension trait for `Option<T>` providing unchecked…",N,N],[10,"unchecked_unwrap",E,"Get the value out of this Option without checking for None.",0,[[],[T]]],[10,"unchecked_unwrap_none",E,"Assert that this Option is a None to the optimizer.",0,[[]]],[8,R[349],E,"An extension trait for `Result<T, E>` providing unchecked…",N,N],[10,"unchecked_unwrap_ok",E,"Get the value out of this Result without checking for Err.",1,[[],[T]]],[10,"unchecked_unwrap_err",E,"Get the error out of this Result without checking for Ok.",1,[[],["e"]]]],"p":[[8,R[348]],[8,R[349]]]};
searchIndex[R[350]]={"doc":"A circular buffer with fixed capacity. Requires Rust 1.15+","i":[[8,R[353],R[350],R[355],N,N],[11,"start",E,R[108],0,[[["self"]],[R[24]]]],[11,"end",E,R[109],0,[[["self"]],[R[24]]]],[3,R[354],E,"A fixed capacity ring buffer.",N,N],[3,"Iter",E,"`ArrayDeque` iterator",N,N],[3,R[359],E,"`ArrayDeque` mutable iterator",N,N],[3,R[184],E,"By-value `ArrayDeque` iterator",N,N],[3,"Drain",E,"Draining `ArrayDeque` iterator",N,N],[0,"array",E,E,N,N],[8,"Array","arraydeque::array",R[665],N,N],[16,"Item",E,"The array's element type",1,N],[8,"Index",E,E,N,N],[10,"to_usize",E,E,2,[[],["usize"]]],[10,"from",E,E,2,[[["usize"]],["self"]]],[11,"new",R[350],"Creates an empty `ArrayDeque`.",3,[[],[R[350]]]],[11,"get",E,"Retrieves an element in the `ArrayDeque` by index.",3,[[["self"],["usize"]],[R[24]]]],[11,R[221],E,"Retrieves an element in the `ArrayDeque` mutably by index.",3,[[["self"],["usize"]],[R[24]]]],[11,"swap",E,"Swaps elements at indices `i` and `j`.",3,[[["self"],["usize"]]]],[11,R[664],E,"Return the capacity of the `ArrayDeque`.",3,[[["self"]],["usize"]]],[11,"iter",E,"Returns a front-to-back iterator.",3,[[["self"]],["iter"]]],[11,R[175],E,"Returns a front-to-back iterator that returns mutable…",3,[[["self"]],["itermut"]]],[11,"as_slices",E,R[351],3,[[["self"]]]],[11,"as_mut_slices",E,R[351],3,[[["self"]]]],[11,"len",E,"Returns the number of elements in the `ArrayDeque`.",3,[[["self"]],["usize"]]],[11,R[404],E,"Returns true if the buffer contains no elements",3,[[["self"]],["bool"]]],[11,"drain",E,R[666],3,[[["self"],["r"]],["drain"]]],[11,"clear",E,"Clears the buffer, removing all values.",3,[[["self"]]]],[11,"contains",E,"Returns `true` if the `ArrayDeque` contains an element…",3,[[["self"]],["bool"]]],[11,"front",E,"Provides a reference to the front element, or `None` if…",3,[[["self"]],[R[24]]]],[11,"front_mut",E,"Provides a mutable reference to the front element, or…",3,[[["self"]],[R[24]]]],[11,"back",E,"Provides a reference to the back element, or `None` if the…",3,[[["self"]],[R[24]]]],[11,"back_mut",E,"Provides a mutable reference to the back element, or…",3,[[["self"]],[R[24]]]],[11,"pop_front",E,"Removes the first element and returns it, or `None` if the…",3,[[["self"]],[R[24]]]],[11,"push_front",E,"Inserts an element first in the sequence.",3,[[["self"]],[R[24]]]],[11,"push_back",E,"Appends an element to the back of a buffer",3,[[["self"]],[R[24]]]],[11,"pop_back",E,"Removes the last element from a buffer and returns it, or…",3,[[["self"]],[R[24]]]],[11,"swap_remove_back",E,R[352],3,[[["self"],["usize"]],[R[24]]]],[11,"swap_remove_front",E,R[352],3,[[["self"],["usize"]],[R[24]]]],[11,"insert",E,"Inserts an element at `index` within the `ArrayDeque`.…",3,[[["self"],["usize"]],[R[24]]]],[11,"remove",E,"Removes and returns the element at `index` from the…",3,[[["self"],["usize"]],[R[24]]]],[11,R[356],E,"Splits the collection into two at the given index.",3,[[["self"],["usize"]],["self"]]],[11,"append",E,"Moves all the elements of `other` into `Self`, leaving…",3,[[["self"]]]],[11,"retain",E,R[130],3,[[["self"],["f"]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[22],E,E,3,[[],["i"]]],[11,"into",E,E,3,[[],[U]]],[11,R[66],E,E,3,[[["self"]],[T]]],[11,R[67],E,E,3,[[[T],["self"]]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[22],E,E,4,[[],["i"]]],[11,"into",E,E,4,[[],[U]]],[11,R[66],E,E,4,[[["self"]],[T]]],[11,R[67],E,E,4,[[[T],["self"]]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[30]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[22],E,E,5,[[],["i"]]],[11,"into",E,E,5,[[],[U]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[30]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[22],E,E,6,[[],["i"]]],[11,"into",E,E,6,[[],[U]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[30]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[22],E,E,7,[[],["i"]]],[11,"into",E,E,7,[[],[U]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[30]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,"eq",E,E,3,[[[R[350]],["self"]],["bool"]]],[11,R[101],E,E,4,[[["self"]],[[R[24]],[T]]]],[11,R[101],E,E,5,[[["self"]],[[T],[R[24]]]]],[11,R[101],E,E,6,[[["self"]],[R[24]]]],[11,R[101],E,E,7,[[["self"]],[R[24]]]],[11,"clone",E,E,3,[[["self"]],[R[350]]]],[11,"clone",E,E,4,[[["self"]],["iter"]]],[11,"cmp",E,E,3,[[[R[350]],["self"]],[R[23]]]],[11,R[22],E,E,3,[[],[R[358]]]],[11,"extend",E,E,3,[[["self"],[R[131]]]]],[11,"drop",E,E,3,[[["self"]]]],[11,"drop",E,E,7,[[["self"]]]],[11,R[62],E,E,3,[[[R[350]],["self"]],[[R[24],[R[23]]],[R[23]]]]],[11,"next",E,E,4,[[["self"]],[[R[24]],[T]]]],[11,R[104],E,E,4,[[["self"]]]],[11,"next",E,E,5,[[["self"]],[[T],[R[24]]]]],[11,R[104],E,E,5,[[["self"]]]],[11,"next",E,E,6,[[["self"]],[R[24]]]],[11,R[104],E,E,6,[[["self"]]]],[11,"next",E,E,7,[[["self"]],[R[24]]]],[11,R[104],E,E,7,[[["self"]]]],[11,R[222],E,E,3,[[],[R[350]]]],[11,"fmt",E,E,3,[[[R[12]],["self"]],[R[2]]]],[11,"hash",E,E,3,[[["h"],["self"]]]],[11,"index",E,E,3,[[["self"],["usize"]]]],[11,R[106],E,E,3,[[["self"],["usize"]]]],[11,R[357],E,E,3,[[[R[131]]],["self"]]]],"p":[[8,R[353]],[8,"Array"],[8,"Index"],[3,R[354]],[3,"Iter"],[3,R[359]],[3,R[184]],[3,"Drain"]]};
searchIndex[R[360]]={"doc":"This crate provides a robust regular expression parser.","i":[[3,"Parser",R[360],"A convenience parser for regular expressions.",N,N],[3,R[377],E,R[378],N,N],[4,"Error",E,"This error type encompasses any error that can be returned…",N,N],[13,"Parse",E,"An error that occurred while translating concrete syntax…",0,N],[13,"Translate",E,"An error that occurred while translating abstract syntax…",0,N],[5,"escape",E,R[1333],N,[[["str"]],[R[34]]]],[5,"escape_into",E,"Escapes all meta characters in `text` and writes the…",N,[[[R[34]],["str"]]]],[5,"is_meta_character",E,"Returns true if the give character has significance in a…",N,[[["char"]],["bool"]]],[5,"is_word_character",E,"Returns true if and only if the given character is a…",N,[[["char"]],["bool"]]],[5,"is_word_byte",E,"Returns true if and only if the given character is an…",N,[[["u8"]],["bool"]]],[0,"ast",E,"Defines an abstract syntax for regular expressions.",N,N],[3,"Error",R[362],"An error that occurred while parsing a regular expression…",N,N],[3,"Span",E,"Span represents the position information of a single AST…",N,N],[12,"start",E,"The start byte offset.",1,N],[12,"end",E,"The end byte offset.",1,N],[3,R[531],E,"A single position in a regular expression.",N,N],[12,"offset",E,"The absolute offset of this position, starting at `0` from…",2,N],[12,"line",E,"The line number, starting at `1`.",2,N],[12,"column",E,"The approximate column number, starting at `1`.",2,N],[3,R[504],E,"An abstract syntax tree for a singular expression along…",N,N],[12,"ast",E,"The actual ast.",3,N],[12,"comments",E,"All comments found in the original regular expression.",3,N],[3,"Comment",E,"A comment from a regular expression with an associated span.",N,N],[12,"span",E,"The span of this comment, including the beginning `#` and…",4,N],[12,"comment",E,"The comment text, starting with the first character…",4,N],[3,R[369],E,R[370],N,N],[12,"span",E,"The span of this alternation.",5,N],[12,"asts",E,"The alternate regular expressions.",5,N],[3,"Concat",E,R[371],N,N],[12,"span",E,"The span of this concatenation.",6,N],[12,"asts",E,"The concatenation regular expressions.",6,N],[3,R[402],E,"A single literal expression.",N,N],[12,"span",E,"The span of this literal.",7,N],[12,"kind",E,"The kind of this literal.",7,N],[12,"c",E,"The Unicode scalar value corresponding to this literal.",7,N],[3,R[505],E,"A Perl character class.",N,N],[12,"span",E,R[361],8,N],[12,"kind",E,"The kind of Perl class.",8,N],[12,"negated",E,"Whether the class is negated or not. e.g., `\\d` is not…",8,N],[3,R[506],E,"An ASCII character class.",N,N],[12,"span",E,R[361],9,N],[12,"kind",E,"The kind of ASCII class.",9,N],[12,"negated",E,"Whether the class is negated or not. e.g., `[[:alpha:]]`…",9,N],[3,R[384],E,"A Unicode character class.",N,N],[12,"span",E,R[361],10,N],[12,"negated",E,"Whether this class is negated or not.",10,N],[12,"kind",E,"The kind of Unicode class.",10,N],[3,R[507],E,"A bracketed character class, e.g., `[a-z0-9]`.",N,N],[12,"span",E,R[361],11,N],[12,"negated",E,"Whether this class is negated or not. e.g., `[a]` is not…",11,N],[12,"kind",E,"The type of this set. A set is either a normal union of…",11,N],[3,R[508],E,"A single character class range in a set.",N,N],[12,"span",E,"The span of this range.",12,N],[12,"start",E,"The start of this range.",12,N],[12,"end",E,"The end of this range.",12,N],[3,R[509],E,"A union of items inside a character class set.",N,N],[12,"span",E,"The span of the items in this operation. e.g., the…",13,N],[12,"items",E,"The sequence of items that make up this union.",13,N],[3,R[510],E,"A Unicode character class set operation.",N,N],[12,"span",E,"The span of this operation. e.g., the `a-z--[h-p]` in…",14,N],[12,"kind",E,"The type of this set operation.",14,N],[12,"lhs",E,"The left hand side of the operation.",14,N],[12,"rhs",E,"The right hand side of the operation.",14,N],[3,R[365],E,R[366],N,N],[12,"span",E,"The span of this assertion.",15,N],[12,"kind",E,"The assertion kind, e.g., `\\b` or `^`.",15,N],[3,R[367],E,"A repetition operation applied to a regular expression.",N,N],[12,"span",E,"The span of this operation.",16,N],[12,"op",E,"The actual operation.",16,N],[12,"greedy",E,"Whether this operation was applied greedily or not.",16,N],[12,"ast",E,"The regular expression under repetition.",16,N],[3,R[511],E,"The repetition operator itself.",N,N],[12,"span",E,"The span of this operator. This includes things like `+`,…",17,N],[12,"kind",E,"The type of operation.",17,N],[3,"Group",E,R[368],N,N],[12,"span",E,"The span of this group.",18,N],[12,"kind",E,"The kind of this group.",18,N],[12,"ast",E,"The regular expression in this group.",18,N],[3,R[376],E,"A capture name.",N,N],[12,"span",E,"The span of this capture name.",19,N],[12,"name",E,"The capture name.",19,N],[12,"index",E,"The capture index.",19,N],[3,"SetFlags",E,"A group of flags that is not applied to a particular…",N,N],[12,"span",E,"The span of these flags, including the grouping parentheses.",20,N],[12,"flags",E,"The actual sequence of flags.",20,N],[3,"Flags",E,"A group of flags.",N,N],[12,"span",E,"The span of this group of flags.",21,N],[12,"items",E,"A sequence of flag items. Each item is either a flag or a…",21,N],[3,R[512],E,"A single item in a group of flags.",N,N],[12,"span",E,"The span of this item.",22,N],[12,"kind",E,"The kind of this item.",22,N],[4,R[385],E,"The type of an error that occurred while building an AST.",N,N],[13,"CaptureLimitExceeded",E,"The capturing group limit was exceeded.",23,N],[13,"ClassEscapeInvalid",E,"An invalid escape sequence was found in a character class…",23,N],[13,"ClassRangeInvalid",E,"An invalid character class range was found. An invalid…",23,N],[13,"ClassRangeLiteral",E,"An invalid range boundary was found in a character class.…",23,N],[13,"ClassUnclosed",E,"An opening `[` was found with no corresponding closing `]`.",23,N],[13,"DecimalEmpty",E,"An empty decimal number was given where one was expected.",23,N],[13,"DecimalInvalid",E,"An invalid decimal number was given where one was expected.",23,N],[13,"EscapeHexEmpty",E,"A bracketed hex literal was empty.",23,N],[13,"EscapeHexInvalid",E,"A bracketed hex literal did not correspond to a Unicode…",23,N],[13,"EscapeHexInvalidDigit",E,"An invalid hexadecimal digit was found.",23,N],[13,"EscapeUnexpectedEof",E,"EOF was found before an escape sequence was completed.",23,N],[13,"EscapeUnrecognized",E,"An unrecognized escape sequence.",23,N],[13,"FlagDanglingNegation",E,"A dangling negation was used when setting flags, e.g., `i-`.",23,N],[13,"FlagDuplicate",E,"A flag was used twice, e.g., `i-i`.",23,N],[12,R[364],R[363],"The position of the original flag. The error position…",23,N],[13,"FlagRepeatedNegation",R[362],"The negation operator was used twice, e.g., `-i-s`.",23,N],[12,R[364],R[363],"The position of the original negation operator. The error…",23,N],[13,"FlagUnexpectedEof",R[362],"Expected a flag but got EOF, e.g., `(?`.",23,N],[13,"FlagUnrecognized",E,"Unrecognized flag, e.g., `a`.",23,N],[13,"GroupNameDuplicate",E,"A duplicate capture name was found.",23,N],[12,R[364],R[363],"The position of the initial occurrence of the capture…",23,N],[13,"GroupNameEmpty",R[362],"A capture group name is empty, e.g., `(?P<>abc)`.",23,N],[13,"GroupNameInvalid",E,"An invalid character was seen for a capture group name.…",23,N],[13,"GroupNameUnexpectedEof",E,"A closing `>` could not be found for a capture group name.",23,N],[13,"GroupUnclosed",E,"An unclosed group, e.g., `(ab`.",23,N],[13,"GroupUnopened",E,"An unopened group, e.g., `ab)`.",23,N],[13,"NestLimitExceeded",E,"The nest limit was exceeded. The limit stored here is the…",23,N],[13,"RepetitionCountInvalid",E,"The range provided in a counted repetition operator is…",23,N],[13,"RepetitionCountUnclosed",E,"An opening `{` was found with no corresponding closing `}`.",23,N],[13,"RepetitionMissing",E,"A repetition operator was applied to a missing…",23,N],[13,"UnsupportedBackreference",E,"When octal support is disabled, this error is produced…",23,N],[13,"UnsupportedLookAround",E,"When syntax similar to PCRE's look-around is used, this…",23,N],[4,"Ast",E,"An abstract syntax tree for a single regular expression.",N,N],[13,"Empty",E,"An empty regex that matches everything.",24,N],[13,"Flags",E,"A set of flags, e.g., `(?is)`.",24,N],[13,R[402],E,"A single character literal, which includes escape sequences.",24,N],[13,"Dot",E,"The \"any character\" class.",24,N],[13,R[365],E,R[366],24,N],[13,"Class",E,"A single character class. This includes all forms of…",24,N],[13,R[367],E,"A repetition operator applied to an arbitrary regular…",24,N],[13,"Group",E,R[368],24,N],[13,R[369],E,R[370],24,N],[13,"Concat",E,R[371],24,N],[4,R[513],E,"The kind of a single literal expression.",N,N],[13,"Verbatim",E,"The literal is written verbatim, e.g., `a` or `☃`.",25,N],[13,"Punctuation",E,"The literal is written as an escape because it is…",25,N],[13,"Octal",E,"The literal is written as an octal escape, e.g., `\\141`.",25,N],[13,"HexFixed",E,"The literal is written as a hex code with a fixed number…",25,N],[13,"HexBrace",E,"The literal is written as a hex code with a bracketed…",25,N],[13,"Special",E,"The literal is written as a specially recognized escape,…",25,N],[4,R[514],E,"The type of a special literal.",N,N],[13,"Bell",E,"Bell, spelled `\\a` (`\\x07`).",26,N],[13,"FormFeed",E,"Form feed, spelled `\\f` (`\\x0C`).",26,N],[13,"Tab",E,"Tab, spelled `\\t` (`\\x09`).",26,N],[13,"LineFeed",E,"Line feed, spelled `\\n` (`\\x0A`).",26,N],[13,"CarriageReturn",E,"Carriage return, spelled `\\r` (`\\x0D`).",26,N],[13,"VerticalTab",E,"Vertical tab, spelled `\\v` (`\\x0B`).",26,N],[13,"Space",E,"Space, spelled `\\` (`\\x20`). Note that this can only…",26,N],[4,R[515],E,"The type of a Unicode hex literal.",N,N],[13,"X",E,"A `\\x` prefix. When used without brackets, this form is…",27,N],[13,"UnicodeShort",E,"A `\\u` prefix. When used without brackets, this form is…",27,N],[13,"UnicodeLong",E,"A `\\U` prefix. When used without brackets, this form is…",27,N],[4,"Class",E,"A single character class expression.",N,N],[13,R[390],E,R[372],28,N],[13,"Perl",E,R[373],28,N],[13,R[374],E,R[375],28,N],[4,R[516],E,"The available Perl character classes.",N,N],[13,"Digit",E,"Decimal numbers.",29,N],[13,"Space",E,"Whitespace.",29,N],[13,"Word",E,"Word characters.",29,N],[4,R[517],E,"The available ASCII character classes.",N,N],[13,"Alnum",E,"`[0-9A-Za-z]`",30,N],[13,"Alpha",E,"`[A-Za-z]`",30,N],[13,"Ascii",E,"`[\\x00-\\x7F]`",30,N],[13,"Blank",E,"`[ \\t]`",30,N],[13,"Cntrl",E,"`[\\x00-\\x1F\\x7F]`",30,N],[13,"Digit",E,"`[0-9]`",30,N],[13,"Graph",E,"`[!-~]`",30,N],[13,"Lower",E,"`[a-z]`",30,N],[13,"Print",E,"`[ -~]`",30,N],[13,"Punct",E,"`[!-/:-@\\[-`{-~]`",30,N],[13,"Space",E,"`[\\t\\n\\v\\f\\r ]`",30,N],[13,"Upper",E,"`[A-Z]`",30,N],[13,"Word",E,"`[0-9A-Za-z_]`",30,N],[13,"Xdigit",E,"`[0-9A-Fa-f]`",30,N],[4,R[518],E,"The available forms of Unicode character classes.",N,N],[13,"OneLetter",E,"A one letter abbreviated class, e.g., `\\pN`.",31,N],[13,"Named",E,"A binary property, general category or script. The string…",31,N],[13,"NamedValue",E,"A property name and an associated value.",31,N],[12,"op","regex_syntax::ast::ClassUnicodeKind","The type of Unicode op used to associate `name` with…",31,N],[12,"name",E,"The property name (which may be empty).",31,N],[12,"value",E,"The property value (which may be empty).",31,N],[4,R[519],R[362],"The type of op used in a Unicode character class.",N,N],[13,"Equal",E,"A property set to a specific value, e.g.,…",32,N],[13,"Colon",E,"A property set to a specific value using a colon, e.g.,…",32,N],[13,"NotEqual",E,"A property that isn't a particular value, e.g.,…",32,N],[4,"ClassSet",E,"A character class set.",N,N],[13,"Item",E,"An item, which can be a single literal, range, nested…",33,N],[13,"BinaryOp",E,"A single binary operation (i.e., &&, -- or ~~).",33,N],[4,R[520],E,"A single component of a character class set.",N,N],[13,"Empty",E,"An empty item.",34,N],[13,R[402],E,"A single literal.",34,N],[13,"Range",E,"A range between two literals.",34,N],[13,"Ascii",E,"An ASCII character class, e.g., `[:alnum:]` or `[:punct:]`.",34,N],[13,R[390],E,R[372],34,N],[13,"Perl",E,R[373],34,N],[13,R[374],E,R[375],34,N],[13,"Union",E,"A union of items.",34,N],[4,R[521],E,"The type of a Unicode character class set operation.",N,N],[13,"Intersection",E,"The intersection of two sets, e.g., `\\pN&&[a-z]`.",35,N],[13,"Difference",E,"The difference of two sets, e.g., `\\pN--[0-9]`.",35,N],[13,"SymmetricDifference",E,"The symmetric difference of two sets. The symmetric…",35,N],[4,R[522],E,"An assertion kind.",N,N],[13,R[388],E,"`^`",36,N],[13,"EndLine",E,"`$`",36,N],[13,R[389],E,"`\\A`",36,N],[13,"EndText",E,"`\\z`",36,N],[13,R[386],E,"`\\b`",36,N],[13,"NotWordBoundary",E,"`\\B`",36,N],[4,R[395],E,R[396],N,N],[13,R[397],E,"`?`",37,N],[13,R[398],E,"`*`",37,N],[13,R[399],E,"`+`",37,N],[13,"Range",E,"`{m,n}`",37,N],[4,R[400],E,"A range repetition operator.",N,N],[13,"Exactly",E,"`{m}`",38,N],[13,"AtLeast",E,"`{m,}`",38,N],[13,"Bounded",E,"`{m,n}`",38,N],[4,R[391],E,"The kind of a group.",N,N],[13,R[392],E,"`(a)`",39,N],[13,R[376],E,"`(?P<name>a)`",39,N],[13,R[393],E,"`(?:a)` and `(?i:a)`",39,N],[4,R[523],E,"The kind of an item in a group of flags.",N,N],[13,"Negation",E,"A negation operator applied to all subsequent flags in the…",40,N],[13,"Flag",E,"A single flag in a group.",40,N],[4,"Flag",E,"A single flag.",N,N],[13,R[1054],E,"`i`",41,N],[13,"MultiLine",E,"`m`",41,N],[13,"DotMatchesNewLine",E,"`s`",41,N],[13,"SwapGreed",E,"`U`",41,N],[13,R[390],E,"`u`",41,N],[13,"IgnoreWhitespace",E,"`x`",41,N],[5,"visit",E,R[401],N,[[["visitor"],["ast"]],[R[2]]]],[0,"parse",E,"This module provides a regular expression parser.",N,N],[3,R[377],R[455],R[378],N,N],[3,"Parser",E,"A regular expression parser.",N,N],[11,"new",E,R[441],42,[[],[R[379]]]],[11,"build",E,R[442],42,[[["self"]],["parser"]]],[11,R[443],E,R[444],42,[[["u32"],["self"]],[R[379]]]],[11,"octal",E,R[445],42,[[["self"],["bool"]],[R[379]]]],[11,R[447],E,R[448],42,[[["self"],["bool"]],[R[379]]]],[11,"new",E,R[454],43,[[],["parser"]]],[11,"parse",E,"Parse the regular expression into an abstract syntax tree.",43,[[["str"],["self"]],[["error"],[R[2],["ast","error"]],["ast"]]]],[11,"parse_with_comments",E,"Parse the regular expression and return an abstract syntax…",43,[[["str"],["self"]],[["error"],[R[380]],[R[2],[R[380],"error"]]]]],[0,"print",R[362],"This module provides a regular expression printer for `Ast`.",N,N],[3,"Printer",R[456],"A printer for a regular expression abstract syntax tree.",N,N],[11,"new",E,R[405],44,[[],["printer"]]],[11,"print",E,R[406],44,[[["write"],["self"],["ast"]],[R[2]]]],[8,"Visitor",R[362],"A trait for visiting an abstract syntax tree (AST) in…",N,N],[16,"Output",E,"The result of visiting an AST.",45,N],[16,"Err",E,"An error that visiting an AST might return.",45,N],[10,"finish",E,R[410],45,[[],[R[2]]]],[11,"start",E,R[486],45,[[["self"]]]],[11,R[411],E,R[487],45,[[["self"],["ast"]],[R[2]]]],[11,R[412],E,R[488],45,[[["self"],["ast"]],[R[2]]]],[11,R[413],E,R[489],45,[[["self"]],[R[2]]]],[11,R[490],E,R[491],45,[[["self"],[R[381]]],[R[2]]]],[11,R[492],E,R[493],45,[[["self"],[R[381]]],[R[2]]]],[11,R[494],E,R[495],45,[[["self"],[R[382]]],[R[2]]]],[11,R[496],E,R[497],45,[[["self"],[R[382]]],[R[2]]]],[11,R[498],E,R[499],45,[[["self"],[R[382]]],[R[2]]]],[11,"kind",E,R[414],46,[[["self"]],[R[415]]]],[11,"pattern",E,R[416],46,[[["self"]],["str"]]],[11,"span",E,R[417],46,[[["self"]],["span"]]],[11,"auxiliary_span",E,"Return an auxiliary span. This span exists only for some…",46,[[["self"]],[[R[24],["span"]],["span"]]]],[11,"new",E,"Create a new span with the given positions.",1,[[[R[257]]],["span"]]],[11,"splat",E,"Create a new span using the given position as the start…",1,[[[R[257]]],["span"]]],[11,"with_start",E,"Create a new span by replacing the starting the position…",1,[[[R[257]]],["span"]]],[11,"with_end",E,"Create a new span by replacing the ending the position…",1,[[[R[257]]],["span"]]],[11,"is_one_line",E,"Returns true if and only if this span occurs on a single…",1,[[["self"]],["bool"]]],[11,R[404],E,"Returns true if and only if this span is empty. That is,…",1,[[["self"]],["bool"]]],[11,"new",E,"Create a new position with the given information.",2,[[["usize"]],[R[257]]]],[11,"span",E,"Return the span of this abstract syntax tree.",24,[[["self"]],["span"]]],[11,R[404],E,"Return true if and only if this Ast is empty.",24,[[["self"]],["bool"]]],[11,"into_ast",E,"Return this alternation as an AST.",5,[[],["ast"]]],[11,"into_ast",E,"Return this concatenation as an AST.",6,[[],["ast"]]],[11,"byte",E,"If this literal was written as a `\\x` hex escape, then…",7,[[["self"]],[["u8"],[R[24],["u8"]]]]],[11,"digits",E,"The number of digits that must be used with this literal…",27,[[["self"]],["u32"]]],[11,"span",E,"Return the span of this character class.",28,[[["self"]],["span"]]],[11,"from_name",E,"Return the corresponding ClassAsciiKind variant for the…",30,[[["str"]],[[R[24],[R[383]]],[R[383]]]]],[11,R[439],E,"Returns true if this class has been negated.",10,[[["self"]],["bool"]]],[11,"is_equal",E,"Whether the op is an equality op or not.",32,[[["self"]],["bool"]]],[11,"union",E,"Build a set from a union.",33,[[[R[468]]],[R[466]]]],[11,"span",E,"Return the span of this character class set.",33,[[["self"]],["span"]]],[11,"span",E,"Return the span of this character class set item.",34,[[["self"]],["span"]]],[11,"is_valid",E,"Returns true if and only if this character class range is…",12,[[["self"]],["bool"]]],[11,"push",E,"Push a new item in this union.",13,[[["self"],[R[381]]]]],[11,"into_item",E,"Return this union as a character class set item.",13,[[],[R[381]]]],[11,"is_valid",E,"Returns true if and only if this repetition range is valid.",38,[[["self"]],["bool"]]],[11,"flags",E,"If this group is non-capturing, then this returns the…",18,[[["self"]],[["flags"],[R[24],["flags"]]]]],[11,"is_capturing",E,"Returns true if and only if this group is capturing.",18,[[["self"]],["bool"]]],[11,"capture_index",E,"Returns the capture index of this group, if this is a…",18,[[["self"]],[["u32"],[R[24],["u32"]]]]],[11,"add_item",E,"Add the given item to this sequence of flags.",21,[[[R[475]],["self"]],[[R[24],["usize"]],["usize"]]]],[11,"flag_state",E,"Returns the state of the given flag in this set.",21,[[["self"],["flag"]],[[R[24],["bool"]],["bool"]]]],[11,"is_negation",E,"Returns true if and only if this item is a negation…",40,[[["self"]],["bool"]]],[0,"hir",R[360],"Defines a high-level intermediate representation for…",N,N],[3,"Error",R[394],"An error that can occur while translating an `Ast` to a…",N,N],[3,"Hir",E,"A high-level intermediate representation (HIR) for a…",N,N],[3,R[384],E,R[387],N,N],[3,R[529],E,"An iterator over all ranges in a Unicode character class.",N,N],[3,R[526],E,"A single range of characters represented by Unicode scalar…",N,N],[3,R[527],E,"A set of characters represented by arbitrary bytes (where…",N,N],[3,R[530],E,"An iterator over all ranges in a byte character class.",N,N],[3,R[528],E,"A single range of characters represented by arbitrary bytes.",N,N],[3,"Group",E,"The high-level intermediate representation for a group.",N,N],[12,"kind",E,"The kind of this group. If it is a capturing group, then…",47,N],[12,"hir",E,"The expression inside the capturing group, which may be…",47,N],[3,R[367],E,"The high-level intermediate representation of a repetition…",N,N],[12,"kind",E,"The kind of this repetition operator.",48,N],[12,"greedy",E,"Whether this repetition operator is greedy or not. A…",48,N],[12,"hir",E,"The expression being repeated.",48,N],[4,R[385],E,"The type of an error that occurred while building an `Hir`.",N,N],[13,"UnicodeNotAllowed",E,"This error occurs when a Unicode feature is used when…",49,N],[13,R[1055],E,"This error occurs when translating a pattern that could…",49,N],[13,"UnicodePropertyNotFound",E,"This occurs when an unrecognized Unicode property name…",49,N],[13,"UnicodePropertyValueNotFound",E,"This occurs when an unrecognized Unicode property value…",49,N],[13,"EmptyClassNotAllowed",E,"This occurs when the translator attempts to construct a…",49,N],[4,"HirKind",E,"The kind of an arbitrary `Hir` expression.",N,N],[13,"Empty",E,"The empty regular expression, which matches everything,…",50,N],[13,R[402],E,"A single literal character that matches exactly this…",50,N],[13,"Class",E,"A single character class that matches any of the…",50,N],[13,"Anchor",E,"An anchor assertion. An anchor assertion match always has…",50,N],[13,R[386],E,"A word boundary assertion, which may or may not be Unicode…",50,N],[13,R[367],E,"A repetition operation applied to a child expression.",50,N],[13,"Group",E,"A possibly capturing group, which contains a child…",50,N],[13,"Concat",E,"A concatenation of expressions. A concatenation always has…",50,N],[13,R[369],E,"An alternation of expressions. An alternation always has…",50,N],[4,R[402],E,"The high-level intermediate representation of a literal.",N,N],[13,R[390],E,"A single character represented by a Unicode scalar value.",51,N],[13,"Byte",E,"A single character represented by an arbitrary byte.",51,N],[4,"Class",E,"The high-level intermediate representation of a character…",N,N],[13,R[390],E,R[387],52,N],[13,"Bytes",E,"A set of characters represented by arbitrary bytes (one…",52,N],[4,"Anchor",E,"The high-level intermediate representation for an anchor…",N,N],[13,R[388],E,"Match the beginning of a line or the beginning of text.…",53,N],[13,"EndLine",E,"Match the end of a line or the end of text. Specifically,…",53,N],[13,R[389],E,"Match the beginning of text. Specifically, this matches at…",53,N],[13,"EndText",E,"Match the end of text. Specifically, this matches at the…",53,N],[4,R[386],E,"The high-level intermediate representation for a…",N,N],[13,R[390],E,"Match a Unicode-aware word boundary. That is, this matches…",54,N],[13,"UnicodeNegate",E,"Match a Unicode-aware negation of a word boundary.",54,N],[13,"Ascii",E,"Match an ASCII-only word boundary. That is, this matches a…",54,N],[13,"AsciiNegate",E,"Match an ASCII-only negation of a word boundary.",54,N],[4,R[391],E,"The kind of group.",N,N],[13,R[392],E,"A normal unnamed capturing group.",55,N],[13,R[376],E,"A named capturing group.",55,N],[12,"name","regex_syntax::hir::GroupKind","The name of the group.",55,N],[12,"index",E,"The capture index of the group.",55,N],[13,R[393],R[394],"A non-capturing group.",55,N],[4,R[395],E,R[396],N,N],[13,R[397],E,"Matches a sub-expression zero or one times.",56,N],[13,R[398],E,"Matches a sub-expression zero or more times.",56,N],[13,R[399],E,"Matches a sub-expression one or more times.",56,N],[13,"Range",E,"Matches a sub-expression within a bounded range of times.",56,N],[4,R[400],E,"The kind of a counted repetition operator.",N,N],[13,"Exactly",E,"Matches a sub-expression exactly this many times.",57,N],[13,"AtLeast",E,"Matches a sub-expression at least this many times.",57,N],[13,"Bounded",E,"Matches a sub-expression at least `m` times and at most…",57,N],[5,"visit",E,R[401],N,[[["hir"],["visitor"]],[R[2]]]],[0,R[418],E,"Provides routines for extracting literal prefixes and…",N,N],[3,"Literals",R[457],"A set of literal byte strings extracted from a regular…",N,N],[3,R[402],E,"A single member of a set of literals extracted from a…",N,N],[11,"empty",E,"Returns a new empty set of literals using default limits.",58,[[],[R[403]]]],[11,R[77],E,"Returns a set of literal prefixes extracted from the given…",58,[[["hir"]],[R[403]]]],[11,R[78],E,"Returns a set of literal suffixes extracted from the given…",58,[[["hir"]],[R[403]]]],[11,"limit_size",E,"Get the approximate size limit (in bytes) of this set.",58,[[["self"]],["usize"]]],[11,"set_limit_size",E,"Set the approximate size limit (in bytes) of this set.",58,[[["self"],["usize"]],[R[403]]]],[11,"limit_class",E,"Get the character class size limit for this set.",58,[[["self"]],["usize"]]],[11,"set_limit_class",E,"Limits the size of character(or byte) classes considered.",58,[[["self"],["usize"]],[R[403]]]],[11,R[403],E,"Returns the set of literals as a slice. Its order is…",58,[[["self"]]]],[11,"min_len",E,"Returns the length of the smallest literal.",58,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,"all_complete",E,"Returns true if all members in this set are complete.",58,[[["self"]],["bool"]]],[11,"any_complete",E,"Returns true if any member in this set is complete.",58,[[["self"]],["bool"]]],[11,"contains_empty",E,"Returns true if this set contains an empty literal.",58,[[["self"]],["bool"]]],[11,R[404],E,"Returns true if this set is empty or if all of its members…",58,[[["self"]],["bool"]]],[11,"to_empty",E,"Returns a new empty set of literals using this set's limits.",58,[[["self"]],[R[403]]]],[11,"longest_common_prefix",E,"Returns the longest common prefix of all members in this…",58,[[["self"]]]],[11,"longest_common_suffix",E,"Returns the longest common suffix of all members in this…",58,[[["self"]]]],[11,"trim_suffix",E,"Returns a new set of literals with the given number of…",58,[[["self"],["usize"]],[[R[24],[R[403]]],[R[403]]]]],[11,"unambiguous_prefixes",E,"Returns a new set of prefixes of this set of literals that…",58,[[["self"]],[R[403]]]],[11,"unambiguous_suffixes",E,"Returns a new set of suffixes of this set of literals that…",58,[[["self"]],[R[403]]]],[11,"union_prefixes",E,"Unions the prefixes from the given expression to this set.",58,[[["hir"],["self"]],["bool"]]],[11,"union_suffixes",E,"Unions the suffixes from the given expression to this set.",58,[[["hir"],["self"]],["bool"]]],[11,"union",E,"Unions this set with another set.",58,[[["self"],[R[403]]],["bool"]]],[11,"cross_product",E,"Extends this set with another set.",58,[[["self"],[R[403]]],["bool"]]],[11,"cross_add",E,"Extends each literal in this set with the bytes given.",58,[[["self"]],["bool"]]],[11,"add",E,"Adds the given literal to this set.",58,[[[R[418]],["self"]],["bool"]]],[11,"add_char_class",E,"Extends each literal in this set with the character class…",58,[[["self"],[R[423]]],["bool"]]],[11,"add_byte_class",E,"Extends each literal in this set with the byte class given.",58,[[["self"],[R[427]]],["bool"]]],[11,"cut",E,"Cuts every member of this set. When a member is cut, it…",58,[[["self"]]]],[11,"reverse",E,"Reverses all members in place.",58,[[["self"]]]],[11,"clear",E,"Clears this set of all members.",58,[[["self"]]]],[11,"new",E,"Returns a new complete literal with the bytes given.",59,[[["u8"],["vec",["u8"]]],[R[418]]]],[11,"empty",E,"Returns a new complete empty literal.",59,[[],[R[418]]]],[11,"is_cut",E,"Returns true if this literal was \"cut.\"",59,[[["self"]],["bool"]]],[11,"cut",E,"Cuts this literal.",59,[[["self"]]]],[0,"print",R[394],"This module provides a regular expression printer for `Hir`.",N,N],[3,"Printer",R[458],"A printer for a regular expression's high-level…",N,N],[11,"new",E,R[405],60,[[],["printer"]]],[11,"print",E,R[406],60,[[["hir"],["write"],["self"]],[R[2]]]],[0,R[409],R[394],"Defines a translator that converts an `Ast` to an `Hir`.",N,N],[3,R[524],R[459],"A builder for constructing an AST->HIR translator.",N,N],[3,R[525],E,"A translator maps abstract syntax to a high level…",N,N],[11,"new",E,"Create a new translator builder with a default c…",61,[[],[R[407]]]],[11,"build",E,"Build a translator using the current configuration.",61,[[["self"]],[R[408]]]],[11,R[446],E,"When enabled, translation will permit the construction of…",61,[[["self"],["bool"]],[R[407]]]],[11,R[449],E,"Enable or disable the case insensitive flag (`i`) by…",61,[[["self"],["bool"]],[R[407]]]],[11,R[450],E,"Enable or disable the multi-line matching flag (`m`) by…",61,[[["self"],["bool"]],[R[407]]]],[11,R[451],E,"Enable or disable the \"dot matches any character\" flag…",61,[[["self"],["bool"]],[R[407]]]],[11,R[452],E,"Enable or disable the \"swap greed\" flag (`U`) by default.",61,[[["self"],["bool"]],[R[407]]]],[11,"unicode",E,R[453],61,[[["self"],["bool"]],[R[407]]]],[11,"new",E,"Create a new translator using the default configuration.",62,[[],[R[408]]]],[11,R[409],E,"Translate the given abstract syntax tree (AST) into a high…",62,[[["str"],["self"],["ast"]],[["hir"],["error"],[R[2],["hir","error"]]]]],[8,"Visitor",R[394],"A trait for visiting the high-level IR (HIR) in depth…",N,N],[16,"Output",E,"The result of visiting an HIR.",63,N],[16,"Err",E,"An error that visiting an HIR might return.",63,N],[10,"finish",E,R[410],63,[[],[R[2]]]],[11,"start",E,R[500],63,[[["self"]]]],[11,R[411],E,R[501],63,[[["hir"],["self"]],[R[2]]]],[11,R[412],E,R[502],63,[[["hir"],["self"]],[R[2]]]],[11,R[413],E,R[503],63,[[["self"]],[R[2]]]],[11,"kind",E,R[414],64,[[["self"]],[R[415]]]],[11,"pattern",E,R[416],64,[[["self"]],["str"]]],[11,"span",E,R[417],64,[[["self"]],["span"]]],[11,"kind",E,"Returns a reference to the underlying HIR kind.",65,[[["self"]],["hirkind"]]],[11,"into_kind",E,"Consumes ownership of this HIR expression and returns its…",65,[[],["hirkind"]]],[11,"empty",E,"Returns an empty HIR expression.",65,[[],["hir"]]],[11,R[418],E,"Creates a literal HIR expression.",65,[[[R[418]]],["hir"]]],[11,"class",E,"Creates a class HIR expression.",65,[[["class"]],["hir"]]],[11,"anchor",E,"Creates an anchor assertion HIR expression.",65,[[["anchor"]],["hir"]]],[11,"word_boundary",E,"Creates a word boundary assertion HIR expression.",65,[[[R[477]]],["hir"]]],[11,R[419],E,"Creates a repetition HIR expression.",65,[[[R[419]]],["hir"]]],[11,"group",E,"Creates a group HIR expression.",65,[[["group"]],["hir"]]],[11,"concat",E,"Returns the concatenation of the given expressions.",65,[[["hir"],["vec",["hir"]]],["hir"]]],[11,R[460],E,"Returns the alternation of the given expressions.",65,[[["hir"],["vec",["hir"]]],["hir"]]],[11,"dot",E,"Build an HIR expression for `.`.",65,[[["bool"]],["hir"]]],[11,"any",E,"Build an HIR expression for `(?s).`.",65,[[["bool"]],["hir"]]],[11,R[422],E,"Return true if and only if this HIR will always match…",65,[[["self"]],["bool"]]],[11,"is_all_assertions",E,"Returns true if and only if this entire HIR expression is…",65,[[["self"]],["bool"]]],[11,"is_anchored_start",E,R[420],65,[[["self"]],["bool"]]],[11,"is_anchored_end",E,R[420],65,[[["self"]],["bool"]]],[11,"is_any_anchored_start",E,R[421],65,[[["self"]],["bool"]]],[11,"is_any_anchored_end",E,R[421],65,[[["self"]],["bool"]]],[11,R[440],E,"Return true if and only if the empty string is part of the…",65,[[["self"]],["bool"]]],[11,R[404],E,"Return true if and only if this HIR is the empty regular…",50,[[["self"]],["bool"]]],[11,"has_subexprs",E,"Returns true if and only if this kind has any (including…",50,[[["self"]],["bool"]]],[11,"is_unicode",E,"Returns true if and only if this literal corresponds to a…",51,[[["self"]],["bool"]]],[11,R[424],E,"Apply Unicode simple case folding to this character class,…",52,[[["self"]]]],[11,"negate",E,"Negate this character class in place.",52,[[["self"]]]],[11,R[422],E,"Returns true if and only if this character class will only…",52,[[["self"]],["bool"]]],[11,"new",E,R[426],66,[[["i"]],[R[423]]]],[11,"empty",E,R[428],66,[[],[R[423]]]],[11,"push",E,R[429],66,[[["self"],[R[425]]]]],[11,"iter",E,R[430],66,[[["self"]],["classunicodeiter"]]],[11,"ranges",E,R[431],66,[[["self"]]]],[11,R[424],E,R[432],66,[[["self"]]]],[11,"negate",E,"Negate this character class.",66,[[["self"]]]],[11,"union",E,"Union this character class with the given character class,…",66,[[["self"],[R[423]]]]],[11,R[433],E,"Intersect this character class with the given character…",66,[[["self"],[R[423]]]]],[11,R[434],E,"Subtract the given character class from this character…",66,[[["self"],[R[423]]]]],[11,R[435],E,"Compute the symmetric difference of the given character…",66,[[["self"],[R[423]]]]],[11,"new",E,"Create a new Unicode scalar value range for a character…",67,[[["char"]],[R[425]]]],[11,"start",E,R[437],67,[[["self"]],["char"]]],[11,"end",E,R[438],67,[[["self"]],["char"]]],[11,"new",E,R[426],68,[[["i"]],[R[427]]]],[11,"empty",E,R[428],68,[[],[R[427]]]],[11,"push",E,R[429],68,[[["self"],[R[436]]]]],[11,"iter",E,R[430],68,[[["self"]],["classbytesiter"]]],[11,"ranges",E,R[431],68,[[["self"]]]],[11,R[424],E,R[432],68,[[["self"]]]],[11,"negate",E,"Negate this byte class.",68,[[["self"]]]],[11,"union",E,"Union this byte class with the given byte class, in place.",68,[[["self"],[R[427]]]]],[11,R[433],E,"Intersect this byte class with the given byte class, in…",68,[[["self"],[R[427]]]]],[11,R[434],E,"Subtract the given byte class from this byte class, in…",68,[[["self"],[R[427]]]]],[11,R[435],E,"Compute the symmetric difference of the given byte…",68,[[["self"],[R[427]]]]],[11,"is_all_ascii",E,"Returns true if and only if this character class will…",68,[[["self"]],["bool"]]],[11,"new",E,"Create a new byte range for a character class.",69,[[["u8"]],[R[436]]]],[11,"start",E,R[437],69,[[["self"]],["u8"]]],[11,"end",E,R[438],69,[[["self"]],["u8"]]],[11,R[439],E,"Returns true if and only if this word boundary assertion…",54,[[["self"]],["bool"]]],[11,R[440],E,"Returns true if and only if this repetition operator makes…",48,[[["self"]],["bool"]]],[11,"new",R[360],R[441],70,[[],[R[379]]]],[11,"build",E,R[442],70,[[["self"]],["parser"]]],[11,R[443],E,R[444],70,[[["u32"],["self"]],[R[379]]]],[11,"octal",E,R[445],70,[[["self"],["bool"]],[R[379]]]],[11,R[446],E,"When enabled, the parser will permit the construction of a…",70,[[["self"],["bool"]],[R[379]]]],[11,R[447],E,R[448],70,[[["self"],["bool"]],[R[379]]]],[11,R[449],E,"Enable or disable the case insensitive flag by default.",70,[[["self"],["bool"]],[R[379]]]],[11,R[450],E,"Enable or disable the multi-line matching flag by default.",70,[[["self"],["bool"]],[R[379]]]],[11,R[451],E,"Enable or disable the \"dot matches any character\" flag by…",70,[[["self"],["bool"]],[R[379]]]],[11,R[452],E,"Enable or disable the \"swap greed\" flag by default.",70,[[["self"],["bool"]],[R[379]]]],[11,"unicode",E,R[453],70,[[["self"],["bool"]],[R[379]]]],[11,"new",E,R[454],71,[[],["parser"]]],[11,"parse",E,"Parse the regular expression into a high level…",71,[[["str"],["self"]],[[R[2],["hir"]],["hir"]]]],[6,"Result",E,"A type alias for dealing with errors returned by this crate.",N,N],[11,"from",E,E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[66],E,E,71,[[["self"]],[T]]],[11,R[67],E,E,71,[[[T],["self"]]]],[11,R[8],E,E,71,[[[U]],[R[2]]]],[11,R[29],E,E,71,[[["self"]],[T]]],[11,R[15],E,E,71,[[["self"]],[R[30]]]],[11,R[10],E,E,71,[[["self"]],[T]]],[11,R[9],E,E,71,[[],[R[2]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[66],E,E,70,[[["self"]],[T]]],[11,R[67],E,E,70,[[[T],["self"]]]],[11,R[8],E,E,70,[[[U]],[R[2]]]],[11,R[29],E,E,70,[[["self"]],[T]]],[11,R[15],E,E,70,[[["self"]],[R[30]]]],[11,R[10],E,E,70,[[["self"]],[T]]],[11,R[9],E,E,70,[[],[R[2]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[66],E,E,0,[[["self"]],[T]]],[11,R[67],E,E,0,[[[T],["self"]]]],[11,R[161],E,E,0,[[["self"]],[R[34]]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",R[362],E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[66],E,E,46,[[["self"]],[T]]],[11,R[67],E,E,46,[[[T],["self"]]]],[11,R[161],E,E,46,[[["self"]],[R[34]]]],[11,R[8],E,E,46,[[[U]],[R[2]]]],[11,R[29],E,E,46,[[["self"]],[T]]],[11,R[15],E,E,46,[[["self"]],[R[30]]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[9],E,E,46,[[],[R[2]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[66],E,E,1,[[["self"]],[T]]],[11,R[67],E,E,1,[[[T],["self"]]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[66],E,E,2,[[["self"]],[T]]],[11,R[67],E,E,2,[[[T],["self"]]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[66],E,E,3,[[["self"]],[T]]],[11,R[67],E,E,3,[[[T],["self"]]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[66],E,E,4,[[["self"]],[T]]],[11,R[67],E,E,4,[[[T],["self"]]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[30]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[66],E,E,5,[[["self"]],[T]]],[11,R[67],E,E,5,[[[T],["self"]]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[30]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[66],E,E,6,[[["self"]],[T]]],[11,R[67],E,E,6,[[[T],["self"]]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[30]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[66],E,E,7,[[["self"]],[T]]],[11,R[67],E,E,7,[[[T],["self"]]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[30]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[66],E,E,8,[[["self"]],[T]]],[11,R[67],E,E,8,[[[T],["self"]]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[R[30]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[66],E,E,9,[[["self"]],[T]]],[11,R[67],E,E,9,[[[T],["self"]]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[29],E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"]],[R[30]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[66],E,E,10,[[["self"]],[T]]],[11,R[67],E,E,10,[[[T],["self"]]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[29],E,E,10,[[["self"]],[T]]],[11,R[15],E,E,10,[[["self"]],[R[30]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[66],E,E,11,[[["self"]],[T]]],[11,R[67],E,E,11,[[[T],["self"]]]],[11,R[8],E,E,11,[[[U]],[R[2]]]],[11,R[29],E,E,11,[[["self"]],[T]]],[11,R[15],E,E,11,[[["self"]],[R[30]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[],[R[2]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[66],E,E,12,[[["self"]],[T]]],[11,R[67],E,E,12,[[[T],["self"]]]],[11,R[8],E,E,12,[[[U]],[R[2]]]],[11,R[29],E,E,12,[[["self"]],[T]]],[11,R[15],E,E,12,[[["self"]],[R[30]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[],[R[2]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[66],E,E,13,[[["self"]],[T]]],[11,R[67],E,E,13,[[[T],["self"]]]],[11,R[8],E,E,13,[[[U]],[R[2]]]],[11,R[29],E,E,13,[[["self"]],[T]]],[11,R[15],E,E,13,[[["self"]],[R[30]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[],[R[2]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[66],E,E,14,[[["self"]],[T]]],[11,R[67],E,E,14,[[[T],["self"]]]],[11,R[8],E,E,14,[[[U]],[R[2]]]],[11,R[29],E,E,14,[[["self"]],[T]]],[11,R[15],E,E,14,[[["self"]],[R[30]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[],[R[2]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[66],E,E,15,[[["self"]],[T]]],[11,R[67],E,E,15,[[[T],["self"]]]],[11,R[8],E,E,15,[[[U]],[R[2]]]],[11,R[29],E,E,15,[[["self"]],[T]]],[11,R[15],E,E,15,[[["self"]],[R[30]]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[],[R[2]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[66],E,E,16,[[["self"]],[T]]],[11,R[67],E,E,16,[[[T],["self"]]]],[11,R[8],E,E,16,[[[U]],[R[2]]]],[11,R[29],E,E,16,[[["self"]],[T]]],[11,R[15],E,E,16,[[["self"]],[R[30]]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[9],E,E,16,[[],[R[2]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[66],E,E,17,[[["self"]],[T]]],[11,R[67],E,E,17,[[[T],["self"]]]],[11,R[8],E,E,17,[[[U]],[R[2]]]],[11,R[29],E,E,17,[[["self"]],[T]]],[11,R[15],E,E,17,[[["self"]],[R[30]]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[9],E,E,17,[[],[R[2]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[66],E,E,18,[[["self"]],[T]]],[11,R[67],E,E,18,[[[T],["self"]]]],[11,R[8],E,E,18,[[[U]],[R[2]]]],[11,R[29],E,E,18,[[["self"]],[T]]],[11,R[15],E,E,18,[[["self"]],[R[30]]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[9],E,E,18,[[],[R[2]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[66],E,E,19,[[["self"]],[T]]],[11,R[67],E,E,19,[[[T],["self"]]]],[11,R[8],E,E,19,[[[U]],[R[2]]]],[11,R[29],E,E,19,[[["self"]],[T]]],[11,R[15],E,E,19,[[["self"]],[R[30]]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[9],E,E,19,[[],[R[2]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[66],E,E,20,[[["self"]],[T]]],[11,R[67],E,E,20,[[[T],["self"]]]],[11,R[8],E,E,20,[[[U]],[R[2]]]],[11,R[29],E,E,20,[[["self"]],[T]]],[11,R[15],E,E,20,[[["self"]],[R[30]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[],[R[2]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[66],E,E,21,[[["self"]],[T]]],[11,R[67],E,E,21,[[[T],["self"]]]],[11,R[8],E,E,21,[[[U]],[R[2]]]],[11,R[29],E,E,21,[[["self"]],[T]]],[11,R[15],E,E,21,[[["self"]],[R[30]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[],[R[2]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[66],E,E,22,[[["self"]],[T]]],[11,R[67],E,E,22,[[[T],["self"]]]],[11,R[8],E,E,22,[[[U]],[R[2]]]],[11,R[29],E,E,22,[[["self"]],[T]]],[11,R[15],E,E,22,[[["self"]],[R[30]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[],[R[2]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[66],E,E,23,[[["self"]],[T]]],[11,R[67],E,E,23,[[[T],["self"]]]],[11,R[161],E,E,23,[[["self"]],[R[34]]]],[11,R[8],E,E,23,[[[U]],[R[2]]]],[11,R[29],E,E,23,[[["self"]],[T]]],[11,R[15],E,E,23,[[["self"]],[R[30]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[],[R[2]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[66],E,E,24,[[["self"]],[T]]],[11,R[67],E,E,24,[[[T],["self"]]]],[11,R[161],E,E,24,[[["self"]],[R[34]]]],[11,R[8],E,E,24,[[[U]],[R[2]]]],[11,R[29],E,E,24,[[["self"]],[T]]],[11,R[15],E,E,24,[[["self"]],[R[30]]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[],[R[2]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[66],E,E,25,[[["self"]],[T]]],[11,R[67],E,E,25,[[[T],["self"]]]],[11,R[8],E,E,25,[[[U]],[R[2]]]],[11,R[29],E,E,25,[[["self"]],[T]]],[11,R[15],E,E,25,[[["self"]],[R[30]]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[9],E,E,25,[[],[R[2]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[66],E,E,26,[[["self"]],[T]]],[11,R[67],E,E,26,[[[T],["self"]]]],[11,R[8],E,E,26,[[[U]],[R[2]]]],[11,R[29],E,E,26,[[["self"]],[T]]],[11,R[15],E,E,26,[[["self"]],[R[30]]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[9],E,E,26,[[],[R[2]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[66],E,E,27,[[["self"]],[T]]],[11,R[67],E,E,27,[[[T],["self"]]]],[11,R[8],E,E,27,[[[U]],[R[2]]]],[11,R[29],E,E,27,[[["self"]],[T]]],[11,R[15],E,E,27,[[["self"]],[R[30]]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[],[R[2]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[66],E,E,28,[[["self"]],[T]]],[11,R[67],E,E,28,[[[T],["self"]]]],[11,R[8],E,E,28,[[[U]],[R[2]]]],[11,R[29],E,E,28,[[["self"]],[T]]],[11,R[15],E,E,28,[[["self"]],[R[30]]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[],[R[2]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[66],E,E,29,[[["self"]],[T]]],[11,R[67],E,E,29,[[[T],["self"]]]],[11,R[8],E,E,29,[[[U]],[R[2]]]],[11,R[29],E,E,29,[[["self"]],[T]]],[11,R[15],E,E,29,[[["self"]],[R[30]]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[],[R[2]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[66],E,E,30,[[["self"]],[T]]],[11,R[67],E,E,30,[[[T],["self"]]]],[11,R[8],E,E,30,[[[U]],[R[2]]]],[11,R[29],E,E,30,[[["self"]],[T]]],[11,R[15],E,E,30,[[["self"]],[R[30]]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[],[R[2]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[66],E,E,31,[[["self"]],[T]]],[11,R[67],E,E,31,[[[T],["self"]]]],[11,R[8],E,E,31,[[[U]],[R[2]]]],[11,R[29],E,E,31,[[["self"]],[T]]],[11,R[15],E,E,31,[[["self"]],[R[30]]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[],[R[2]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[66],E,E,32,[[["self"]],[T]]],[11,R[67],E,E,32,[[[T],["self"]]]],[11,R[8],E,E,32,[[[U]],[R[2]]]],[11,R[29],E,E,32,[[["self"]],[T]]],[11,R[15],E,E,32,[[["self"]],[R[30]]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[],[R[2]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[66],E,E,33,[[["self"]],[T]]],[11,R[67],E,E,33,[[[T],["self"]]]],[11,R[8],E,E,33,[[[U]],[R[2]]]],[11,R[29],E,E,33,[[["self"]],[T]]],[11,R[15],E,E,33,[[["self"]],[R[30]]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[9],E,E,33,[[],[R[2]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[66],E,E,34,[[["self"]],[T]]],[11,R[67],E,E,34,[[[T],["self"]]]],[11,R[8],E,E,34,[[[U]],[R[2]]]],[11,R[29],E,E,34,[[["self"]],[T]]],[11,R[15],E,E,34,[[["self"]],[R[30]]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[9],E,E,34,[[],[R[2]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[66],E,E,35,[[["self"]],[T]]],[11,R[67],E,E,35,[[[T],["self"]]]],[11,R[8],E,E,35,[[[U]],[R[2]]]],[11,R[29],E,E,35,[[["self"]],[T]]],[11,R[15],E,E,35,[[["self"]],[R[30]]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[9],E,E,35,[[],[R[2]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[66],E,E,36,[[["self"]],[T]]],[11,R[67],E,E,36,[[[T],["self"]]]],[11,R[8],E,E,36,[[[U]],[R[2]]]],[11,R[29],E,E,36,[[["self"]],[T]]],[11,R[15],E,E,36,[[["self"]],[R[30]]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[9],E,E,36,[[],[R[2]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[66],E,E,37,[[["self"]],[T]]],[11,R[67],E,E,37,[[[T],["self"]]]],[11,R[8],E,E,37,[[[U]],[R[2]]]],[11,R[29],E,E,37,[[["self"]],[T]]],[11,R[15],E,E,37,[[["self"]],[R[30]]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[9],E,E,37,[[],[R[2]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[66],E,E,38,[[["self"]],[T]]],[11,R[67],E,E,38,[[[T],["self"]]]],[11,R[8],E,E,38,[[[U]],[R[2]]]],[11,R[29],E,E,38,[[["self"]],[T]]],[11,R[15],E,E,38,[[["self"]],[R[30]]]],[11,R[10],E,E,38,[[["self"]],[T]]],[11,R[9],E,E,38,[[],[R[2]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[66],E,E,39,[[["self"]],[T]]],[11,R[67],E,E,39,[[[T],["self"]]]],[11,R[8],E,E,39,[[[U]],[R[2]]]],[11,R[29],E,E,39,[[["self"]],[T]]],[11,R[15],E,E,39,[[["self"]],[R[30]]]],[11,R[10],E,E,39,[[["self"]],[T]]],[11,R[9],E,E,39,[[],[R[2]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[66],E,E,40,[[["self"]],[T]]],[11,R[67],E,E,40,[[[T],["self"]]]],[11,R[8],E,E,40,[[[U]],[R[2]]]],[11,R[29],E,E,40,[[["self"]],[T]]],[11,R[15],E,E,40,[[["self"]],[R[30]]]],[11,R[10],E,E,40,[[["self"]],[T]]],[11,R[9],E,E,40,[[],[R[2]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[66],E,E,41,[[["self"]],[T]]],[11,R[67],E,E,41,[[[T],["self"]]]],[11,R[8],E,E,41,[[[U]],[R[2]]]],[11,R[29],E,E,41,[[["self"]],[T]]],[11,R[15],E,E,41,[[["self"]],[R[30]]]],[11,R[10],E,E,41,[[["self"]],[T]]],[11,R[9],E,E,41,[[],[R[2]]]],[11,"from",R[455],E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[66],E,E,42,[[["self"]],[T]]],[11,R[67],E,E,42,[[[T],["self"]]]],[11,R[8],E,E,42,[[[U]],[R[2]]]],[11,R[29],E,E,42,[[["self"]],[T]]],[11,R[15],E,E,42,[[["self"]],[R[30]]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[9],E,E,42,[[],[R[2]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[66],E,E,43,[[["self"]],[T]]],[11,R[67],E,E,43,[[[T],["self"]]]],[11,R[8],E,E,43,[[[U]],[R[2]]]],[11,R[29],E,E,43,[[["self"]],[T]]],[11,R[15],E,E,43,[[["self"]],[R[30]]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[9],E,E,43,[[],[R[2]]]],[11,"from",R[456],E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[8],E,E,44,[[[U]],[R[2]]]],[11,R[29],E,E,44,[[["self"]],[T]]],[11,R[15],E,E,44,[[["self"]],[R[30]]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[9],E,E,44,[[],[R[2]]]],[11,"from",R[394],E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[66],E,E,64,[[["self"]],[T]]],[11,R[67],E,E,64,[[[T],["self"]]]],[11,R[161],E,E,64,[[["self"]],[R[34]]]],[11,R[8],E,E,64,[[[U]],[R[2]]]],[11,R[29],E,E,64,[[["self"]],[T]]],[11,R[15],E,E,64,[[["self"]],[R[30]]]],[11,R[10],E,E,64,[[["self"]],[T]]],[11,R[9],E,E,64,[[],[R[2]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[66],E,E,65,[[["self"]],[T]]],[11,R[67],E,E,65,[[[T],["self"]]]],[11,R[161],E,E,65,[[["self"]],[R[34]]]],[11,R[8],E,E,65,[[[U]],[R[2]]]],[11,R[29],E,E,65,[[["self"]],[T]]],[11,R[15],E,E,65,[[["self"]],[R[30]]]],[11,R[10],E,E,65,[[["self"]],[T]]],[11,R[9],E,E,65,[[],[R[2]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[66],E,E,66,[[["self"]],[T]]],[11,R[67],E,E,66,[[[T],["self"]]]],[11,R[8],E,E,66,[[[U]],[R[2]]]],[11,R[29],E,E,66,[[["self"]],[T]]],[11,R[15],E,E,66,[[["self"]],[R[30]]]],[11,R[10],E,E,66,[[["self"]],[T]]],[11,R[9],E,E,66,[[],[R[2]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[22],E,E,72,[[],["i"]]],[11,"into",E,E,72,[[],[U]]],[11,R[8],E,E,72,[[[U]],[R[2]]]],[11,R[29],E,E,72,[[["self"]],[T]]],[11,R[15],E,E,72,[[["self"]],[R[30]]]],[11,R[10],E,E,72,[[["self"]],[T]]],[11,R[9],E,E,72,[[],[R[2]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[66],E,E,67,[[["self"]],[T]]],[11,R[67],E,E,67,[[[T],["self"]]]],[11,R[8],E,E,67,[[[U]],[R[2]]]],[11,R[29],E,E,67,[[["self"]],[T]]],[11,R[15],E,E,67,[[["self"]],[R[30]]]],[11,R[10],E,E,67,[[["self"]],[T]]],[11,R[9],E,E,67,[[],[R[2]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[66],E,E,68,[[["self"]],[T]]],[11,R[67],E,E,68,[[[T],["self"]]]],[11,R[8],E,E,68,[[[U]],[R[2]]]],[11,R[29],E,E,68,[[["self"]],[T]]],[11,R[15],E,E,68,[[["self"]],[R[30]]]],[11,R[10],E,E,68,[[["self"]],[T]]],[11,R[9],E,E,68,[[],[R[2]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[22],E,E,73,[[],["i"]]],[11,"into",E,E,73,[[],[U]]],[11,R[8],E,E,73,[[[U]],[R[2]]]],[11,R[29],E,E,73,[[["self"]],[T]]],[11,R[15],E,E,73,[[["self"]],[R[30]]]],[11,R[10],E,E,73,[[["self"]],[T]]],[11,R[9],E,E,73,[[],[R[2]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[66],E,E,69,[[["self"]],[T]]],[11,R[67],E,E,69,[[[T],["self"]]]],[11,R[8],E,E,69,[[[U]],[R[2]]]],[11,R[29],E,E,69,[[["self"]],[T]]],[11,R[15],E,E,69,[[["self"]],[R[30]]]],[11,R[10],E,E,69,[[["self"]],[T]]],[11,R[9],E,E,69,[[],[R[2]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[66],E,E,47,[[["self"]],[T]]],[11,R[67],E,E,47,[[[T],["self"]]]],[11,R[8],E,E,47,[[[U]],[R[2]]]],[11,R[29],E,E,47,[[["self"]],[T]]],[11,R[15],E,E,47,[[["self"]],[R[30]]]],[11,R[10],E,E,47,[[["self"]],[T]]],[11,R[9],E,E,47,[[],[R[2]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[66],E,E,48,[[["self"]],[T]]],[11,R[67],E,E,48,[[[T],["self"]]]],[11,R[8],E,E,48,[[[U]],[R[2]]]],[11,R[29],E,E,48,[[["self"]],[T]]],[11,R[15],E,E,48,[[["self"]],[R[30]]]],[11,R[10],E,E,48,[[["self"]],[T]]],[11,R[9],E,E,48,[[],[R[2]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[66],E,E,49,[[["self"]],[T]]],[11,R[67],E,E,49,[[[T],["self"]]]],[11,R[161],E,E,49,[[["self"]],[R[34]]]],[11,R[8],E,E,49,[[[U]],[R[2]]]],[11,R[29],E,E,49,[[["self"]],[T]]],[11,R[15],E,E,49,[[["self"]],[R[30]]]],[11,R[10],E,E,49,[[["self"]],[T]]],[11,R[9],E,E,49,[[],[R[2]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[66],E,E,50,[[["self"]],[T]]],[11,R[67],E,E,50,[[[T],["self"]]]],[11,R[8],E,E,50,[[[U]],[R[2]]]],[11,R[29],E,E,50,[[["self"]],[T]]],[11,R[15],E,E,50,[[["self"]],[R[30]]]],[11,R[10],E,E,50,[[["self"]],[T]]],[11,R[9],E,E,50,[[],[R[2]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[66],E,E,51,[[["self"]],[T]]],[11,R[67],E,E,51,[[[T],["self"]]]],[11,R[8],E,E,51,[[[U]],[R[2]]]],[11,R[29],E,E,51,[[["self"]],[T]]],[11,R[15],E,E,51,[[["self"]],[R[30]]]],[11,R[10],E,E,51,[[["self"]],[T]]],[11,R[9],E,E,51,[[],[R[2]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[66],E,E,52,[[["self"]],[T]]],[11,R[67],E,E,52,[[[T],["self"]]]],[11,R[8],E,E,52,[[[U]],[R[2]]]],[11,R[29],E,E,52,[[["self"]],[T]]],[11,R[15],E,E,52,[[["self"]],[R[30]]]],[11,R[10],E,E,52,[[["self"]],[T]]],[11,R[9],E,E,52,[[],[R[2]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[66],E,E,53,[[["self"]],[T]]],[11,R[67],E,E,53,[[[T],["self"]]]],[11,R[8],E,E,53,[[[U]],[R[2]]]],[11,R[29],E,E,53,[[["self"]],[T]]],[11,R[15],E,E,53,[[["self"]],[R[30]]]],[11,R[10],E,E,53,[[["self"]],[T]]],[11,R[9],E,E,53,[[],[R[2]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[66],E,E,54,[[["self"]],[T]]],[11,R[67],E,E,54,[[[T],["self"]]]],[11,R[8],E,E,54,[[[U]],[R[2]]]],[11,R[29],E,E,54,[[["self"]],[T]]],[11,R[15],E,E,54,[[["self"]],[R[30]]]],[11,R[10],E,E,54,[[["self"]],[T]]],[11,R[9],E,E,54,[[],[R[2]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[66],E,E,55,[[["self"]],[T]]],[11,R[67],E,E,55,[[[T],["self"]]]],[11,R[8],E,E,55,[[[U]],[R[2]]]],[11,R[29],E,E,55,[[["self"]],[T]]],[11,R[15],E,E,55,[[["self"]],[R[30]]]],[11,R[10],E,E,55,[[["self"]],[T]]],[11,R[9],E,E,55,[[],[R[2]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[66],E,E,56,[[["self"]],[T]]],[11,R[67],E,E,56,[[[T],["self"]]]],[11,R[8],E,E,56,[[[U]],[R[2]]]],[11,R[29],E,E,56,[[["self"]],[T]]],[11,R[15],E,E,56,[[["self"]],[R[30]]]],[11,R[10],E,E,56,[[["self"]],[T]]],[11,R[9],E,E,56,[[],[R[2]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[66],E,E,57,[[["self"]],[T]]],[11,R[67],E,E,57,[[[T],["self"]]]],[11,R[8],E,E,57,[[[U]],[R[2]]]],[11,R[29],E,E,57,[[["self"]],[T]]],[11,R[15],E,E,57,[[["self"]],[R[30]]]],[11,R[10],E,E,57,[[["self"]],[T]]],[11,R[9],E,E,57,[[],[R[2]]]],[11,"from",R[457],E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[66],E,E,58,[[["self"]],[T]]],[11,R[67],E,E,58,[[[T],["self"]]]],[11,R[8],E,E,58,[[[U]],[R[2]]]],[11,R[29],E,E,58,[[["self"]],[T]]],[11,R[15],E,E,58,[[["self"]],[R[30]]]],[11,R[10],E,E,58,[[["self"]],[T]]],[11,R[9],E,E,58,[[],[R[2]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[66],E,E,59,[[["self"]],[T]]],[11,R[67],E,E,59,[[[T],["self"]]]],[11,R[8],E,E,59,[[[U]],[R[2]]]],[11,R[29],E,E,59,[[["self"]],[T]]],[11,R[15],E,E,59,[[["self"]],[R[30]]]],[11,R[10],E,E,59,[[["self"]],[T]]],[11,R[9],E,E,59,[[],[R[2]]]],[11,"from",R[458],E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[8],E,E,60,[[[U]],[R[2]]]],[11,R[29],E,E,60,[[["self"]],[T]]],[11,R[15],E,E,60,[[["self"]],[R[30]]]],[11,R[10],E,E,60,[[["self"]],[T]]],[11,R[9],E,E,60,[[],[R[2]]]],[11,"from",R[459],E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[66],E,E,61,[[["self"]],[T]]],[11,R[67],E,E,61,[[[T],["self"]]]],[11,R[8],E,E,61,[[[U]],[R[2]]]],[11,R[29],E,E,61,[[["self"]],[T]]],[11,R[15],E,E,61,[[["self"]],[R[30]]]],[11,R[10],E,E,61,[[["self"]],[T]]],[11,R[9],E,E,61,[[],[R[2]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[66],E,E,62,[[["self"]],[T]]],[11,R[67],E,E,62,[[[T],["self"]]]],[11,R[8],E,E,62,[[[U]],[R[2]]]],[11,R[29],E,E,62,[[["self"]],[T]]],[11,R[15],E,E,62,[[["self"]],[R[30]]]],[11,R[10],E,E,62,[[["self"]],[T]]],[11,R[9],E,E,62,[[],[R[2]]]],[11,"eq",R[362],E,46,[[["error"],["self"]],["bool"]]],[11,"ne",E,E,46,[[["error"],["self"]],["bool"]]],[11,"eq",E,E,23,[[[R[415]],["self"]],["bool"]]],[11,"ne",E,E,23,[[[R[415]],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["span"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["span"]],["bool"]]],[11,"eq",E,E,2,[[[R[257]],["self"]],["bool"]]],[11,"ne",E,E,2,[[[R[257]],["self"]],["bool"]]],[11,"eq",E,E,3,[[[R[380]],["self"]],["bool"]]],[11,"ne",E,E,3,[[[R[380]],["self"]],["bool"]]],[11,"eq",E,E,4,[[["comment"],["self"]],["bool"]]],[11,"ne",E,E,4,[[["comment"],["self"]],["bool"]]],[11,"eq",E,E,24,[[["self"],["ast"]],["bool"]]],[11,"ne",E,E,24,[[["self"],["ast"]],["bool"]]],[11,"eq",E,E,5,[[[R[460]],["self"]],["bool"]]],[11,"ne",E,E,5,[[[R[460]],["self"]],["bool"]]],[11,"eq",E,E,6,[[["concat"],["self"]],["bool"]]],[11,"ne",E,E,6,[[["concat"],["self"]],["bool"]]],[11,"eq",E,E,7,[[[R[418]],["self"]],["bool"]]],[11,"ne",E,E,7,[[[R[418]],["self"]],["bool"]]],[11,"eq",E,E,25,[[[R[461]],["self"]],["bool"]]],[11,"ne",E,E,25,[[[R[461]],["self"]],["bool"]]],[11,"eq",E,E,26,[[[R[478]],["self"]],["bool"]]],[11,"eq",E,E,27,[[[R[479]],["self"]],["bool"]]],[11,"eq",E,E,28,[[["self"],["class"]],["bool"]]],[11,"ne",E,E,28,[[["self"],["class"]],["bool"]]],[11,"eq",E,E,8,[[[R[462]],["self"]],["bool"]]],[11,"ne",E,E,8,[[[R[462]],["self"]],["bool"]]],[11,"eq",E,E,29,[[[R[480]],["self"]],["bool"]]],[11,"eq",E,E,9,[[[R[463]],["self"]],["bool"]]],[11,"ne",E,E,9,[[[R[463]],["self"]],["bool"]]],[11,"eq",E,E,30,[[["self"],[R[383]]],["bool"]]],[11,"eq",E,E,10,[[[R[423]],["self"]],["bool"]]],[11,"ne",E,E,10,[[[R[423]],["self"]],["bool"]]],[11,"eq",E,E,31,[[[R[464]],["self"]],["bool"]]],[11,"ne",E,E,31,[[[R[464]],["self"]],["bool"]]],[11,"eq",E,E,32,[[[R[481]],["self"]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[465]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[465]]],["bool"]]],[11,"eq",E,E,33,[[[R[466]],["self"]],["bool"]]],[11,"ne",E,E,33,[[[R[466]],["self"]],["bool"]]],[11,"eq",E,E,34,[[["self"],[R[381]]],["bool"]]],[11,"ne",E,E,34,[[["self"],[R[381]]],["bool"]]],[11,"eq",E,E,12,[[[R[467]],["self"]],["bool"]]],[11,"ne",E,E,12,[[[R[467]],["self"]],["bool"]]],[11,"eq",E,E,13,[[[R[468]],["self"]],["bool"]]],[11,"ne",E,E,13,[[[R[468]],["self"]],["bool"]]],[11,"eq",E,E,14,[[[R[382]],["self"]],["bool"]]],[11,"ne",E,E,14,[[[R[382]],["self"]],["bool"]]],[11,"eq",E,E,35,[[[R[482]],["self"]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[469]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[469]]],["bool"]]],[11,"eq",E,E,36,[[[R[483]],["self"]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[419]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[419]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[470]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[470]]],["bool"]]],[11,"eq",E,E,37,[[[R[471]],["self"]],["bool"]]],[11,"ne",E,E,37,[[[R[471]],["self"]],["bool"]]],[11,"eq",E,E,38,[[[R[472]],["self"]],["bool"]]],[11,"ne",E,E,38,[[[R[472]],["self"]],["bool"]]],[11,"eq",E,E,18,[[["group"],["self"]],["bool"]]],[11,"ne",E,E,18,[[["group"],["self"]],["bool"]]],[11,"eq",E,E,39,[[[R[473]],["self"]],["bool"]]],[11,"ne",E,E,39,[[[R[473]],["self"]],["bool"]]],[11,"eq",E,E,19,[[[R[474]],["self"]],["bool"]]],[11,"ne",E,E,19,[[[R[474]],["self"]],["bool"]]],[11,"eq",E,E,20,[[[R[484]],["self"]],["bool"]]],[11,"ne",E,E,20,[[[R[484]],["self"]],["bool"]]],[11,"eq",E,E,21,[[["flags"],["self"]],["bool"]]],[11,"ne",E,E,21,[[["flags"],["self"]],["bool"]]],[11,"eq",E,E,22,[[[R[475]],["self"]],["bool"]]],[11,"ne",E,E,22,[[[R[475]],["self"]],["bool"]]],[11,"eq",E,E,40,[[[R[476]],["self"]],["bool"]]],[11,"ne",E,E,40,[[[R[476]],["self"]],["bool"]]],[11,"eq",E,E,41,[[["self"],["flag"]],["bool"]]],[11,"eq",R[360],E,0,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["error"]],["bool"]]],[11,"eq",R[457],E,58,[[[R[403]],["self"]],["bool"]]],[11,"ne",E,E,58,[[[R[403]],["self"]],["bool"]]],[11,"eq",E,E,59,[[["self"],[R[418]]],["bool"]]],[11,"eq",R[394],E,64,[[["error"],["self"]],["bool"]]],[11,"ne",E,E,64,[[["error"],["self"]],["bool"]]],[11,"eq",E,E,49,[[[R[415]],["self"]],["bool"]]],[11,"eq",E,E,65,[[["hir"],["self"]],["bool"]]],[11,"ne",E,E,65,[[["hir"],["self"]],["bool"]]],[11,"eq",E,E,50,[[["self"],["hirkind"]],["bool"]]],[11,"ne",E,E,50,[[["self"],["hirkind"]],["bool"]]],[11,"eq",E,E,51,[[["self"],[R[418]]],["bool"]]],[11,"ne",E,E,51,[[["self"],[R[418]]],["bool"]]],[11,"eq",E,E,52,[[["class"],["self"]],["bool"]]],[11,"ne",E,E,52,[[["class"],["self"]],["bool"]]],[11,"eq",E,E,66,[[[R[423]],["self"]],["bool"]]],[11,"ne",E,E,66,[[[R[423]],["self"]],["bool"]]],[11,"eq",E,E,67,[[[R[425]],["self"]],["bool"]]],[11,"ne",E,E,67,[[[R[425]],["self"]],["bool"]]],[11,"eq",E,E,68,[[[R[427]],["self"]],["bool"]]],[11,"ne",E,E,68,[[[R[427]],["self"]],["bool"]]],[11,"eq",E,E,69,[[[R[436]],["self"]],["bool"]]],[11,"ne",E,E,69,[[[R[436]],["self"]],["bool"]]],[11,"eq",E,E,53,[[["anchor"],["self"]],["bool"]]],[11,"eq",E,E,54,[[[R[477]],["self"]],["bool"]]],[11,"eq",E,E,47,[[["self"],["group"]],["bool"]]],[11,"ne",E,E,47,[[["self"],["group"]],["bool"]]],[11,"eq",E,E,55,[[[R[473]],["self"]],["bool"]]],[11,"ne",E,E,55,[[[R[473]],["self"]],["bool"]]],[11,"eq",E,E,48,[[["self"],[R[419]]],["bool"]]],[11,"ne",E,E,48,[[["self"],[R[419]]],["bool"]]],[11,"eq",E,E,56,[[[R[471]],["self"]],["bool"]]],[11,"ne",E,E,56,[[[R[471]],["self"]],["bool"]]],[11,"eq",E,E,57,[[[R[472]],["self"]],["bool"]]],[11,"ne",E,E,57,[[[R[472]],["self"]],["bool"]]],[11,"clone",R[455],E,42,[[["self"]],[R[379]]]],[11,"clone",E,E,43,[[["self"]],["parser"]]],[11,"clone",R[362],E,46,[[["self"]],["error"]]],[11,"clone",E,E,23,[[["self"]],[R[415]]]],[11,"clone",E,E,1,[[["self"]],["span"]]],[11,"clone",E,E,2,[[["self"]],[R[257]]]],[11,"clone",E,E,3,[[["self"]],[R[380]]]],[11,"clone",E,E,4,[[["self"]],["comment"]]],[11,"clone",E,E,24,[[["self"]],["ast"]]],[11,"clone",E,E,5,[[["self"]],[R[460]]]],[11,"clone",E,E,6,[[["self"]],["concat"]]],[11,"clone",E,E,7,[[["self"]],[R[418]]]],[11,"clone",E,E,25,[[["self"]],[R[461]]]],[11,"clone",E,E,26,[[["self"]],[R[478]]]],[11,"clone",E,E,27,[[["self"]],[R[479]]]],[11,"clone",E,E,28,[[["self"]],["class"]]],[11,"clone",E,E,8,[[["self"]],[R[462]]]],[11,"clone",E,E,29,[[["self"]],[R[480]]]],[11,"clone",E,E,9,[[["self"]],[R[463]]]],[11,"clone",E,E,30,[[["self"]],[R[383]]]],[11,"clone",E,E,10,[[["self"]],[R[423]]]],[11,"clone",E,E,31,[[["self"]],[R[464]]]],[11,"clone",E,E,32,[[["self"]],[R[481]]]],[11,"clone",E,E,11,[[["self"]],[R[465]]]],[11,"clone",E,E,33,[[["self"]],[R[466]]]],[11,"clone",E,E,34,[[["self"]],[R[381]]]],[11,"clone",E,E,12,[[["self"]],[R[467]]]],[11,"clone",E,E,13,[[["self"]],[R[468]]]],[11,"clone",E,E,14,[[["self"]],[R[382]]]],[11,"clone",E,E,35,[[["self"]],[R[482]]]],[11,"clone",E,E,15,[[["self"]],[R[469]]]],[11,"clone",E,E,36,[[["self"]],[R[483]]]],[11,"clone",E,E,16,[[["self"]],[R[419]]]],[11,"clone",E,E,17,[[["self"]],[R[470]]]],[11,"clone",E,E,37,[[["self"]],[R[471]]]],[11,"clone",E,E,38,[[["self"]],[R[472]]]],[11,"clone",E,E,18,[[["self"]],["group"]]],[11,"clone",E,E,39,[[["self"]],[R[473]]]],[11,"clone",E,E,19,[[["self"]],[R[474]]]],[11,"clone",E,E,20,[[["self"]],[R[484]]]],[11,"clone",E,E,21,[[["self"]],["flags"]]],[11,"clone",E,E,22,[[["self"]],[R[475]]]],[11,"clone",E,E,40,[[["self"]],[R[476]]]],[11,"clone",E,E,41,[[["self"]],["flag"]]],[11,"clone",R[360],E,0,[[["self"]],["error"]]],[11,"clone",R[457],E,58,[[["self"]],[R[403]]]],[11,"clone",E,E,59,[[["self"]],[R[418]]]],[11,"clone",R[459],E,61,[[["self"]],[R[407]]]],[11,"clone",E,E,62,[[["self"]],[R[408]]]],[11,"clone",R[394],E,64,[[["self"]],["error"]]],[11,"clone",E,E,49,[[["self"]],[R[415]]]],[11,"clone",E,E,65,[[["self"]],["hir"]]],[11,"clone",E,E,50,[[["self"]],["hirkind"]]],[11,"clone",E,E,51,[[["self"]],[R[418]]]],[11,"clone",E,E,52,[[["self"]],["class"]]],[11,"clone",E,E,66,[[["self"]],[R[423]]]],[11,"clone",E,E,67,[[["self"]],[R[425]]]],[11,"clone",E,E,68,[[["self"]],[R[427]]]],[11,"clone",E,E,69,[[["self"]],[R[436]]]],[11,"clone",E,E,53,[[["self"]],["anchor"]]],[11,"clone",E,E,54,[[["self"]],[R[477]]]],[11,"clone",E,E,47,[[["self"]],["group"]]],[11,"clone",E,E,55,[[["self"]],[R[473]]]],[11,"clone",E,E,48,[[["self"]],[R[419]]]],[11,"clone",E,E,56,[[["self"]],[R[471]]]],[11,"clone",E,E,57,[[["self"]],[R[472]]]],[11,"clone",R[360],E,70,[[["self"]],[R[379]]]],[11,"clone",E,E,71,[[["self"]],["parser"]]],[11,"cmp",R[362],E,1,[[["self"],["span"]],[R[23]]]],[11,"cmp",E,E,2,[[[R[257]],["self"]],[R[23]]]],[11,"cmp",R[457],E,59,[[["self"],[R[418]]],[R[23]]]],[11,"cmp",R[394],E,67,[[[R[425]],["self"]],[R[23]]]],[11,"cmp",E,E,69,[[[R[436]],["self"]],[R[23]]]],[11,"from",R[360],E,0,[[["error"]],["error"]]],[11,"from",E,E,0,[[["error"]],["error"]]],[11,"drop",R[362],E,24,[[["self"]]]],[11,"drop",E,E,33,[[["self"]]]],[11,"drop",R[394],E,65,[[["self"]]]],[11,R[62],R[362],E,1,[[["self"],["span"]],[[R[24],[R[23]]],[R[23]]]]],[11,R[62],E,E,2,[[[R[257]],["self"]],[[R[24],[R[23]]],[R[23]]]]],[11,R[62],R[457],E,59,[[["self"],[R[418]]],[[R[23]],[R[24],[R[23]]]]]],[11,R[62],R[394],E,67,[[[R[425]],["self"]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,67,[[[R[425]],["self"]],["bool"]]],[11,"le",E,E,67,[[[R[425]],["self"]],["bool"]]],[11,"gt",E,E,67,[[[R[425]],["self"]],["bool"]]],[11,"ge",E,E,67,[[[R[425]],["self"]],["bool"]]],[11,R[62],E,E,69,[[[R[436]],["self"]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,69,[[[R[436]],["self"]],["bool"]]],[11,"le",E,E,69,[[[R[436]],["self"]],["bool"]]],[11,"gt",E,E,69,[[[R[436]],["self"]],["bool"]]],[11,"ge",E,E,69,[[[R[436]],["self"]],["bool"]]],[11,"next",E,E,72,[[["self"]],[[R[425]],[R[24],[R[425]]]]]],[11,"next",E,E,73,[[["self"]],[[R[436]],[R[24],[R[436]]]]]],[11,"as_ref",R[457],E,59,[[["self"]]]],[11,R[222],R[455],E,42,[[],[R[379]]]],[11,R[222],R[459],E,61,[[],[R[407]]]],[11,R[222],R[394],E,67,[[],[R[425]]]],[11,R[222],E,E,69,[[],[R[436]]]],[11,R[222],R[360],E,70,[[],[R[379]]]],[11,R[16],R[457],E,59,[[["self"]],["vec"]]],[11,"fmt",R[455],E,42,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,43,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[456],E,44,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[362],E,46,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,23,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,1,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,2,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,3,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,4,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,24,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,5,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,6,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,7,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,25,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,26,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,27,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,28,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,8,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,29,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,9,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,30,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,10,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,31,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,32,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,11,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,33,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,34,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,12,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,13,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,14,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,35,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,15,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,36,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,16,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,17,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,37,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,38,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,18,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,39,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,19,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,20,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,21,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,22,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,40,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,41,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[360],E,0,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[457],E,58,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,59,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[458],E,60,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[459],E,61,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,62,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[394],E,64,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,49,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,65,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,50,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,51,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,52,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,66,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,72,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,67,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,68,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,73,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,69,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,53,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,54,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,47,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,55,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,48,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,56,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,57,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[360],E,70,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,71,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[362],E,46,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,23,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,24,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[360],E,0,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",R[394],E,64,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,49,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,65,[[[R[12]],["self"]],[R[2]]]],[11,"deref",R[457],E,59,[[["self"]],["vec"]]],[11,R[485],R[362],E,46,[[["self"]],["str"]]],[11,R[485],R[360],E,0,[[["self"]],["str"]]],[11,R[485],R[394],E,64,[[["self"]],["str"]]],[11,"start",R[362],R[486],45,[[["self"]]]],[11,R[411],E,R[487],45,[[["self"],["ast"]],[R[2]]]],[11,R[412],E,R[488],45,[[["self"],["ast"]],[R[2]]]],[11,R[413],E,R[489],45,[[["self"]],[R[2]]]],[11,R[490],E,R[491],45,[[["self"],[R[381]]],[R[2]]]],[11,R[492],E,R[493],45,[[["self"],[R[381]]],[R[2]]]],[11,R[494],E,R[495],45,[[["self"],[R[382]]],[R[2]]]],[11,R[496],E,R[497],45,[[["self"],[R[382]]],[R[2]]]],[11,R[498],E,R[499],45,[[["self"],[R[382]]],[R[2]]]],[11,"start",R[394],R[500],63,[[["self"]]]],[11,R[411],E,R[501],63,[[["hir"],["self"]],[R[2]]]],[11,R[412],E,R[502],63,[[["hir"],["self"]],[R[2]]]],[11,R[413],E,R[503],63,[[["self"]],[R[2]]]]],"p":[[4,"Error"],[3,"Span"],[3,R[531]],[3,R[504]],[3,"Comment"],[3,R[369]],[3,"Concat"],[3,R[402]],[3,R[505]],[3,R[506]],[3,R[384]],[3,R[507]],[3,R[508]],[3,R[509]],[3,R[510]],[3,R[365]],[3,R[367]],[3,R[511]],[3,"Group"],[3,R[376]],[3,"SetFlags"],[3,"Flags"],[3,R[512]],[4,R[385]],[4,"Ast"],[4,R[513]],[4,R[514]],[4,R[515]],[4,"Class"],[4,R[516]],[4,R[517]],[4,R[518]],[4,R[519]],[4,"ClassSet"],[4,R[520]],[4,R[521]],[4,R[522]],[4,R[395]],[4,R[400]],[4,R[391]],[4,R[523]],[4,"Flag"],[3,R[377]],[3,"Parser"],[3,"Printer"],[8,"Visitor"],[3,"Error"],[3,"Group"],[3,R[367]],[4,R[385]],[4,"HirKind"],[4,R[402]],[4,"Class"],[4,"Anchor"],[4,R[386]],[4,R[391]],[4,R[395]],[4,R[400]],[3,"Literals"],[3,R[402]],[3,"Printer"],[3,R[524]],[3,R[525]],[8,"Visitor"],[3,"Error"],[3,"Hir"],[3,R[384]],[3,R[526]],[3,R[527]],[3,R[528]],[3,R[377]],[3,"Parser"],[3,R[529]],[3,R[530]]]};
searchIndex[R[4]]={"doc":R[166],"i":[[5,R[167],R[4],R[168],N,[[[T]]]],[8,R[169],E,R[170],N,N],[14,"__lazy_static_create",E,E,N,N],[14,R[4],E,E,N,N]],"p":[]};
searchIndex[R[4]]={"doc":R[166],"i":[[5,R[167],R[4],R[168],N,[[[T]]]],[8,R[169],E,R[170],N,N],[14,R[4],E,E,N,N]],"p":[]};
searchIndex[R[50]]={"doc":"Color quantization library This library provides a color…","i":[[3,R[52],R[50],"Neural network based color quantizer.",N,N],[11,"new",E,R[1638],0,[[["i32"],["usize"]],["self"]]],[11,"init",E,R[1639],0,[[["self"]]]],[11,"map_pixel",E,"Maps the rgba-pixel in-place to the best-matching color in…",0,[[["self"]]]],[11,"index_of",E,"Finds the best-matching index in the color map.",0,[[["self"]],["usize"]]],[11,"color_map_rgba",E,R[51],0,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"color_map_rgb",E,R[51],0,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]]],"p":[[3,R[52]]]};
searchIndex[R[53]]={"doc":"A typesafe bitmask flag generator useful for sets of…","i":[[14,R[53],R[53],"The macro used to generate the flag structure.",N,N]],"p":[]};
searchIndex[R[53]]={"doc":"A typesafe bitmask flag generator.","i":[[14,R[53],R[53],"The `bitflags!` macro generates a `struct` that holds a…",N,N]],"p":[]};
searchIndex[R[54]]={"doc":"Determine displayed width of `char` and `str` types…","i":[[17,"UNICODE_VERSION",R[54],"The version of Unicode that this version of unicode-width…",N,N],[8,R[58],E,"Methods for determining displayed width of Unicode…",N,N],[10,"width",E,R[55],0,[[],[["usize"],[R[24],["usize"]]]]],[10,R[56],E,R[55],0,[[],[["usize"],[R[24],["usize"]]]]],[8,R[59],E,"Methods for determining displayed width of Unicode strings.",N,N],[10,"width",E,R[57],1,[[["self"]],["usize"]]],[10,R[56],E,R[57],1,[[["self"]],["usize"]]]],"p":[[8,R[58]],[8,R[59]]]};
searchIndex[R[5]]={"doc":"A crate used for calculating offsets of struct members and…","i":[[14,"offset_of",R[5],"Calculates the offset of the specified field from the…",N,N],[14,"span_of",E,"Produces a range instance representing the sub-slice…",N,N]],"p":[]};
searchIndex[R[63]]={"doc":"The `ucd-util` crate contains a smattering of utility…","i":[[5,"hangul_name",R[63],"Return the character name of the given precomposed Hangul…",N,[[["u32"]],[[R[34]],[R[24],[R[34]]]]]],[5,"hangul_full_canonical_decomposition",E,"Return the full canonical decomposition of the given…",N,[[["u32"]],[R[24]]]],[5,"ideograph_name",E,"Return the character name of the given ideograph codepoint.",N,[[["u32"]],[[R[34]],[R[24],[R[34]]]]]],[5,"character_name_normalize",E,"Normalize the given character name in place according to…",N,[[[R[34]]]]],[5,"symbolic_name_normalize",E,"Normalize the given symbolic name in place according to…",N,[[[R[34]]]]],[5,"canonical_property_name",E,"Find the canonical property name for the given normalized…",N,[[["str"],["propertytable"]],[[R[24],["str"]],["str"]]]],[5,"property_values",E,"Find the set of possible property values for a given…",N,[[["str"],["propertyvaluetable"]],[[R[64]],[R[24],[R[64]]]]]],[5,"canonical_property_value",E,"Find the canonical property value for the given normalized…",N,[[[R[64]],["str"]],[[R[24],["str"]],["str"]]]],[6,"PropertyTable",E,"The type of a property name table.",N,N],[6,"PropertyValueTable",E,"Type of a property value table.",N,N],[6,"PropertyValues",E,"A mapping of property values for a specific property.",N,N],[17,"RANGE_HANGUL_SYLLABLE",E,"A set of ranges that corresponds to the set of all Hangul…",N,N],[17,"RANGE_IDEOGRAPH",E,"A set of ranges that corresponds to the set of all…",N,N]],"p":[]};
searchIndex[R[654]]={"doc":"arrayvec provides the types `ArrayVec` and `ArrayString`:…","i":[[3,R[661],R[654],"A string with a fixed capacity.",N,N],[3,R[662],E,"Error value indicating insufficient capacity",N,N],[3,"ArrayVec",E,"A vector with a fixed capacity.",N,N],[3,R[184],E,"By-value iterator for `ArrayVec`.",N,N],[3,"Drain",E,"A draining iterator for `ArrayVec`.",N,N],[11,"new",E,"Create a new empty `ArrayString`.",0,[[],[R[659]]]],[11,"from",E,"Create a new `ArrayString` from a `str`.",0,[[["str"]],[[R[2],[R[650]]],[R[650],["str"]]]]],[11,"from_byte_string",E,"Create a new `ArrayString` from a byte string literal.",0,[[["a"]],[[R[651]],[R[2],[R[651]]]]]],[11,R[664],E,"Return the capacity of the `ArrayString`.",0,[[["self"]],["usize"]]],[11,"is_full",E,"Return if the `ArrayString` is completely filled.",0,[[["self"]],["bool"]]],[11,"push",E,R[652],0,[[["char"],["self"]]]],[11,"try_push",E,R[652],0,[[["char"],["self"]],[[R[2],[R[650]]],[R[650],["char"]]]]],[11,"push_str",E,R[653],0,[[["str"],["self"]]]],[11,"try_push_str",E,R[653],0,[[["str"],["self"]],[[R[650],["str"]],[R[2],[R[650]]]]]],[11,"pop",E,"Removes the last character from the string and returns it.",0,[[["self"]],[["char"],[R[24],["char"]]]]],[11,R[663],E,"Shortens this `ArrayString` to the specified length.",0,[[["self"],["usize"]]]],[11,"remove",E,"Removes a `char` from this `ArrayString` at a byte…",0,[[["self"],["usize"]],["char"]]],[11,"clear",E,"Make the string empty.",0,[[["self"]]]],[11,"set_len",E,"Set the strings’s length.",0,[[["self"],["usize"]]]],[11,"as_str",E,"Return a string slice of the whole `ArrayString`.",0,[[["self"]],["str"]]],[11,"new",E,"Create a new `CapacityError` from `element`.",1,[[[T]],[R[650]]]],[11,"element",E,"Extract the overflowing element",1,[[],[T]]],[11,"simplify",E,"Convert into a `CapacityError` that does not carry an…",1,[[],[R[650]]]],[8,"Array",E,R[665],N,N],[16,"Item",E,"The array’s element type",2,N],[8,R[353],E,"`RangeArgument` is implemented by Rust's built-in range…",N,N],[11,"start",E,R[108],3,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,"end",E,R[109],3,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,"new",E,"Create a new empty `ArrayVec`.",4,[[],[R[654]]]],[11,"len",E,"Return the number of elements in the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,R[664],E,"Return the capacity of the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,"is_full",E,"Return if the `ArrayVec` is completely filled.",4,[[["self"]],["bool"]]],[11,"push",E,R[655],4,[[["self"]]]],[11,"try_push",E,R[655],4,[[["self"]],[[R[2],[R[650]]],[R[650]]]]],[11,"push_unchecked",E,"Push `element` to the end of the vector without checking…",4,[[["self"]]]],[11,"insert",E,R[656],4,[[["self"],["usize"]]]],[11,"try_insert",E,R[656],4,[[["self"],["usize"]],[[R[2],[R[650]]],[R[650]]]]],[11,"pop",E,"Remove the last element in the vector and return it.",4,[[["self"]],[R[24]]]],[11,"swap_remove",E,R[657],4,[[["self"],["usize"]]]],[11,"swap_pop",E,R[657],4,[[["self"],["usize"]],[R[24]]]],[11,"remove",E,R[658],4,[[["self"],["usize"]]]],[11,"pop_at",E,R[658],4,[[["self"],["usize"]],[R[24]]]],[11,R[663],E,"Shortens the vector, keeping the first `len` elements and…",4,[[["self"],["usize"]]]],[11,"clear",E,"Remove all elements in the vector.",4,[[["self"]]]],[11,"retain",E,R[130],4,[[["self"],["f"]]]],[11,"set_len",E,"Set the vector’s length without dropping or moving out…",4,[[["self"],["usize"]]]],[11,"drain",E,R[666],4,[[["self"],["rangeargument"]],["drain"]]],[11,R[25],E,"Return the inner fixed size array, if it is full to its…",4,[[],[R[2]]]],[11,"dispose",E,"Dispose of `self` without the overwriting that is needed…",4,[[]]],[11,"as_slice",E,"Return a slice containing all elements of the vector.",4,[[["self"]]]],[11,"as_mut_slice",E,"Return a mutable slice containing all elements of the…",4,[[["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[66],E,E,0,[[["self"]],[T]]],[11,R[67],E,E,0,[[[T],["self"]]]],[11,R[161],E,E,0,[[["self"]],[R[34]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[66],E,E,1,[[["self"]],[T]]],[11,R[67],E,E,1,[[[T],["self"]]]],[11,R[161],E,E,1,[[["self"]],[R[34]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[22],E,E,4,[[],["i"]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,"into",E,E,4,[[],[U]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[30]]]],[11,R[66],E,E,4,[[["self"]],[T]]],[11,R[67],E,E,4,[[[T],["self"]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[22],E,E,5,[[],["i"]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,"into",E,E,5,[[],[U]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[30]]]],[11,R[66],E,E,5,[[["self"]],[T]]],[11,R[67],E,E,5,[[[T],["self"]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[22],E,E,6,[[],["i"]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,"into",E,E,6,[[],[U]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[30]]]],[11,R[16],E,E,0,[[["self"]],["str"]]],[11,R[16],E,E,4,[[["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[12]]],[R[2]]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"eq",E,E,0,[[["str"],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[650]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[650]]],["bool"]]],[11,"eq",E,E,4,[[["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"]],["bool"]]],[11,"cmp",E,E,0,[[["self"]],[R[23]]]],[11,"cmp",E,E,1,[[["self"],[R[650]]],[R[23]]]],[11,"cmp",E,E,4,[[[R[654]],["self"]],[R[23]]]],[11,R[62],E,E,0,[[["self"]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,0,[[["self"]],["bool"]]],[11,"le",E,E,0,[[["self"]],["bool"]]],[11,"gt",E,E,0,[[["self"]],["bool"]]],[11,"ge",E,E,0,[[["self"]],["bool"]]],[11,R[62],E,E,0,[[["str"],["self"]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,0,[[["str"],["self"]],["bool"]]],[11,"le",E,E,0,[[["str"],["self"]],["bool"]]],[11,"gt",E,E,0,[[["str"],["self"]],["bool"]]],[11,"ge",E,E,0,[[["str"],["self"]],["bool"]]],[11,R[62],E,E,1,[[["self"],[R[650]]],[[R[24],[R[23]]],[R[23]]]]],[11,"lt",E,E,1,[[["self"],[R[650]]],["bool"]]],[11,"le",E,E,1,[[["self"],[R[650]]],["bool"]]],[11,"gt",E,E,1,[[["self"],[R[650]]],["bool"]]],[11,"ge",E,E,1,[[["self"],[R[650]]],["bool"]]],[11,R[62],E,E,4,[[[R[654]],["self"]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,4,[[["self"]],["bool"]]],[11,"le",E,E,4,[[["self"]],["bool"]]],[11,"ge",E,E,4,[[["self"]],["bool"]]],[11,"gt",E,E,4,[[["self"]],["bool"]]],[11,"from",E,E,4,[[["a"]],["self"]]],[11,"hash",E,E,0,[[["h"],["self"]]]],[11,"hash",E,E,4,[[["h"],["self"]]]],[11,"deref",E,E,0,[[["self"]],["str"]]],[11,"deref",E,E,4,[[["self"]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,"extend",E,E,4,[[["self"],[R[131]]]]],[11,"next",E,E,5,[[["self"]],[R[24]]]],[11,R[104],E,E,5,[[["self"]]]],[11,"next",E,E,6,[[["self"]],[R[24]]]],[11,R[104],E,E,6,[[["self"]]]],[11,R[357],E,E,4,[[[R[131]]],["self"]]],[11,R[101],E,E,5,[[["self"]],[R[24]]]],[11,R[101],E,E,6,[[["self"]],[R[24]]]],[11,R[22],E,E,4,[[],[R[358]]]],[11,"write_char",E,E,0,[[["char"],["self"]],[R[2]]]],[11,"write_str",E,E,0,[[["str"],["self"]],[R[2]]]],[11,"clone",E,E,0,[[["self"]],[R[659]]]],[11,R[660],E,E,0,[[["self"],["self"]]]],[11,"clone",E,E,1,[[["self"]],[R[650]]]],[11,"clone",E,E,5,[[["self"]],[R[358]]]],[11,"clone",E,E,4,[[["self"]],["self"]]],[11,R[660],E,E,4,[[["self"],["self"]]]],[11,R[222],E,"Return an empty `ArrayString`",0,[[],[R[659]]]],[11,R[222],E,"Return an empty array",4,[[],[R[654]]]],[11,"as_mut",E,E,4,[[["self"]]]],[11,"as_ref",E,E,0,[[["self"]],["str"]]],[11,"as_ref",E,E,4,[[["self"]]]],[11,R[29],E,E,0,[[["self"]],["str"]]],[11,R[29],E,E,4,[[["self"]]]],[11,R[10],E,E,4,[[["self"]]]],[11,"start",E,R[108],3,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,"end",E,R[109],3,[[["self"]],[["usize"],[R[24],["usize"]]]]]],"p":[[3,R[661]],[3,R[662]],[8,"Array"],[8,R[353]],[3,"ArrayVec"],[3,R[184]],[3,"Drain"]]};
searchIndex[R[65]]={"doc":"Crate `utf8-ranges` converts ranges of Unicode scalar…","i":[[3,R[70],R[65],"A single inclusive range of UTF-8 bytes.",N,N],[12,"start",E,"Start of byte range (inclusive).",0,N],[12,"end",E,"End of byte range (inclusive).",0,N],[3,R[72],E,"An iterator over ranges of matching UTF-8 byte sequences.",N,N],[4,R[71],E,"Utf8Sequence represents a sequence of byte ranges.",N,N],[13,"One",E,"One byte range.",1,N],[13,"Two",E,"Two successive byte ranges.",1,N],[13,"Three",E,"Three successive byte ranges.",1,N],[13,"Four",E,"Four successive byte ranges.",1,N],[11,"as_slice",E,"Returns the underlying sequence of byte ranges as a slice.",1,[[["self"]]]],[11,"len",E,"Returns the number of byte ranges in this sequence.",1,[[["self"]],["usize"]]],[11,"matches",E,"Returns true if and only if a prefix of `bytes` matches…",1,[[["self"]],["bool"]]],[11,"matches",E,"Returns true if and only if the given byte is in this range.",0,[[["u8"],["self"]],["bool"]]],[11,"new",E,"Create a new iterator over UTF-8 byte ranges for the…",2,[[["char"]],["self"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[66],E,E,0,[[["self"]],[T]]],[11,R[67],E,E,0,[[[T],["self"]]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[22],E,E,2,[[],["i"]]],[11,"into",E,E,2,[[],[U]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[66],E,E,1,[[["self"]],[T]]],[11,R[67],E,E,1,[[[T],["self"]]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"eq",E,E,1,[[["self"],[R[68]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[68]]],["bool"]]],[11,"eq",E,E,0,[[[R[69]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[69]],["self"]],["bool"]]],[11,"clone",E,E,1,[[["self"]],[R[68]]]],[11,"clone",E,E,0,[[["self"]],[R[69]]]],[11,"next",E,E,2,[[["self"]],[R[24]]]],[11,"fmt",E,E,1,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[R[2]]]]],"p":[[3,R[70]],[4,R[71]],[3,R[72]]]};
searchIndex[R[667]]={"doc":"This crate provides convenience methods for encoding and…","i":[[4,R[785],R[667],"Defines big-endian serialization.",N,N],[4,R[786],E,"Defines little-endian serialization.",N,N],[6,"BE",E,"A type alias for [`BigEndian`].",N,N],[6,"LE",E,"A type alias for [`LittleEndian`].",N,N],[6,"NetworkEndian",E,"Defines network byte order serialization.",N,N],[6,"NativeEndian",E,"Defines system native-endian serialization.",N,N],[8,R[782],E,"Extends [`Read`] with methods for reading numbers. (For…",N,N],[11,"read_u8",E,R[732],0,[[["self"]],[["u8"],[R[2],["u8"]]]]],[11,"read_i8",E,R[733],0,[[["self"]],[[R[2],["i8"]],["i8"]]]],[11,R[717],E,R[734],0,[[["self"]],[[R[2],["u16"]],["u16"]]]],[11,R[735],E,R[736],0,[[["self"]],[[R[2],["i16"]],["i16"]]]],[11,R[737],E,R[738],0,[[["self"]],[["u32"],[R[2],["u32"]]]]],[11,R[739],E,R[740],0,[[["self"]],[["i32"],[R[2],["i32"]]]]],[11,R[718],E,R[741],0,[[["self"]],[["u32"],[R[2],["u32"]]]]],[11,R[742],E,R[743],0,[[["self"]],[["i32"],[R[2],["i32"]]]]],[11,R[744],E,R[745],0,[[["self"]],[[R[2],["u64"]],["u64"]]]],[11,R[746],E,R[747],0,[[["self"]],[[R[2],["i64"]],["i64"]]]],[11,R[719],E,R[748],0,[[["self"]],[[R[2],["u64"]],["u64"]]]],[11,R[749],E,R[750],0,[[["self"]],[[R[2],["i64"]],["i64"]]]],[11,R[673],E,R[751],0,[[["self"]],[[R[2],["u128"]],["u128"]]]],[11,R[686],E,R[752],0,[[["self"]],[["i128"],[R[2],["i128"]]]]],[11,R[674],E,R[668],0,[[["self"],["usize"]],[[R[2],["u64"]],["u64"]]]],[11,R[753],E,R[669],0,[[["self"],["usize"]],[[R[2],["i64"]],["i64"]]]],[11,R[675],E,R[668],0,[[["self"],["usize"]],[[R[2],["u128"]],["u128"]]]],[11,R[687],E,R[669],0,[[["self"],["usize"]],[["i128"],[R[2],["i128"]]]]],[11,R[754],E,R[689],0,[[["self"]],[[R[2],["f32"]],["f32"]]]],[11,R[755],E,R[690],0,[[["self"]],[[R[2],["f64"]],["f64"]]]],[11,R[704],E,R[756],0,[[["self"]],[R[2]]]],[11,R[705],E,R[757],0,[[["self"]],[R[2]]]],[11,R[706],E,R[758],0,[[["self"]],[R[2]]]],[11,R[707],E,R[759],0,[[["self"]],[R[2]]]],[11,R[760],E,R[761],0,[[["self"]],[R[2]]]],[11,R[708],E,R[762],0,[[["self"]],[R[2]]]],[11,R[709],E,R[763],0,[[["self"]],[R[2]]]],[11,R[710],E,R[764],0,[[["self"]],[R[2]]]],[11,R[711],E,R[765],0,[[["self"]],[R[2]]]],[11,R[712],E,R[766],0,[[["self"]],[R[2]]]],[11,R[713],E,R[670],0,[[["self"]],[R[2]]]],[11,R[714],E,R[767],0,[[["self"]],[R[2]]]],[11,R[716],E,R[670],0,[[["self"]],[R[2]]]],[8,R[783],E,"Extends [`Write`] with methods for writing numbers. (For…",N,N],[11,"write_u8",E,R[768],1,[[["self"],["u8"]],[R[2]]]],[11,"write_i8",E,R[769],1,[[["self"],["i8"]],[R[2]]]],[11,R[677],E,R[770],1,[[["self"],["u16"]],[R[2]]]],[11,R[691],E,R[771],1,[[["self"],["i16"]],[R[2]]]],[11,R[678],E,R[772],1,[[["u32"],["self"]],[R[2]]]],[11,R[692],E,R[773],1,[[["i32"],["self"]],[R[2]]]],[11,R[679],E,R[774],1,[[["u32"],["self"]],[R[2]]]],[11,R[693],E,R[775],1,[[["i32"],["self"]],[R[2]]]],[11,R[680],E,R[776],1,[[["self"],["u64"]],[R[2]]]],[11,R[694],E,R[777],1,[[["self"],["i64"]],[R[2]]]],[11,R[681],E,R[778],1,[[["self"],["u64"]],[R[2]]]],[11,R[695],E,R[779],1,[[["self"],["i64"]],[R[2]]]],[11,R[682],E,R[780],1,[[["self"],["u128"]],[R[2]]]],[11,R[696],E,R[781],1,[[["i128"],["self"]],[R[2]]]],[11,R[683],E,R[671],1,[[["self"],["u64"],["usize"]],[R[2]]]],[11,R[697],E,R[672],1,[[["self"],["i64"],["usize"]],[R[2]]]],[11,R[684],E,R[671],1,[[["self"],["u128"],["usize"]],[R[2]]]],[11,R[698],E,R[672],1,[[["i128"],["self"],["usize"]],[R[2]]]],[11,R[700],E,R[701],1,[[["self"],["f32"]],[R[2]]]],[11,R[702],E,R[703],1,[[["self"],["f64"]],[R[2]]]],[8,R[784],E,"`ByteOrder` describes types that can serialize integers as…",N,N],[10,R[717],E,"Reads an unsigned 16 bit integer from `buf`.",2,[[],["u16"]]],[11,R[737],E,"Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,[[],["u32"]]],[10,R[718],E,"Reads an unsigned 32 bit integer from `buf`.",2,[[],["u32"]]],[11,R[744],E,"Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,[[],["u64"]]],[10,R[719],E,"Reads an unsigned 64 bit integer from `buf`.",2,[[],["u64"]]],[10,R[673],E,"Reads an unsigned 128 bit integer from `buf`.",2,[[],["u128"]]],[10,R[674],E,R[676],2,[[["usize"]],["u64"]]],[10,R[675],E,R[676],2,[[["usize"]],["u128"]]],[10,R[677],E,"Writes an unsigned 16 bit integer `n` to `buf`.",2,[[["u16"]]]],[11,R[678],E,"Writes an unsigned 24 bit integer `n` to `buf`, stored in…",2,[[["u32"]]]],[10,R[679],E,"Writes an unsigned 32 bit integer `n` to `buf`.",2,[[["u32"]]]],[11,R[680],E,"Writes an unsigned 48 bit integer `n` to `buf`, stored in…",2,[[["u64"]]]],[10,R[681],E,"Writes an unsigned 64 bit integer `n` to `buf`.",2,[[["u64"]]]],[10,R[682],E,"Writes an unsigned 128 bit integer `n` to `buf`.",2,[[["u128"]]]],[10,R[683],E,R[685],2,[[["u64"],["usize"]]]],[10,R[684],E,R[685],2,[[["u128"],["usize"]]]],[11,R[735],E,"Reads a signed 16 bit integer from `buf`.",2,[[],["i16"]]],[11,R[739],E,"Reads a signed 24 bit integer from `buf`, stored in i32.",2,[[],["i32"]]],[11,R[742],E,"Reads a signed 32 bit integer from `buf`.",2,[[],["i32"]]],[11,R[746],E,"Reads a signed 48 bit integer from `buf`, stored in i64.",2,[[],["i64"]]],[11,R[749],E,"Reads a signed 64 bit integer from `buf`.",2,[[],["i64"]]],[11,R[686],E,"Reads a signed 128 bit integer from `buf`.",2,[[],["i128"]]],[11,R[753],E,R[688],2,[[["usize"]],["i64"]]],[11,R[687],E,R[688],2,[[["usize"]],["i128"]]],[11,R[754],E,R[689],2,[[],["f32"]]],[11,R[755],E,R[690],2,[[],["f64"]]],[11,R[691],E,"Writes a signed 16 bit integer `n` to `buf`.",2,[[["i16"]]]],[11,R[692],E,"Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,[[["i32"]]]],[11,R[693],E,"Writes a signed 32 bit integer `n` to `buf`.",2,[[["i32"]]]],[11,R[694],E,"Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,[[["i64"]]]],[11,R[695],E,"Writes a signed 64 bit integer `n` to `buf`.",2,[[["i64"]]]],[11,R[696],E,"Writes a signed 128 bit integer `n` to `buf`.",2,[[["i128"]]]],[11,R[697],E,R[699],2,[[["i64"],["usize"]]]],[11,R[698],E,R[699],2,[[["i128"],["usize"]]]],[11,R[700],E,R[701],2,[[["f32"]]]],[11,R[702],E,R[703],2,[[["f64"]]]],[10,R[704],E,"Reads unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,R[705],E,"Reads unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,R[706],E,"Reads unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,R[707],E,"Reads unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,R[708],E,"Reads signed 16 bit integers from `src` to `dst`.",2,[[]]],[11,R[709],E,"Reads signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,R[710],E,"Reads signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,R[711],E,"Reads signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,R[712],E,R[715],2,[[]]],[11,R[713],E,R[670],2,[[]]],[11,R[714],E,R[715],2,[[]]],[11,R[716],E,R[670],2,[[]]],[10,R[720],E,"Writes unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,R[721],E,"Writes unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,R[722],E,"Writes unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,R[723],E,"Writes unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i16_into",E,"Writes signed 16 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i32_into",E,"Writes signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i64_into",E,"Writes signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i128_into",E,"Writes signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_f32_into",E,"Writes IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"write_f64_into",E,"Writes IEEE754 double-precision (8 bytes) floating point…",2,[[]]],[10,R[724],E,"Converts the given slice of unsigned 16 bit integers to a…",2,[[]]],[10,R[725],E,"Converts the given slice of unsigned 32 bit integers to a…",2,[[]]],[10,R[726],E,"Converts the given slice of unsigned 64 bit integers to a…",2,[[]]],[10,R[727],E,"Converts the given slice of unsigned 128 bit integers to a…",2,[[]]],[11,"from_slice_i16",E,"Converts the given slice of signed 16 bit integers to a…",2,[[]]],[11,"from_slice_i32",E,"Converts the given slice of signed 32 bit integers to a…",2,[[]]],[11,"from_slice_i64",E,"Converts the given slice of signed 64 bit integers to a…",2,[[]]],[11,"from_slice_i128",E,"Converts the given slice of signed 128 bit integers to a…",2,[[]]],[10,R[728],E,"Converts the given slice of IEEE754 single-precision (4…",2,[[]]],[10,R[729],E,"Converts the given slice of IEEE754 double-precision (8…",2,[[]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[66],E,E,3,[[["self"]],[T]]],[11,R[67],E,E,3,[[[T],["self"]]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[66],E,E,4,[[["self"]],[T]]],[11,R[67],E,E,4,[[[T],["self"]]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[30]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[717],E,E,3,[[],["u16"]]],[11,R[718],E,E,3,[[],["u32"]]],[11,R[719],E,E,3,[[],["u64"]]],[11,R[673],E,E,3,[[],["u128"]]],[11,R[674],E,E,3,[[["usize"]],["u64"]]],[11,R[675],E,E,3,[[["usize"]],["u128"]]],[11,R[677],E,E,3,[[["u16"]]]],[11,R[679],E,E,3,[[["u32"]]]],[11,R[681],E,E,3,[[["u64"]]]],[11,R[682],E,E,3,[[["u128"]]]],[11,R[683],E,E,3,[[["u64"],["usize"]]]],[11,R[684],E,E,3,[[["u128"],["usize"]]]],[11,R[704],E,E,3,[[]]],[11,R[705],E,E,3,[[]]],[11,R[706],E,E,3,[[]]],[11,R[707],E,E,3,[[]]],[11,R[720],E,E,3,[[]]],[11,R[721],E,E,3,[[]]],[11,R[722],E,E,3,[[]]],[11,R[723],E,E,3,[[]]],[11,R[724],E,E,3,[[]]],[11,R[725],E,E,3,[[]]],[11,R[726],E,E,3,[[]]],[11,R[727],E,E,3,[[]]],[11,R[728],E,E,3,[[]]],[11,R[729],E,E,3,[[]]],[11,R[717],E,E,4,[[],["u16"]]],[11,R[718],E,E,4,[[],["u32"]]],[11,R[719],E,E,4,[[],["u64"]]],[11,R[673],E,E,4,[[],["u128"]]],[11,R[674],E,E,4,[[["usize"]],["u64"]]],[11,R[675],E,E,4,[[["usize"]],["u128"]]],[11,R[677],E,E,4,[[["u16"]]]],[11,R[679],E,E,4,[[["u32"]]]],[11,R[681],E,E,4,[[["u64"]]]],[11,R[682],E,E,4,[[["u128"]]]],[11,R[683],E,E,4,[[["u64"],["usize"]]]],[11,R[684],E,E,4,[[["u128"],["usize"]]]],[11,R[704],E,E,4,[[]]],[11,R[705],E,E,4,[[]]],[11,R[706],E,E,4,[[]]],[11,R[707],E,E,4,[[]]],[11,R[720],E,E,4,[[]]],[11,R[721],E,E,4,[[]]],[11,R[722],E,E,4,[[]]],[11,R[723],E,E,4,[[]]],[11,R[724],E,E,4,[[]]],[11,R[725],E,E,4,[[]]],[11,R[726],E,E,4,[[]]],[11,R[727],E,E,4,[[]]],[11,R[728],E,E,4,[[]]],[11,R[729],E,E,4,[[]]],[11,"eq",E,E,3,[[["self"],[R[730]]],["bool"]]],[11,"eq",E,E,4,[[[R[731]],["self"]],["bool"]]],[11,"clone",E,E,3,[[["self"]],[R[730]]]],[11,"clone",E,E,4,[[["self"]],[R[731]]]],[11,"cmp",E,E,3,[[["self"],[R[730]]],[R[23]]]],[11,"cmp",E,E,4,[[[R[731]],["self"]],[R[23]]]],[11,R[62],E,E,3,[[["self"],[R[730]]],[[R[23]],[R[24],[R[23]]]]]],[11,R[62],E,E,4,[[[R[731]],["self"]],[[R[23]],[R[24],[R[23]]]]]],[11,R[222],E,E,3,[[],[R[730]]]],[11,R[222],E,E,4,[[],[R[731]]]],[11,"fmt",E,E,3,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,4,[[[R[12]],["self"]],[R[2]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"read_u8",E,R[732],0,[[["self"]],[["u8"],[R[2],["u8"]]]]],[11,"read_i8",E,R[733],0,[[["self"]],[[R[2],["i8"]],["i8"]]]],[11,R[717],E,R[734],0,[[["self"]],[[R[2],["u16"]],["u16"]]]],[11,R[735],E,R[736],0,[[["self"]],[[R[2],["i16"]],["i16"]]]],[11,R[737],E,R[738],0,[[["self"]],[["u32"],[R[2],["u32"]]]]],[11,R[739],E,R[740],0,[[["self"]],[["i32"],[R[2],["i32"]]]]],[11,R[718],E,R[741],0,[[["self"]],[["u32"],[R[2],["u32"]]]]],[11,R[742],E,R[743],0,[[["self"]],[["i32"],[R[2],["i32"]]]]],[11,R[744],E,R[745],0,[[["self"]],[[R[2],["u64"]],["u64"]]]],[11,R[746],E,R[747],0,[[["self"]],[[R[2],["i64"]],["i64"]]]],[11,R[719],E,R[748],0,[[["self"]],[[R[2],["u64"]],["u64"]]]],[11,R[749],E,R[750],0,[[["self"]],[[R[2],["i64"]],["i64"]]]],[11,R[673],E,R[751],0,[[["self"]],[[R[2],["u128"]],["u128"]]]],[11,R[686],E,R[752],0,[[["self"]],[["i128"],[R[2],["i128"]]]]],[11,R[674],E,R[668],0,[[["self"],["usize"]],[[R[2],["u64"]],["u64"]]]],[11,R[753],E,R[669],0,[[["self"],["usize"]],[[R[2],["i64"]],["i64"]]]],[11,R[675],E,R[668],0,[[["self"],["usize"]],[[R[2],["u128"]],["u128"]]]],[11,R[687],E,R[669],0,[[["self"],["usize"]],[["i128"],[R[2],["i128"]]]]],[11,R[754],E,R[689],0,[[["self"]],[[R[2],["f32"]],["f32"]]]],[11,R[755],E,R[690],0,[[["self"]],[[R[2],["f64"]],["f64"]]]],[11,R[704],E,R[756],0,[[["self"]],[R[2]]]],[11,R[705],E,R[757],0,[[["self"]],[R[2]]]],[11,R[706],E,R[758],0,[[["self"]],[R[2]]]],[11,R[707],E,R[759],0,[[["self"]],[R[2]]]],[11,R[760],E,R[761],0,[[["self"]],[R[2]]]],[11,R[708],E,R[762],0,[[["self"]],[R[2]]]],[11,R[709],E,R[763],0,[[["self"]],[R[2]]]],[11,R[710],E,R[764],0,[[["self"]],[R[2]]]],[11,R[711],E,R[765],0,[[["self"]],[R[2]]]],[11,R[712],E,R[766],0,[[["self"]],[R[2]]]],[11,R[713],E,R[670],0,[[["self"]],[R[2]]]],[11,R[714],E,R[767],0,[[["self"]],[R[2]]]],[11,R[716],E,R[670],0,[[["self"]],[R[2]]]],[11,"write_u8",E,R[768],1,[[["self"],["u8"]],[R[2]]]],[11,"write_i8",E,R[769],1,[[["self"],["i8"]],[R[2]]]],[11,R[677],E,R[770],1,[[["self"],["u16"]],[R[2]]]],[11,R[691],E,R[771],1,[[["self"],["i16"]],[R[2]]]],[11,R[678],E,R[772],1,[[["u32"],["self"]],[R[2]]]],[11,R[692],E,R[773],1,[[["i32"],["self"]],[R[2]]]],[11,R[679],E,R[774],1,[[["u32"],["self"]],[R[2]]]],[11,R[693],E,R[775],1,[[["i32"],["self"]],[R[2]]]],[11,R[680],E,R[776],1,[[["self"],["u64"]],[R[2]]]],[11,R[694],E,R[777],1,[[["self"],["i64"]],[R[2]]]],[11,R[681],E,R[778],1,[[["self"],["u64"]],[R[2]]]],[11,R[695],E,R[779],1,[[["self"],["i64"]],[R[2]]]],[11,R[682],E,R[780],1,[[["self"],["u128"]],[R[2]]]],[11,R[696],E,R[781],1,[[["i128"],["self"]],[R[2]]]],[11,R[683],E,R[671],1,[[["self"],["u64"],["usize"]],[R[2]]]],[11,R[697],E,R[672],1,[[["self"],["i64"],["usize"]],[R[2]]]],[11,R[684],E,R[671],1,[[["self"],["u128"],["usize"]],[R[2]]]],[11,R[698],E,R[672],1,[[["i128"],["self"],["usize"]],[R[2]]]],[11,R[700],E,R[701],1,[[["self"],["f32"]],[R[2]]]],[11,R[702],E,R[703],1,[[["self"],["f64"]],[R[2]]]]],"p":[[8,R[782]],[8,R[783]],[8,R[784]],[4,R[785]],[4,R[786]]]};
searchIndex[R[6]]={"doc":"A scope guard will run a given closure when it goes out of…","i":[[3,R[14],R[6],"`ScopeGuard` is a scope guard that may own a protected…",N,N],[4,"Always",E,"Always run on scope exit.",N,N],[5,"guard",E,"Create a new `ScopeGuard` owning `v` and with deferred…",N,[[["f"],[T]],[[R[7]],[R[6],[R[7]]]]]],[8,R[13],E,E,N,N],[10,R[11],E,"Return `true` if the guard’s associated code should run…",0,[[],["bool"]]],[11,"with_strategy",E,"Create a `ScopeGuard` that owns `v` (accessible through…",1,[[["f"],[T]],[R[6]]]],[14,"defer",E,"Macro to create a `ScopeGuard` (always run).",N,N],[14,"defer_on_unwind",E,"Macro to create a `ScopeGuard` (run on unwinding from…",N,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"into",E,E,2,[[],[U]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[11],E,E,2,[[],["bool"]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,"fmt",E,E,2,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[12]]],[R[2]]]],[11,"deref",E,E,1,[[["self"]],[T]]],[11,"drop",E,E,1,[[["self"]]]]],"p":[[8,R[13]],[3,R[14]],[4,"Always"]]};
searchIndex[R[790]]={"doc":"Concurrent queues.","i":[[3,R[796],R[790],"A bounded multi-producer multi-consumer queue.",N,N],[3,"SegQueue",E,"An unbounded multi-producer multi-consumer queue.",N,N],[3,"PopError",E,"Error which occurs when popping from an empty queue.",N,N],[3,R[795],E,"Error which occurs when pushing into a full queue.",N,N],[12,"0",E,E,0,N],[11,"new",E,"Creates a new bounded queue with the given capacity.",1,[[["usize"]],["arrayqueue"]]],[11,"push",E,"Attempts to push an element into the queue.",1,[[["self"],[T]],[[R[791]],[R[2],[R[791]]]]]],[11,"pop",E,"Attempts to pop an element from the queue.",1,[[["self"]],[[R[2],[R[792]]],[R[792]]]]],[11,R[664],E,"Returns the capacity of the queue.",1,[[["self"]],["usize"]]],[11,R[404],E,R[793],1,[[["self"]],["bool"]]],[11,"is_full",E,"Returns `true` if the queue is full.",1,[[["self"]],["bool"]]],[11,"len",E,R[794],1,[[["self"]],["usize"]]],[11,"new",E,"Creates a new unbounded queue.",2,[[],["segqueue"]]],[11,"push",E,"Pushes an element into the queue.",2,[[["self"],[T]]]],[11,"pop",E,"Pops an element from the queue.",2,[[["self"]],[[R[2],[R[792]]],[R[792]]]]],[11,R[404],E,R[793],2,[[["self"]],["bool"]]],[11,"len",E,R[794],2,[[["self"]],["usize"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[66],E,E,3,[[["self"]],[T]]],[11,R[67],E,E,3,[[[T],["self"]]]],[11,R[161],E,E,3,[[["self"]],[R[34]]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[66],E,E,0,[[["self"]],[T]]],[11,R[67],E,E,0,[[[T],["self"]]]],[11,R[161],E,E,0,[[["self"]],[R[34]]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"eq",E,E,3,[[[R[792]],["self"]],["bool"]]],[11,"eq",E,E,0,[[[R[791]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[791]],["self"]],["bool"]]],[11,"clone",E,E,3,[[["self"]],[R[792]]]],[11,"clone",E,E,0,[[["self"]],[R[791]]]],[11,"drop",E,E,1,[[["self"]]]],[11,"drop",E,E,2,[[["self"]]]],[11,R[222],E,E,2,[[],["segqueue"]]],[11,"fmt",E,E,1,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,3,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,2,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,3,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[R[2]]]],[11,R[485],E,E,3,[[["self"]],["str"]]],[11,R[485],E,E,0,[[["self"]],["str"]]]],"p":[[3,R[795]],[3,R[796]],[3,"SegQueue"],[3,"PopError"]]};
searchIndex[R[797]]={"doc":"This crate implements the [introsort] sorting algorithm.","i":[[5,"sort",R[797],"Sort using the default comparison function.",N,[[]]],[5,"sort_by",E,"Sort using a comparison function.",N,[[["c"]]]],[5,"sort_by_key",E,"Sort using a conversion function.",N,[[["fn"]]]],[5,"insertion_sort",E,"Perform an insertion sort using a comparison function.",N,[[["c"]]]],[5,"heapsort",E,"Perform a heapsort using a comparison function.",N,[[["c"]]]],[5,"sort_floats",E,"Sorts floating point number. The ordering used is | -inf |…",N,[[]]]],"p":[]};
searchIndex[R[865]]={"doc":R[1199],"i":[[3,R[937],R[865],E,N,N],[12,"kind",E,E,0,N],[4,R[938],E,E,N,N],[13,"Empty",E,E,1,N],[13,"Invalid",E,E,1,N],[5,"clamp",E,R[1200],N,[[[R[824]]],[R[824]]]],[0,"bounds",E,E,N,N],[8,"Bounded",R[1201],R[1115],N,N],[10,R[866],E,R[1116],2,[[],["self"]]],[10,R[867],E,R[1117],2,[[],["self"]]],[0,"cast",R[865],E,N,N],[5,"cast",R[1202],R[1178],N,[[["numcast"]],[[R[24]],["numcast"]]]],[8,R[939],E,R[1161],N,N],[11,"to_isize",E,R[1162],3,[[["self"]],[[R[24],["isize"]],["isize"]]]],[11,"to_i8",E,R[1163],3,[[["self"]],[[R[24],["i8"]],["i8"]]]],[11,"to_i16",E,R[1164],3,[[["self"]],[["i16"],[R[24],["i16"]]]]],[11,"to_i32",E,R[1165],3,[[["self"]],[["i32"],[R[24],["i32"]]]]],[10,"to_i64",E,R[1166],3,[[["self"]],[["i64"],[R[24],["i64"]]]]],[11,"to_i128",E,R[1167],3,[[["self"]],[["i128"],[R[24],["i128"]]]]],[11,"to_usize",E,R[1168],3,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,"to_u8",E,R[1169],3,[[["self"]],[[R[24],["u8"]],["u8"]]]],[11,"to_u16",E,R[1170],3,[[["self"]],[[R[24],["u16"]],["u16"]]]],[11,"to_u32",E,R[1171],3,[[["self"]],[["u32"],[R[24],["u32"]]]]],[10,"to_u64",E,R[1172],3,[[["self"]],[[R[24],["u64"]],["u64"]]]],[11,"to_u128",E,R[1173],3,[[["self"]],[["u128"],[R[24],["u128"]]]]],[11,"to_f32",E,R[1174],3,[[["self"]],[[R[24],["f32"]],["f32"]]]],[11,"to_f64",E,R[1175],3,[[["self"]],[["f64"],[R[24],["f64"]]]]],[8,R[940],E,R[1146],N,N],[11,R[1203],E,R[1147],4,[[["isize"]],[R[24]]]],[11,"from_i8",E,R[1148],4,[[["i8"]],[R[24]]]],[11,"from_i16",E,R[1149],4,[[["i16"]],[R[24]]]],[11,"from_i32",E,R[1150],4,[[["i32"]],[R[24]]]],[10,R[1352],E,R[1151],4,[[["i64"]],[R[24]]]],[11,R[1339],E,R[1152],4,[[["i128"]],[R[24]]]],[11,R[973],E,R[1153],4,[[["usize"]],[R[24]]]],[11,"from_u8",E,R[1154],4,[[["u8"]],[R[24]]]],[11,"from_u16",E,R[1155],4,[[["u16"]],[R[24]]]],[11,"from_u32",E,R[1156],4,[[["u32"]],[R[24]]]],[10,R[1353],E,R[1157],4,[[["u64"]],[R[24]]]],[11,R[1340],E,R[1158],4,[[["u128"]],[R[24]]]],[11,R[1354],E,R[1159],4,[[["f32"]],[R[24]]]],[11,R[1355],E,R[1160],4,[[["f64"]],[R[24]]]],[8,"NumCast",E,R[1176],N,N],[10,"from",E,R[1177],5,[[["toprimitive"]],[R[24]]]],[8,R[941],E,R[1144],N,N],[10,"as_",E,R[1145],6,[[],[T]]],[0,"float",R[865],E,N,N],[8,R[942],R[1204],"Generic trait for floating point numbers that works with…",N,N],[10,"infinity",E,"Returns positive infinity.",7,[[],["self"]]],[10,R[868],E,"Returns negative infinity.",7,[[],["self"]]],[10,"nan",E,"Returns NaN.",7,[[],["self"]]],[10,"neg_zero",E,R[869],7,[[],["self"]]],[10,R[866],E,R[870],7,[[],["self"]]],[10,R[871],E,R[872],7,[[],["self"]]],[10,"epsilon",E,R[873],7,[[],["self"]]],[10,R[867],E,R[874],7,[[],["self"]]],[11,"is_nan",E,"Returns `true` if the number is NaN.",7,[[],["bool"]]],[11,R[875],E,"Returns `true` if the number is infinite.",7,[[],["bool"]]],[11,R[876],E,"Returns `true` if the number is neither infinite or NaN.",7,[[],["bool"]]],[11,R[877],E,R[878],7,[[],["bool"]]],[10,"classify",E,R[879],7,[[],[R[880]]]],[11,"floor",E,R[881],7,[[],["self"]]],[11,"ceil",E,R[882],7,[[],["self"]]],[11,"round",E,R[883],7,[[],["self"]]],[11,"trunc",E,R[884],7,[[],["self"]]],[11,"fract",E,R[885],7,[[],["self"]]],[11,"abs",E,R[886],7,[[],["self"]]],[11,"signum",E,R[887],7,[[],["self"]]],[11,R[888],E,"Returns `true` if `self` is positive, including `+0.0` and…",7,[[],["bool"]]],[11,R[889],E,"Returns `true` if `self` is negative, including `-0.0` and…",7,[[],["bool"]]],[11,"min",E,R[894],7,[[],["self"]]],[11,"max",E,R[893],7,[[],["self"]]],[11,"recip",E,"Returns the reciprocal (multiplicative inverse) of the…",7,[[],["self"]]],[11,"powi",E,R[890],7,[[["i32"]],["self"]]],[10,R[891],E,"Converts to degrees, assuming the number is in radians.",7,[[],["self"]]],[10,R[892],E,"Converts to radians, assuming the number is in degrees.",7,[[],["self"]]],[10,R[895],E,R[896],7,[[]]],[8,"Float",E,R[1118],N,N],[10,"nan",E,R[1119],8,[[],["self"]]],[10,"infinity",E,R[1120],8,[[],["self"]]],[10,R[868],E,R[1121],8,[[],["self"]]],[10,"neg_zero",E,R[869],8,[[],["self"]]],[10,R[866],E,R[870],8,[[],["self"]]],[10,R[871],E,R[872],8,[[],["self"]]],[11,"epsilon",E,R[873],8,[[],["self"]]],[10,R[867],E,R[874],8,[[],["self"]]],[10,"is_nan",E,R[1122],8,[[],["bool"]]],[10,R[875],E,R[1123],8,[[],["bool"]]],[10,R[876],E,R[1124],8,[[],["bool"]]],[10,R[877],E,R[878],8,[[],["bool"]]],[10,"classify",E,R[879],8,[[],[R[880]]]],[10,"floor",E,R[881],8,[[],["self"]]],[10,"ceil",E,R[882],8,[[],["self"]]],[10,"round",E,R[883],8,[[],["self"]]],[10,"trunc",E,R[884],8,[[],["self"]]],[10,"fract",E,R[885],8,[[],["self"]]],[10,"abs",E,R[886],8,[[],["self"]]],[10,"signum",E,R[887],8,[[],["self"]]],[10,R[888],E,R[904],8,[[],["bool"]]],[10,R[889],E,R[905],8,[[],["bool"]]],[10,"mul_add",E,R[900],8,[[],["self"]]],[10,"recip",E,R[906],8,[[],["self"]]],[10,"powi",E,R[890],8,[[["i32"]],["self"]]],[10,"powf",E,R[1125],8,[[],["self"]]],[10,"sqrt",E,R[907],8,[[],["self"]]],[10,"exp",E,R[908],8,[[],["self"]]],[10,"exp2",E,R[909],8,[[],["self"]]],[10,"ln",E,R[910],8,[[],["self"]]],[10,"log",E,R[911],8,[[],["self"]]],[10,"log2",E,R[912],8,[[],["self"]]],[10,"log10",E,R[913],8,[[],["self"]]],[11,R[891],E,R[914],8,[[],["self"]]],[11,R[892],E,R[915],8,[[],["self"]]],[10,"max",E,R[893],8,[[],["self"]]],[10,"min",E,R[894],8,[[],["self"]]],[10,"abs_sub",E,R[916],8,[[],["self"]]],[10,"cbrt",E,R[917],8,[[],["self"]]],[10,"hypot",E,R[918],8,[[],["self"]]],[10,"sin",E,R[919],8,[[],["self"]]],[10,"cos",E,R[920],8,[[],["self"]]],[10,"tan",E,R[921],8,[[],["self"]]],[10,"asin",E,R[922],8,[[],["self"]]],[10,"acos",E,R[923],8,[[],["self"]]],[10,"atan",E,R[924],8,[[],["self"]]],[10,"atan2",E,R[925],8,[[],["self"]]],[10,"sin_cos",E,R[926],8,[[]]],[10,"exp_m1",E,R[927],8,[[],["self"]]],[10,"ln_1p",E,R[928],8,[[],["self"]]],[10,"sinh",E,R[929],8,[[],["self"]]],[10,"cosh",E,R[930],8,[[],["self"]]],[10,"tanh",E,R[931],8,[[],["self"]]],[10,"asinh",E,R[932],8,[[],["self"]]],[10,"acosh",E,R[933],8,[[],["self"]]],[10,"atanh",E,R[934],8,[[],["self"]]],[10,R[895],E,R[896],8,[[]]],[8,R[943],E,E,N,N],[10,"E",E,R[1126],9,[[],["self"]]],[10,"FRAC_1_PI",E,R[1127],9,[[],["self"]]],[10,R[1128],E,R[1129],9,[[],["self"]]],[10,"FRAC_2_PI",E,R[1130],9,[[],["self"]]],[10,R[1131],E,R[1132],9,[[],["self"]]],[10,"FRAC_PI_2",E,R[1133],9,[[],["self"]]],[10,"FRAC_PI_3",E,R[1134],9,[[],["self"]]],[10,"FRAC_PI_4",E,R[1135],9,[[],["self"]]],[10,"FRAC_PI_6",E,R[1136],9,[[],["self"]]],[10,"FRAC_PI_8",E,R[1137],9,[[],["self"]]],[10,"LN_10",E,R[1138],9,[[],["self"]]],[10,"LN_2",E,R[1139],9,[[],["self"]]],[10,"LOG10_E",E,R[1140],9,[[],["self"]]],[10,"LOG2_E",E,R[1141],9,[[],["self"]]],[10,"PI",E,R[1142],9,[[],["self"]]],[10,"SQRT_2",E,R[1143],9,[[],["self"]]],[0,"identities",R[865],E,N,N],[5,"zero",R[1205],R[1077],N,[[],["zero"]]],[5,"one",E,R[1078],N,[[],["one"]]],[8,"Zero",E,R[1069],N,N],[10,"zero",E,R[1070],10,[[],["self"]]],[11,"set_zero",E,R[1071],10,[[["self"]]]],[10,"is_zero",E,R[1072],10,[[["self"]],["bool"]]],[8,"One",E,R[1073],N,N],[10,"one",E,R[1074],11,[[],["self"]]],[11,"set_one",E,R[1075],11,[[["self"]]]],[11,"is_one",E,R[1076],11,[[["self"]],["bool"]]],[0,"int",R[865],E,N,N],[8,"PrimInt",R[1206],R[1179],N,N],[10,R[1207],E,R[1180],12,[[],["u32"]]],[10,R[1181],E,R[1182],12,[[],["u32"]]],[10,R[1183],E,R[1184],12,[[],["u32"]]],[10,R[1185],E,R[1186],12,[[],["u32"]]],[10,R[959],E,R[897],12,[[["u32"]],["self"]]],[10,R[1187],E,R[898],12,[[["u32"]],["self"]]],[10,R[1208],E,R[897],12,[[["u32"]],["self"]]],[10,R[1209],E,R[898],12,[[["u32"]],["self"]]],[10,R[1188],E,R[897],12,[[["u32"]],["self"]]],[10,R[1189],E,R[898],12,[[["u32"]],["self"]]],[10,R[1210],E,R[1190],12,[[],["self"]]],[10,"from_be",E,R[1191],12,[[],["self"]]],[10,"from_le",E,R[1192],12,[[],["self"]]],[10,"to_be",E,R[1193],12,[[],["self"]]],[10,"to_le",E,R[1194],12,[[],["self"]]],[10,"pow",E,R[1195],12,[[["u32"]],["self"]]],[0,"ops",R[865],E,N,N],[0,"checked",R[899],E,N,N],[8,R[944],R[1211],R[1090],N,N],[10,R[960],E,R[1091],13,[[["self"]],[R[24]]]],[8,R[945],E,R[1092],N,N],[10,R[961],E,R[1093],14,[[["self"]],[R[24]]]],[8,R[946],E,R[1094],N,N],[10,R[1095],E,R[1096],15,[[["self"]],[R[24]]]],[8,R[947],E,R[1097],N,N],[10,R[1098],E,R[1099],16,[[["self"]],[R[24]]]],[8,R[948],E,"Performs an integral remainder that returns `None` instead…",N,N],[10,"checked_rem",E,"Finds the remainder of dividing two numbers, checking for…",17,[[["self"]],[R[24]]]],[8,R[949],E,"Performs negation that returns `None` if the result can't…",N,N],[10,"checked_neg",E,"Negates a number, returning `None` for results that can't…",18,[[["self"]],[R[24]]]],[8,R[950],E,R[1100],N,N],[10,R[1101],E,R[1102],19,[[["u32"],["self"]],[R[24]]]],[8,R[951],E,R[1103],N,N],[10,R[1104],E,R[1105],20,[[["u32"],["self"]],[R[24]]]],[0,"inv",R[899],E,N,N],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",N,N],[16,"Output",E,R[903],21,N],[10,"inv",E,"Returns the multiplicative inverse of `self`.",21,[[]]],[0,"mul_add",R[899],E,N,N],[8,"MulAdd","num_traits::ops::mul_add",R[900],N,N],[16,"Output",E,"The resulting type after applying the fused multiply-add.",22,N],[10,"mul_add",E,R[901],22,[[["a"],["b"]]]],[8,R[952],E,"The fused multiply-add assignment operation.",N,N],[10,"mul_add_assign",E,R[901],23,[[["self"],["a"],["b"]]]],[0,"saturating",R[899],E,N,N],[8,R[953],R[1212],R[1085],N,N],[10,R[1086],E,R[1087],24,[[],["self"]]],[10,R[1088],E,R[1089],24,[[],["self"]]],[0,"wrapping",R[899],E,N,N],[8,R[954],R[1213],R[1106],N,N],[10,R[1107],E,R[1108],25,[[["self"]],["self"]]],[8,R[955],E,R[1112],N,N],[10,R[1113],E,R[1114],26,[[["self"]],["self"]]],[8,R[956],E,R[1109],N,N],[10,R[1110],E,R[1111],27,[[["self"]],["self"]]],[8,R[957],E,"Performs a left shift that does not panic.",N,N],[10,"wrapping_shl",E,"Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",28,[[["u32"],["self"]],["self"]]],[8,R[958],E,"Performs a right shift that does not panic.",N,N],[10,"wrapping_shr",E,"Panic-free bitwise shift-right; yields `self >>…",29,[[["u32"],["self"]],["self"]]],[0,"pow",R[865],E,N,N],[5,"pow",R[1214],R[1196],N,[[["mul"],["one"],["usize"],["clone"]],[["mul"],["one"],["clone"]]]],[5,R[1197],E,R[1198],N,[[["one"],[R[902]],["usize"],["clone"]],[[R[24]],["one"],[R[902]],["clone"]]]],[8,"Pow",E,"Binary operator for raising a value to a power.",N,N],[16,"Output",E,R[903],30,N],[10,"pow",E,"Returns `self` to the power `rhs`.",30,[[["rhs"]]]],[0,"real",R[865],E,N,N],[8,"Real",R[1215],R[1216],N,N],[10,R[866],E,R[870],31,[[],["self"]]],[10,R[871],E,R[872],31,[[],["self"]]],[10,"epsilon",E,R[873],31,[[],["self"]]],[10,R[867],E,R[874],31,[[],["self"]]],[10,"floor",E,R[881],31,[[],["self"]]],[10,"ceil",E,R[882],31,[[],["self"]]],[10,"round",E,R[883],31,[[],["self"]]],[10,"trunc",E,R[884],31,[[],["self"]]],[10,"fract",E,R[885],31,[[],["self"]]],[10,"abs",E,R[886],31,[[],["self"]]],[10,"signum",E,R[887],31,[[],["self"]]],[10,R[888],E,R[904],31,[[],["bool"]]],[10,R[889],E,R[905],31,[[],["bool"]]],[10,"mul_add",E,R[900],31,[[],["self"]]],[10,"recip",E,R[906],31,[[],["self"]]],[10,"powi",E,R[890],31,[[["i32"]],["self"]]],[10,"powf",E,R[1217],31,[[],["self"]]],[10,"sqrt",E,R[907],31,[[],["self"]]],[10,"exp",E,R[908],31,[[],["self"]]],[10,"exp2",E,R[909],31,[[],["self"]]],[10,"ln",E,R[910],31,[[],["self"]]],[10,"log",E,R[911],31,[[],["self"]]],[10,"log2",E,R[912],31,[[],["self"]]],[10,"log10",E,R[913],31,[[],["self"]]],[10,R[891],E,R[914],31,[[],["self"]]],[10,R[892],E,R[915],31,[[],["self"]]],[10,"max",E,R[893],31,[[],["self"]]],[10,"min",E,R[894],31,[[],["self"]]],[10,"abs_sub",E,R[916],31,[[],["self"]]],[10,"cbrt",E,R[917],31,[[],["self"]]],[10,"hypot",E,R[918],31,[[],["self"]]],[10,"sin",E,R[919],31,[[],["self"]]],[10,"cos",E,R[920],31,[[],["self"]]],[10,"tan",E,R[921],31,[[],["self"]]],[10,"asin",E,R[922],31,[[],["self"]]],[10,"acos",E,R[923],31,[[],["self"]]],[10,"atan",E,R[924],31,[[],["self"]]],[10,"atan2",E,R[925],31,[[],["self"]]],[10,"sin_cos",E,R[926],31,[[]]],[10,"exp_m1",E,R[927],31,[[],["self"]]],[10,"ln_1p",E,R[928],31,[[],["self"]]],[10,"sinh",E,R[929],31,[[],["self"]]],[10,"cosh",E,R[930],31,[[],["self"]]],[10,"tanh",E,R[931],31,[[],["self"]]],[10,"asinh",E,R[932],31,[[],["self"]]],[10,"acosh",E,R[933],31,[[],["self"]]],[10,"atanh",E,R[934],31,[[],["self"]]],[0,"sign",R[865],E,N,N],[5,"abs",R[1218],R[935],N,[[["signed"]],["signed"]]],[5,"abs_sub",E,R[916],N,[[["signed"]],["signed"]]],[5,"signum",E,R[936],N,[[["signed"]],["signed"]]],[8,"Signed",E,R[1079],N,N],[10,"abs",E,R[935],32,[[["self"]],["self"]]],[10,"abs_sub",E,R[916],32,[[["self"]],["self"]]],[10,"signum",E,R[936],32,[[["self"]],["self"]]],[10,R[1080],E,R[1081],32,[[["self"]],["bool"]]],[10,R[1082],E,R[1083],32,[[["self"]],["bool"]]],[8,"Unsigned",E,R[1084],N,N],[8,"Num",R[865],R[1219],N,N],[16,R[1220],E,E,33,N],[10,R[1221],E,R[1222],33,[[["u32"],["str"]],[R[2]]]],[8,"NumOps",E,R[1223],N,N],[8,"NumRef",E,R[1224],N,N],[8,"RefNum",E,R[1225],N,N],[8,R[1226],E,R[1227],N,N],[8,"NumAssign",E,R[1228],N,N],[8,R[1229],E,R[1230],N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[161],E,E,0,[[["self"]],[R[34]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,"fmt",E,E,1,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[12]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[12]]],[R[2]]]]],"p":[[3,R[937]],[4,R[938]],[8,"Bounded"],[8,R[939]],[8,R[940]],[8,"NumCast"],[8,R[941]],[8,R[942]],[8,"Float"],[8,R[943]],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,R[944]],[8,R[945]],[8,R[946]],[8,R[947]],[8,R[948]],[8,R[949]],[8,R[950]],[8,R[951]],[8,"Inv"],[8,"MulAdd"],[8,R[952]],[8,R[953]],[8,R[954]],[8,R[955]],[8,R[956]],[8,R[957]],[8,R[958]],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]};
searchIndex[R[865]]={"doc":R[1199],"i":[[8,"Bounded",R[865],R[1115],N,N],[10,R[866],E,R[1116],0,[[],["self"]]],[10,R[867],E,R[1117],0,[[],["self"]]],[8,"Float",E,R[1118],N,N],[10,"nan",E,R[1119],1,[[],["self"]]],[10,"infinity",E,R[1120],1,[[],["self"]]],[10,R[868],E,R[1121],1,[[],["self"]]],[10,"neg_zero",E,R[869],1,[[],["self"]]],[10,R[866],E,R[870],1,[[],["self"]]],[10,R[871],E,R[872],1,[[],["self"]]],[11,"epsilon",E,R[873],1,[[],["self"]]],[10,R[867],E,R[874],1,[[],["self"]]],[10,"is_nan",E,R[1122],1,[[],["bool"]]],[10,R[875],E,R[1123],1,[[],["bool"]]],[10,R[876],E,R[1124],1,[[],["bool"]]],[10,R[877],E,R[878],1,[[],["bool"]]],[10,"classify",E,R[879],1,[[],[R[880]]]],[10,"floor",E,R[881],1,[[],["self"]]],[10,"ceil",E,R[882],1,[[],["self"]]],[10,"round",E,R[883],1,[[],["self"]]],[10,"trunc",E,R[884],1,[[],["self"]]],[10,"fract",E,R[885],1,[[],["self"]]],[10,"abs",E,R[886],1,[[],["self"]]],[10,"signum",E,R[887],1,[[],["self"]]],[10,R[888],E,R[904],1,[[],["bool"]]],[10,R[889],E,R[905],1,[[],["bool"]]],[10,"mul_add",E,R[900],1,[[],["self"]]],[10,"recip",E,R[906],1,[[],["self"]]],[10,"powi",E,R[890],1,[[["i32"]],["self"]]],[10,"powf",E,R[1125],1,[[],["self"]]],[10,"sqrt",E,R[907],1,[[],["self"]]],[10,"exp",E,R[908],1,[[],["self"]]],[10,"exp2",E,R[909],1,[[],["self"]]],[10,"ln",E,R[910],1,[[],["self"]]],[10,"log",E,R[911],1,[[],["self"]]],[10,"log2",E,R[912],1,[[],["self"]]],[10,"log10",E,R[913],1,[[],["self"]]],[11,R[891],E,R[914],1,[[],["self"]]],[11,R[892],E,R[915],1,[[],["self"]]],[10,"max",E,R[893],1,[[],["self"]]],[10,"min",E,R[894],1,[[],["self"]]],[10,"abs_sub",E,R[916],1,[[],["self"]]],[10,"cbrt",E,R[917],1,[[],["self"]]],[10,"hypot",E,R[918],1,[[],["self"]]],[10,"sin",E,R[919],1,[[],["self"]]],[10,"cos",E,R[920],1,[[],["self"]]],[10,"tan",E,R[921],1,[[],["self"]]],[10,"asin",E,R[922],1,[[],["self"]]],[10,"acos",E,R[923],1,[[],["self"]]],[10,"atan",E,R[924],1,[[],["self"]]],[10,"atan2",E,R[925],1,[[],["self"]]],[10,"sin_cos",E,R[926],1,[[]]],[10,"exp_m1",E,R[927],1,[[],["self"]]],[10,"ln_1p",E,R[928],1,[[],["self"]]],[10,"sinh",E,R[929],1,[[],["self"]]],[10,"cosh",E,R[930],1,[[],["self"]]],[10,"tanh",E,R[931],1,[[],["self"]]],[10,"asinh",E,R[932],1,[[],["self"]]],[10,"acosh",E,R[933],1,[[],["self"]]],[10,"atanh",E,R[934],1,[[],["self"]]],[10,R[895],E,R[896],1,[[]]],[8,R[943],E,E,N,N],[10,"E",E,R[1126],2,[[],["self"]]],[10,"FRAC_1_PI",E,R[1127],2,[[],["self"]]],[10,R[1128],E,R[1129],2,[[],["self"]]],[10,"FRAC_2_PI",E,R[1130],2,[[],["self"]]],[10,R[1131],E,R[1132],2,[[],["self"]]],[10,"FRAC_PI_2",E,R[1133],2,[[],["self"]]],[10,"FRAC_PI_3",E,R[1134],2,[[],["self"]]],[10,"FRAC_PI_4",E,R[1135],2,[[],["self"]]],[10,"FRAC_PI_6",E,R[1136],2,[[],["self"]]],[10,"FRAC_PI_8",E,R[1137],2,[[],["self"]]],[10,"LN_10",E,R[1138],2,[[],["self"]]],[10,"LN_2",E,R[1139],2,[[],["self"]]],[10,"LOG10_E",E,R[1140],2,[[],["self"]]],[10,"LOG2_E",E,R[1141],2,[[],["self"]]],[10,"PI",E,R[1142],2,[[],["self"]]],[10,"SQRT_2",E,R[1143],2,[[],["self"]]],[8,"Zero",E,R[1069],N,N],[10,"zero",E,R[1070],3,[[],["self"]]],[11,"set_zero",E,R[1071],3,[[["self"]]]],[10,"is_zero",E,R[1072],3,[[["self"]],["bool"]]],[8,"One",E,R[1073],N,N],[10,"one",E,R[1074],4,[[],["self"]]],[11,"set_one",E,R[1075],4,[[["self"]]]],[11,"is_one",E,R[1076],4,[[["self"]],["bool"]]],[5,"zero",E,R[1077],N,[[],[T]]],[5,"one",E,R[1078],N,[[],[T]]],[8,R[944],E,R[1090],N,N],[10,R[960],E,R[1091],5,[[["self"]],[R[24]]]],[8,R[945],E,R[1092],N,N],[10,R[961],E,R[1093],6,[[["self"]],[R[24]]]],[8,R[946],E,R[1094],N,N],[10,R[1095],E,R[1096],7,[[["self"]],[R[24]]]],[8,R[947],E,R[1097],N,N],[10,R[1098],E,R[1099],8,[[["self"]],[R[24]]]],[8,R[950],E,R[1100],N,N],[10,R[1101],E,R[1102],9,[[["u32"],["self"]],[R[24]]]],[8,R[951],E,R[1103],N,N],[10,R[1104],E,R[1105],10,[[["u32"],["self"]],[R[24]]]],[8,R[954],E,R[1106],N,N],[10,R[1107],E,R[1108],11,[[["self"]],["self"]]],[8,R[956],E,R[1109],N,N],[10,R[1110],E,R[1111],12,[[["self"]],["self"]]],[8,R[955],E,R[1112],N,N],[10,R[1113],E,R[1114],13,[[["self"]],["self"]]],[8,R[953],E,R[1085],N,N],[10,R[1086],E,R[1087],14,[[],["self"]]],[10,R[1088],E,R[1089],14,[[],["self"]]],[8,"Signed",E,R[1079],N,N],[10,"abs",E,R[935],15,[[["self"]],["self"]]],[10,"abs_sub",E,R[916],15,[[["self"]],["self"]]],[10,"signum",E,R[936],15,[[["self"]],["self"]]],[10,R[1080],E,R[1081],15,[[["self"]],["bool"]]],[10,R[1082],E,R[1083],15,[[["self"]],["bool"]]],[8,"Unsigned",E,R[1084],N,N],[5,"abs",E,R[935],N,[[[T]],[T]]],[5,"abs_sub",E,R[916],N,[[[T]],[T]]],[5,"signum",E,R[936],N,[[[T]],[T]]],[8,R[941],E,R[1144],N,N],[10,"as_",E,R[1145],16,[[],[T]]],[8,R[940],E,R[1146],N,N],[11,R[1203],E,R[1147],17,[[["isize"]],[R[24]]]],[11,"from_i8",E,R[1148],17,[[["i8"]],[R[24]]]],[11,"from_i16",E,R[1149],17,[[["i16"]],[R[24]]]],[11,"from_i32",E,R[1150],17,[[["i32"]],[R[24]]]],[10,R[1352],E,R[1151],17,[[["i64"]],[R[24]]]],[11,R[1339],E,R[1152],17,[[["i128"]],[R[24]]]],[11,R[973],E,R[1153],17,[[["usize"]],[R[24]]]],[11,"from_u8",E,R[1154],17,[[["u8"]],[R[24]]]],[11,"from_u16",E,R[1155],17,[[["u16"]],[R[24]]]],[11,"from_u32",E,R[1156],17,[[["u32"]],[R[24]]]],[10,R[1353],E,R[1157],17,[[["u64"]],[R[24]]]],[11,R[1340],E,R[1158],17,[[["u128"]],[R[24]]]],[11,R[1354],E,R[1159],17,[[["f32"]],[R[24]]]],[11,R[1355],E,R[1160],17,[[["f64"]],[R[24]]]],[8,R[939],E,R[1161],N,N],[11,"to_isize",E,R[1162],18,[[["self"]],[["isize"],[R[24],["isize"]]]]],[11,"to_i8",E,R[1163],18,[[["self"]],[[R[24],["i8"]],["i8"]]]],[11,"to_i16",E,R[1164],18,[[["self"]],[[R[24],["i16"]],["i16"]]]],[11,"to_i32",E,R[1165],18,[[["self"]],[["i32"],[R[24],["i32"]]]]],[10,"to_i64",E,R[1166],18,[[["self"]],[[R[24],["i64"]],["i64"]]]],[11,"to_i128",E,R[1167],18,[[["self"]],[["i128"],[R[24],["i128"]]]]],[11,"to_usize",E,R[1168],18,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,"to_u8",E,R[1169],18,[[["self"]],[["u8"],[R[24],["u8"]]]]],[11,"to_u16",E,R[1170],18,[[["self"]],[[R[24],["u16"]],["u16"]]]],[11,"to_u32",E,R[1171],18,[[["self"]],[["u32"],[R[24],["u32"]]]]],[10,"to_u64",E,R[1172],18,[[["self"]],[[R[24],["u64"]],["u64"]]]],[11,"to_u128",E,R[1173],18,[[["self"]],[[R[24],["u128"]],["u128"]]]],[11,"to_f32",E,R[1174],18,[[["self"]],[[R[24],["f32"]],["f32"]]]],[11,"to_f64",E,R[1175],18,[[["self"]],[["f64"],[R[24],["f64"]]]]],[8,"NumCast",E,R[1176],N,N],[10,"from",E,R[1177],19,[[[T]],[R[24]]]],[5,"cast",E,R[1178],N,[[[T]],[R[24]]]],[8,"PrimInt",E,R[1179],N,N],[10,R[1207],E,R[1180],20,[[],["u32"]]],[10,R[1181],E,R[1182],20,[[],["u32"]]],[10,R[1183],E,R[1184],20,[[],["u32"]]],[10,R[1185],E,R[1186],20,[[],["u32"]]],[10,R[959],E,R[897],20,[[["u32"]],["self"]]],[10,R[1187],E,R[898],20,[[["u32"]],["self"]]],[10,R[1208],E,R[897],20,[[["u32"]],["self"]]],[10,R[1209],E,R[898],20,[[["u32"]],["self"]]],[10,R[1188],E,R[897],20,[[["u32"]],["self"]]],[10,R[1189],E,R[898],20,[[["u32"]],["self"]]],[10,R[1210],E,R[1190],20,[[],["self"]]],[10,"from_be",E,R[1191],20,[[],["self"]]],[10,"from_le",E,R[1192],20,[[],["self"]]],[10,"to_be",E,R[1193],20,[[],["self"]]],[10,"to_le",E,R[1194],20,[[],["self"]]],[10,"pow",E,R[1195],20,[[["u32"]],["self"]]],[5,"pow",E,R[1196],N,[[["usize"],[T]],[T]]],[5,R[1197],E,R[1198],N,[[["usize"],[T]],[R[24]]]],[8,"Num",E,R[1219],N,N],[16,R[1220],E,E,21,N],[10,R[1221],E,R[1222],21,[[["u32"],["str"]],[R[2]]]],[8,"NumOps",E,R[1223],N,N],[8,"NumRef",E,R[1224],N,N],[8,"RefNum",E,R[1225],N,N],[8,R[1226],E,R[1227],N,N],[8,"NumAssign",E,R[1228],N,N],[8,R[1229],E,R[1230],N,N],[4,R[938],E,E,N,N],[13,"Empty",E,E,22,N],[13,"Invalid",E,E,22,N],[3,R[937],E,E,N,N],[12,"kind",E,E,23,N],[5,"clamp",E,R[1200],N,[[[T]],[T]]],[0,"identities",E,E,N,N],[8,"Zero",R[1205],R[1069],N,N],[10,"zero",E,R[1070],3,[[],["self"]]],[11,"set_zero",E,R[1071],3,[[["self"]]]],[10,"is_zero",E,R[1072],3,[[["self"]],["bool"]]],[8,"One",E,R[1073],N,N],[10,"one",E,R[1074],4,[[],["self"]]],[11,"set_one",E,R[1075],4,[[["self"]]]],[11,"is_one",E,R[1076],4,[[["self"]],["bool"]]],[5,"zero",E,R[1077],N,[[],[T]]],[5,"one",E,R[1078],N,[[],[T]]],[0,"sign",R[865],E,N,N],[8,"Signed",R[1218],R[1079],N,N],[10,"abs",E,R[935],15,[[["self"]],["self"]]],[10,"abs_sub",E,R[916],15,[[["self"]],["self"]]],[10,"signum",E,R[936],15,[[["self"]],["self"]]],[10,R[1080],E,R[1081],15,[[["self"]],["bool"]]],[10,R[1082],E,R[1083],15,[[["self"]],["bool"]]],[8,"Unsigned",E,R[1084],N,N],[5,"abs",E,R[935],N,[[[T]],[T]]],[5,"abs_sub",E,R[916],N,[[[T]],[T]]],[5,"signum",E,R[936],N,[[[T]],[T]]],[0,"ops",R[865],E,N,N],[0,"saturating",R[899],E,N,N],[8,R[953],R[1212],R[1085],N,N],[10,R[1086],E,R[1087],14,[[],["self"]]],[10,R[1088],E,R[1089],14,[[],["self"]]],[0,"checked",R[899],E,N,N],[8,R[944],R[1211],R[1090],N,N],[10,R[960],E,R[1091],5,[[["self"]],[R[24]]]],[8,R[945],E,R[1092],N,N],[10,R[961],E,R[1093],6,[[["self"]],[R[24]]]],[8,R[946],E,R[1094],N,N],[10,R[1095],E,R[1096],7,[[["self"]],[R[24]]]],[8,R[947],E,R[1097],N,N],[10,R[1098],E,R[1099],8,[[["self"]],[R[24]]]],[8,R[950],E,R[1100],N,N],[10,R[1101],E,R[1102],9,[[["u32"],["self"]],[R[24]]]],[8,R[951],E,R[1103],N,N],[10,R[1104],E,R[1105],10,[[["u32"],["self"]],[R[24]]]],[0,"wrapping",R[899],E,N,N],[8,R[954],R[1213],R[1106],N,N],[10,R[1107],E,R[1108],11,[[["self"]],["self"]]],[8,R[956],E,R[1109],N,N],[10,R[1110],E,R[1111],12,[[["self"]],["self"]]],[8,R[955],E,R[1112],N,N],[10,R[1113],E,R[1114],13,[[["self"]],["self"]]],[0,"bounds",R[865],E,N,N],[8,"Bounded",R[1201],R[1115],N,N],[10,R[866],E,R[1116],0,[[],["self"]]],[10,R[867],E,R[1117],0,[[],["self"]]],[0,"float",R[865],E,N,N],[8,"Float",R[1204],R[1118],N,N],[10,"nan",E,R[1119],1,[[],["self"]]],[10,"infinity",E,R[1120],1,[[],["self"]]],[10,R[868],E,R[1121],1,[[],["self"]]],[10,"neg_zero",E,R[869],1,[[],["self"]]],[10,R[866],E,R[870],1,[[],["self"]]],[10,R[871],E,R[872],1,[[],["self"]]],[11,"epsilon",E,R[873],1,[[],["self"]]],[10,R[867],E,R[874],1,[[],["self"]]],[10,"is_nan",E,R[1122],1,[[],["bool"]]],[10,R[875],E,R[1123],1,[[],["bool"]]],[10,R[876],E,R[1124],1,[[],["bool"]]],[10,R[877],E,R[878],1,[[],["bool"]]],[10,"classify",E,R[879],1,[[],[R[880]]]],[10,"floor",E,R[881],1,[[],["self"]]],[10,"ceil",E,R[882],1,[[],["self"]]],[10,"round",E,R[883],1,[[],["self"]]],[10,"trunc",E,R[884],1,[[],["self"]]],[10,"fract",E,R[885],1,[[],["self"]]],[10,"abs",E,R[886],1,[[],["self"]]],[10,"signum",E,R[887],1,[[],["self"]]],[10,R[888],E,R[904],1,[[],["bool"]]],[10,R[889],E,R[905],1,[[],["bool"]]],[10,"mul_add",E,R[900],1,[[],["self"]]],[10,"recip",E,R[906],1,[[],["self"]]],[10,"powi",E,R[890],1,[[["i32"]],["self"]]],[10,"powf",E,R[1125],1,[[],["self"]]],[10,"sqrt",E,R[907],1,[[],["self"]]],[10,"exp",E,R[908],1,[[],["self"]]],[10,"exp2",E,R[909],1,[[],["self"]]],[10,"ln",E,R[910],1,[[],["self"]]],[10,"log",E,R[911],1,[[],["self"]]],[10,"log2",E,R[912],1,[[],["self"]]],[10,"log10",E,R[913],1,[[],["self"]]],[11,R[891],E,R[914],1,[[],["self"]]],[11,R[892],E,R[915],1,[[],["self"]]],[10,"max",E,R[893],1,[[],["self"]]],[10,"min",E,R[894],1,[[],["self"]]],[10,"abs_sub",E,R[916],1,[[],["self"]]],[10,"cbrt",E,R[917],1,[[],["self"]]],[10,"hypot",E,R[918],1,[[],["self"]]],[10,"sin",E,R[919],1,[[],["self"]]],[10,"cos",E,R[920],1,[[],["self"]]],[10,"tan",E,R[921],1,[[],["self"]]],[10,"asin",E,R[922],1,[[],["self"]]],[10,"acos",E,R[923],1,[[],["self"]]],[10,"atan",E,R[924],1,[[],["self"]]],[10,"atan2",E,R[925],1,[[],["self"]]],[10,"sin_cos",E,R[926],1,[[]]],[10,"exp_m1",E,R[927],1,[[],["self"]]],[10,"ln_1p",E,R[928],1,[[],["self"]]],[10,"sinh",E,R[929],1,[[],["self"]]],[10,"cosh",E,R[930],1,[[],["self"]]],[10,"tanh",E,R[931],1,[[],["self"]]],[10,"asinh",E,R[932],1,[[],["self"]]],[10,"acosh",E,R[933],1,[[],["self"]]],[10,"atanh",E,R[934],1,[[],["self"]]],[10,R[895],E,R[896],1,[[]]],[8,R[943],E,E,N,N],[10,"E",E,R[1126],2,[[],["self"]]],[10,"FRAC_1_PI",E,R[1127],2,[[],["self"]]],[10,R[1128],E,R[1129],2,[[],["self"]]],[10,"FRAC_2_PI",E,R[1130],2,[[],["self"]]],[10,R[1131],E,R[1132],2,[[],["self"]]],[10,"FRAC_PI_2",E,R[1133],2,[[],["self"]]],[10,"FRAC_PI_3",E,R[1134],2,[[],["self"]]],[10,"FRAC_PI_4",E,R[1135],2,[[],["self"]]],[10,"FRAC_PI_6",E,R[1136],2,[[],["self"]]],[10,"FRAC_PI_8",E,R[1137],2,[[],["self"]]],[10,"LN_10",E,R[1138],2,[[],["self"]]],[10,"LN_2",E,R[1139],2,[[],["self"]]],[10,"LOG10_E",E,R[1140],2,[[],["self"]]],[10,"LOG2_E",E,R[1141],2,[[],["self"]]],[10,"PI",E,R[1142],2,[[],["self"]]],[10,"SQRT_2",E,R[1143],2,[[],["self"]]],[0,"real",R[865],E,N,N],[8,"Real",R[1215],R[1216],N,N],[10,R[866],E,R[870],24,[[],["self"]]],[10,R[871],E,R[872],24,[[],["self"]]],[10,"epsilon",E,R[873],24,[[],["self"]]],[10,R[867],E,R[874],24,[[],["self"]]],[10,"floor",E,R[881],24,[[],["self"]]],[10,"ceil",E,R[882],24,[[],["self"]]],[10,"round",E,R[883],24,[[],["self"]]],[10,"trunc",E,R[884],24,[[],["self"]]],[10,"fract",E,R[885],24,[[],["self"]]],[10,"abs",E,R[886],24,[[],["self"]]],[10,"signum",E,R[887],24,[[],["self"]]],[10,R[888],E,R[904],24,[[],["bool"]]],[10,R[889],E,R[905],24,[[],["bool"]]],[10,"mul_add",E,R[900],24,[[],["self"]]],[10,"recip",E,R[906],24,[[],["self"]]],[10,"powi",E,R[890],24,[[["i32"]],["self"]]],[10,"powf",E,R[1217],24,[[],["self"]]],[10,"sqrt",E,R[907],24,[[],["self"]]],[10,"exp",E,R[908],24,[[],["self"]]],[10,"exp2",E,R[909],24,[[],["self"]]],[10,"ln",E,R[910],24,[[],["self"]]],[10,"log",E,R[911],24,[[],["self"]]],[10,"log2",E,R[912],24,[[],["self"]]],[10,"log10",E,R[913],24,[[],["self"]]],[10,R[891],E,R[914],24,[[],["self"]]],[10,R[892],E,R[915],24,[[],["self"]]],[10,"max",E,R[893],24,[[],["self"]]],[10,"min",E,R[894],24,[[],["self"]]],[10,"abs_sub",E,R[916],24,[[],["self"]]],[10,"cbrt",E,R[917],24,[[],["self"]]],[10,"hypot",E,R[918],24,[[],["self"]]],[10,"sin",E,R[919],24,[[],["self"]]],[10,"cos",E,R[920],24,[[],["self"]]],[10,"tan",E,R[921],24,[[],["self"]]],[10,"asin",E,R[922],24,[[],["self"]]],[10,"acos",E,R[923],24,[[],["self"]]],[10,"atan",E,R[924],24,[[],["self"]]],[10,"atan2",E,R[925],24,[[],["self"]]],[10,"sin_cos",E,R[926],24,[[]]],[10,"exp_m1",E,R[927],24,[[],["self"]]],[10,"ln_1p",E,R[928],24,[[],["self"]]],[10,"sinh",E,R[929],24,[[],["self"]]],[10,"cosh",E,R[930],24,[[],["self"]]],[10,"tanh",E,R[931],24,[[],["self"]]],[10,"asinh",E,R[932],24,[[],["self"]]],[10,"acosh",E,R[933],24,[[],["self"]]],[10,"atanh",E,R[934],24,[[],["self"]]],[0,"cast",R[865],E,N,N],[8,R[941],R[1202],R[1144],N,N],[10,"as_",E,R[1145],16,[[],[T]]],[8,R[940],E,R[1146],N,N],[11,R[1203],E,R[1147],17,[[["isize"]],[R[24]]]],[11,"from_i8",E,R[1148],17,[[["i8"]],[R[24]]]],[11,"from_i16",E,R[1149],17,[[["i16"]],[R[24]]]],[11,"from_i32",E,R[1150],17,[[["i32"]],[R[24]]]],[10,R[1352],E,R[1151],17,[[["i64"]],[R[24]]]],[11,R[1339],E,R[1152],17,[[["i128"]],[R[24]]]],[11,R[973],E,R[1153],17,[[["usize"]],[R[24]]]],[11,"from_u8",E,R[1154],17,[[["u8"]],[R[24]]]],[11,"from_u16",E,R[1155],17,[[["u16"]],[R[24]]]],[11,"from_u32",E,R[1156],17,[[["u32"]],[R[24]]]],[10,R[1353],E,R[1157],17,[[["u64"]],[R[24]]]],[11,R[1340],E,R[1158],17,[[["u128"]],[R[24]]]],[11,R[1354],E,R[1159],17,[[["f32"]],[R[24]]]],[11,R[1355],E,R[1160],17,[[["f64"]],[R[24]]]],[8,R[939],E,R[1161],N,N],[11,"to_isize",E,R[1162],18,[[["self"]],[["isize"],[R[24],["isize"]]]]],[11,"to_i8",E,R[1163],18,[[["self"]],[[R[24],["i8"]],["i8"]]]],[11,"to_i16",E,R[1164],18,[[["self"]],[[R[24],["i16"]],["i16"]]]],[11,"to_i32",E,R[1165],18,[[["self"]],[["i32"],[R[24],["i32"]]]]],[10,"to_i64",E,R[1166],18,[[["self"]],[[R[24],["i64"]],["i64"]]]],[11,"to_i128",E,R[1167],18,[[["self"]],[["i128"],[R[24],["i128"]]]]],[11,"to_usize",E,R[1168],18,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,"to_u8",E,R[1169],18,[[["self"]],[["u8"],[R[24],["u8"]]]]],[11,"to_u16",E,R[1170],18,[[["self"]],[[R[24],["u16"]],["u16"]]]],[11,"to_u32",E,R[1171],18,[[["self"]],[["u32"],[R[24],["u32"]]]]],[10,"to_u64",E,R[1172],18,[[["self"]],[[R[24],["u64"]],["u64"]]]],[11,"to_u128",E,R[1173],18,[[["self"]],[[R[24],["u128"]],["u128"]]]],[11,"to_f32",E,R[1174],18,[[["self"]],[[R[24],["f32"]],["f32"]]]],[11,"to_f64",E,R[1175],18,[[["self"]],[["f64"],[R[24],["f64"]]]]],[8,"NumCast",E,R[1176],N,N],[10,"from",E,R[1177],19,[[[T]],[R[24]]]],[5,"cast",E,R[1178],N,[[[T]],[R[24]]]],[0,"int",R[865],E,N,N],[8,"PrimInt",R[1206],R[1179],N,N],[10,R[1207],E,R[1180],20,[[],["u32"]]],[10,R[1181],E,R[1182],20,[[],["u32"]]],[10,R[1183],E,R[1184],20,[[],["u32"]]],[10,R[1185],E,R[1186],20,[[],["u32"]]],[10,R[959],E,R[897],20,[[["u32"]],["self"]]],[10,R[1187],E,R[898],20,[[["u32"]],["self"]]],[10,R[1208],E,R[897],20,[[["u32"]],["self"]]],[10,R[1209],E,R[898],20,[[["u32"]],["self"]]],[10,R[1188],E,R[897],20,[[["u32"]],["self"]]],[10,R[1189],E,R[898],20,[[["u32"]],["self"]]],[10,R[1210],E,R[1190],20,[[],["self"]]],[10,"from_be",E,R[1191],20,[[],["self"]]],[10,"from_le",E,R[1192],20,[[],["self"]]],[10,"to_be",E,R[1193],20,[[],["self"]]],[10,"to_le",E,R[1194],20,[[],["self"]]],[10,"pow",E,R[1195],20,[[["u32"]],["self"]]],[0,"pow",R[865],E,N,N],[5,"pow",R[1214],R[1196],N,[[["usize"],[T]],[T]]],[5,R[1197],E,R[1198],N,[[["usize"],[T]],[R[24]]]],[11,"from",R[865],E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[8],E,E,22,[[[U]],[R[2]]]],[11,R[29],E,E,22,[[["self"]],[T]]],[11,R[15],E,E,22,[[["self"]],[R[30]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[],[R[2]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[161],E,E,23,[[["self"]],[R[34]]]],[11,R[8],E,E,23,[[[U]],[R[2]]]],[11,R[29],E,E,23,[[["self"]],[T]]],[11,R[15],E,E,23,[[["self"]],[R[30]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[],[R[2]]]],[11,"fmt",E,E,22,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,23,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,23,[[[R[12]],["self"]],[["error"],[R[2],["error"]]]]]],"p":[[8,"Bounded"],[8,"Float"],[8,R[943]],[8,"Zero"],[8,"One"],[8,R[944]],[8,R[945]],[8,R[946]],[8,R[947]],[8,R[950]],[8,R[951]],[8,R[954]],[8,R[956]],[8,R[955]],[8,R[953]],[8,"Signed"],[8,R[941]],[8,R[940]],[8,R[939]],[8,"NumCast"],[8,"PrimInt"],[8,"Num"],[4,R[938]],[3,R[937]],[8,"Real"]]};
searchIndex[R[962]]={"doc":"Epoch-based memory reclamation.","i":[[3,"Atomic",R[962],"An atomic pointer that can be safely shared between threads.",N,N],[3,R[975],E,"The error returned on failed compare-and-set operation.",N,N],[12,"current",E,"The value in the atomic pointer at the time of the failed…",0,N],[12,"new",E,"The new value, which the operation failed to store.",0,N],[3,"Owned",E,"An owned heap-allocated object.",N,N],[3,"Shared",E,"A pointer to an object protected by the epoch GC.",N,N],[3,R[976],E,"An epoch-based garbage collector.",N,N],[3,R[977],E,"A handle to a garbage collector.",N,N],[3,"Guard",E,"A guard that keeps the current thread pinned.",N,N],[5,"unprotected",E,"Returns a reference to a dummy guard that allows…",N,[[],["guard"]]],[5,"default_collector",E,"Returns the default global collector.",N,[[],[R[970]]]],[5,R[969],E,"Returns `true` if the current thread is pinned.",N,[[],["bool"]]],[5,"pin",E,"Pins the current thread.",N,[[],["guard"]]],[11,"null",E,"Returns a new null atomic pointer.",1,[[],["atomic"]]],[11,"new",E,"Allocates `value` on the heap and returns a new atomic…",1,[[[T]],["atomic"]]],[11,"load",E,"Loads a `Shared` from the atomic pointer.",1,[[[R[23]],["guard"],["self"]],["shared"]]],[11,R[979],E,"Loads a `Shared` from the atomic pointer using a \"consume\"…",1,[[["guard"],["self"]],["shared"]]],[11,"store",E,R[963],1,[[[R[23]],["pointer"],["self"]]]],[11,"swap",E,R[963],1,[[[R[23]],["pointer"],["guard"],["self"]],["shared"]]],[11,"compare_and_set",E,R[965],1,[[["shared"],["o"],["guard"],["self"],["p"]],[["shared"],[R[2],["shared",R[964]]],[R[964]]]]],[11,"compare_and_set_weak",E,R[965],1,[[["shared"],["o"],["guard"],["self"],["p"]],[["shared"],[R[2],["shared",R[964]]],[R[964]]]]],[11,R[191],E,"Bitwise \"and\" with the current tag.",1,[[[R[23]],["guard"],["self"],["usize"]],["shared"]]],[11,R[196],E,"Bitwise \"or\" with the current tag.",1,[[[R[23]],["guard"],["self"],["usize"]],["shared"]]],[11,R[194],E,"Bitwise \"xor\" with the current tag.",1,[[[R[23]],["guard"],["self"],["usize"]],["shared"]]],[11,"new",E,"Allocates `value` on the heap and returns a new owned…",2,[[[T]],["owned"]]],[11,"from_raw",E,"Returns a new owned pointer pointing to `raw`.",2,[[],["owned"]]],[11,"into_shared",E,"Converts the owned pointer into a [`Shared`].",2,[[["guard"]],["shared"]]],[11,"into_box",E,"Converts the owned pointer into a `Box`.",2,[[],["box"]]],[11,"tag",E,R[967],2,[[["self"]],["usize"]]],[11,"with_tag",E,R[968],2,[[["usize"]],["owned"]]],[11,"null",E,"Returns a new null pointer.",3,[[],["shared"]]],[11,"is_null",E,"Returns `true` if the pointer is null.",3,[[["self"]],["bool"]]],[11,"as_raw",E,"Converts the pointer to a raw pointer (without the tag).",3,[[["self"]]]],[11,"deref",E,R[966],3,[[["self"]],[T]]],[11,R[16],E,R[966],3,[[["self"]],[T]]],[11,"as_ref",E,"Converts the pointer to a reference.",3,[[["self"]],[[T],[R[24]]]]],[11,"into_owned",E,"Takes ownership of the pointee.",3,[[],["owned"]]],[11,"tag",E,R[967],3,[[["self"]],["usize"]]],[11,"with_tag",E,R[968],3,[[["self"],["usize"]],["shared"]]],[11,"new",E,"Creates a new collector.",4,[[],["self"]]],[11,"register",E,"Registers a new handle for the collector.",4,[[["self"]],["localhandle"]]],[11,"pin",E,"Pins the handle.",5,[[["self"]],["guard"]]],[11,R[969],E,"Returns `true` if the handle is pinned.",5,[[["self"]],["bool"]]],[11,R[970],E,"Returns the `Collector` associated with this handle.",5,[[["self"]],[R[970]]]],[11,"defer",E,R[971],6,[[["self"],["f"]]]],[11,"defer_unchecked",E,R[971],6,[[["self"],["f"]]]],[11,"defer_destroy",E,"Stores a destructor for an object so that it can be…",6,[[["shared"],["self"]]]],[11,"flush",E,"Clears up the thread-local cache of deferred functions by…",6,[[["self"]]]],[11,"repin",E,"Unpins and then immediately re-pins the thread.",6,[[["self"]]]],[11,"repin_after",E,"Temporarily unpins the thread, executes the given function…",6,[[["self"],["f"]],["r"]]],[11,R[970],E,"Returns the `Collector` associated with this guard.",6,[[["self"]],[[R[24],[R[970]]],[R[970]]]]],[8,R[978],E,"Memory orderings for compare-and-set operations.",N,N],[10,"success",E,"The ordering of the operation when it succeeds.",7,[[["self"]],[R[23]]]],[10,"failure",E,"The ordering of the operation when it fails.",7,[[["self"]],[R[23]]]],[8,"Pointer",E,"A trait for either `Owned` or `Shared` pointers.",N,N],[10,R[972],E,"Returns the machine representation of the pointer.",8,[[],["usize"]]],[10,R[973],E,R[974],8,[[["usize"]],["self"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[66],E,E,1,[[["self"]],[T]]],[11,R[67],E,E,1,[[[T],["self"]]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[66],E,E,2,[[["self"]],[T]]],[11,R[67],E,E,2,[[[T],["self"]]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[30]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[66],E,E,3,[[["self"]],[T]]],[11,R[67],E,E,3,[[[T],["self"]]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[30]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[66],E,E,4,[[["self"]],[T]]],[11,R[67],E,E,4,[[[T],["self"]]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[30]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[30]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[30]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,R[972],E,E,2,[[],["usize"]]],[11,R[973],E,R[974],2,[[["usize"]],["self"]]],[11,R[972],E,E,3,[[],["usize"]]],[11,R[973],E,E,3,[[["usize"]],["self"]]],[11,"eq",E,E,3,[[["self"]],["bool"]]],[11,"eq",E,"Checks if both handles point to the same collector.",4,[[["self"],[R[970]]],["bool"]]],[11,"clone",E,"Returns a copy of the atomic value.",1,[[["self"]],["self"]]],[11,"clone",E,E,2,[[["self"]],["self"]]],[11,"clone",E,E,3,[[["self"]],["self"]]],[11,"clone",E,"Creates another reference to the same garbage collector.",4,[[["self"]],["self"]]],[11,"cmp",E,E,3,[[["self"]],[R[23]]]],[11,"from",E,"Returns a new atomic pointer pointing to `owned`.",1,[[["owned"]],["self"]]],[11,"from",E,E,1,[[["box"]],["self"]]],[11,"from",E,E,1,[[[T]],["self"]]],[11,"from",E,"Returns a new atomic pointer pointing to `ptr`.",1,[[["shared"]],["self"]]],[11,"from",E,"Returns a new atomic pointer pointing to `raw`.",1,[[],["self"]]],[11,"from",E,E,2,[[[T]],["self"]]],[11,"from",E,"Returns a new owned pointer pointing to `b`.",2,[[["box"]],["self"]]],[11,"from",E,"Returns a new pointer pointing to `raw`.",3,[[],["self"]]],[11,"drop",E,E,2,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,R[62],E,E,3,[[["self"]],[[R[23]],[R[24],[R[23]]]]]],[11,"as_mut",E,E,2,[[["self"]],[T]]],[11,"as_ref",E,E,2,[[["self"]],[T]]],[11,R[222],E,E,1,[[],["self"]]],[11,R[222],E,E,3,[[],["self"]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,1,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,2,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,3,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,4,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,5,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,6,[[[R[12]],["self"]],[R[2]]]],[11,"deref",E,E,2,[[["self"]],[T]]],[11,"fmt",E,E,1,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,3,[[[R[12]],["self"]],[R[2]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]]],"p":[[3,R[975]],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,R[976]],[3,R[977]],[3,"Guard"],[8,R[978]],[8,"Pointer"]]};
searchIndex[R[997]]={"doc":"An implementation of the Aho-Corasick string search…","i":[[3,"Match",R[997],"Records a match in the search text.",N,N],[12,"pati",E,"The pattern index.",0,N],[12,"start",E,"The starting byte offset of the match in the search text.",0,N],[12,"end",E,"The ending byte offset of the match in the search text.",0,N],[3,"Matches",E,"An iterator of non-overlapping matches for in-memory text.",N,N],[3,R[1022],E,"An iterator of overlapping matches for in-memory text.",N,N],[3,R[1023],E,"An iterator of non-overlapping matches for streaming text.",N,N],[3,R[1024],E,"An iterator of overlapping matches for streaming text.",N,N],[3,R[1019],E,"A complete Aho-Corasick automaton.",N,N],[3,R[1021],E,"An Aho-Corasick finite automaton.",N,N],[3,"Dense",E,"State transitions that can be stored either sparsely or…",N,N],[3,"Sparse",E,"State transitions that are always sparse.",N,N],[11,"new",E,"Build a new expanded Aho-Corasick automaton from an…",1,[[[R[999]],["transitions"]],[R[1001]]]],[6,"StateIdx",E,"The integer type used for the state index.",N,N],[8,"Automaton",E,"An abstraction over automatons and their corresponding…",N,N],[10,R[1003],E,"Return the next state given the current state and next…",2,[[[R[998]],["u8"],["self"]],[R[998]]]],[10,"has_match",E,"Return true if and only if the given state and current…",2,[[[R[998]],["self"],["usize"]],["bool"]]],[10,"get_match",E,"Build a match given the current state, pattern index and…",2,[[[R[998]],["self"],["usize"]],["match"]]],[10,R[1002],E,"Return the set of bytes that have transitions in the root…",2,[[["self"]]]],[10,"patterns",E,"Returns all of the patterns matched by this automaton.",2,[[["self"]]]],[10,"pattern",E,"Returns the pattern indexed at `i`.",2,[[["self"],["usize"]],["p"]]],[11,"len",E,R[1007],2,[[["self"]],["usize"]]],[11,R[404],E,R[1008],2,[[["self"]],["bool"]]],[11,"find",E,R[1009],2,[[["q"],["self"]],["matches"]]],[11,R[1010],E,R[1011],2,[[["q"],["self"]],[R[1012]]]],[11,R[1013],E,R[1014],2,[[["self"],["read"]],[[R[1015]],["read"]]]],[11,R[1016],E,R[1017],2,[[["self"],["read"]],[["read"],[R[1018]]]]],[8,R[1020],E,"An abstraction over state transition strategies.",N,N],[10,"new",E,"Return a new state at the given depth.",3,[[["u32"]],["self"]]],[10,"goto",E,"Return the next state index given the next character.",3,[[["u8"],["self"]],[R[998]]]],[10,"set_goto",E,"Set the next state index for the character given.",3,[[["self"],[R[998]],["u8"]]]],[10,R[1006],E,"The memory use in bytes (on the heap) of this set of…",3,[[["self"]],["usize"]]],[11,R[1004],E,"Iterates over each state",3,[[["self"],["f"]]]],[11,R[1005],E,"Iterates over each non-fail state",3,[[["self"],["f"]]]],[11,"new",E,R[1000],4,[[["i"]],[["dense"],[R[999],["dense"]]]]],[11,"with_transitions",E,R[1000],4,[[["i"]],[R[999]]]],[11,"into_full",E,"Build out the entire automaton into a single matrix.",4,[[],[R[1001]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[66],E,E,0,[[["self"]],[T]]],[11,R[67],E,E,0,[[[T],["self"]]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[30]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[22],E,E,5,[[],["i"]]],[11,"into",E,E,5,[[],[U]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[30]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[22],E,E,6,[[],["i"]]],[11,"into",E,E,6,[[],[U]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[30]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[22],E,E,7,[[],["i"]]],[11,"into",E,E,7,[[],[U]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[30]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[22],E,E,8,[[],["i"]]],[11,"into",E,E,8,[[],[U]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[R[30]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[66],E,E,1,[[["self"]],[T]]],[11,R[67],E,E,1,[[[T],["self"]]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[30]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[66],E,E,4,[[["self"]],[T]]],[11,R[67],E,E,4,[[[T],["self"]]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[30]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[66],E,E,9,[[["self"]],[T]]],[11,R[67],E,E,9,[[[T],["self"]]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[29],E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"]],[R[30]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[66],E,E,10,[[["self"]],[T]]],[11,R[67],E,E,10,[[[T],["self"]]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[29],E,E,10,[[["self"]],[T]]],[11,R[15],E,E,10,[[["self"]],[R[30]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,R[1003],E,E,1,[[[R[998]],["u8"],["self"]],[R[998]]]],[11,"get_match",E,E,1,[[[R[998]],["self"],["usize"]],["match"]]],[11,"has_match",E,E,1,[[[R[998]],["self"],["usize"]],["bool"]]],[11,R[1002],E,E,1,[[["self"]]]],[11,"patterns",E,E,1,[[["self"]]]],[11,"pattern",E,E,1,[[["self"],["usize"]],["p"]]],[11,R[1003],E,E,4,[[[R[998]],["u8"],["self"]],[R[998]]]],[11,"get_match",E,E,4,[[[R[998]],["self"],["usize"]],["match"]]],[11,"has_match",E,E,4,[[[R[998]],["self"],["usize"]],["bool"]]],[11,R[1002],E,E,4,[[["self"]]]],[11,"patterns",E,E,4,[[["self"]]]],[11,"pattern",E,E,4,[[["self"],["usize"]],["p"]]],[11,"new",E,E,9,[[["u32"]],["dense"]]],[11,"goto",E,E,9,[[["u8"],["self"]],[R[998]]]],[11,"set_goto",E,E,9,[[["self"],[R[998]],["u8"]]]],[11,R[1006],E,E,9,[[["self"]],["usize"]]],[11,R[1004],E,E,9,[[["self"],["f"]]]],[11,R[1005],E,E,9,[[["self"],["f"]]]],[11,"new",E,E,10,[[["u32"]],["sparse"]]],[11,"goto",E,E,10,[[["u8"],["self"]],[R[998]]]],[11,"set_goto",E,E,10,[[["self"],[R[998]],["u8"]]]],[11,R[1006],E,E,10,[[["self"]],["usize"]]],[11,"eq",E,E,0,[[["self"],["match"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["match"]],["bool"]]],[11,"clone",E,E,0,[[["self"]],["match"]]],[11,"clone",E,E,1,[[["self"]],[R[1001]]]],[11,"clone",E,E,4,[[["self"]],[R[999]]]],[11,"clone",E,E,9,[[["self"]],["dense"]]],[11,"clone",E,E,10,[[["self"]],["sparse"]]],[11,"next",E,E,5,[[["self"]],[[R[24],["match"]],["match"]]]],[11,"next",E,E,7,[[["self"]],[[R[24],[R[2]]],[R[2],["match"]]]]],[11,"next",E,E,6,[[["self"]],[[R[24],["match"]],["match"]]]],[11,"next",E,E,8,[[["self"]],[[R[24],[R[2]]],[R[2],["match"]]]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,5,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,7,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,6,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,8,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,1,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,9,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,10,[[[R[12]],["self"]],[R[2]]]],[11,"fmt",E,E,4,[[[R[12]],["self"]],[R[2]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,R[357],E,"Create an automaton from an iterator of strings.",4,[[[T]],[R[999]]]],[11,"len",E,R[1007],2,[[["self"]],["usize"]]],[11,R[404],E,R[1008],2,[[["self"]],["bool"]]],[11,"find",E,R[1009],2,[[["q"],["self"]],["matches"]]],[11,R[1010],E,R[1011],2,[[["q"],["self"]],[R[1012]]]],[11,R[1013],E,R[1014],2,[[["self"],["read"]],[[R[1015]],["read"]]]],[11,R[1016],E,R[1017],2,[[["self"],["read"]],[["read"],[R[1018]]]]]],"p":[[3,"Match"],[3,R[1019]],[8,"Automaton"],[8,R[1020]],[3,R[1021]],[3,"Matches"],[3,R[1022]],[3,R[1023]],[3,R[1024]],[3,"Dense"],[3,"Sparse"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);